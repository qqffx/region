ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"main.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.my_initGPIO,"ax",%progbits
  17              		.align	1
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu fpv5-d16
  23              	my_initGPIO:
  24              	.LFB141:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** #include "main.h"
   2:Src/main.c    **** #include "stm32h7xx_hal.h"
   3:Src/main.c    **** #include "eth.h"
   4:Src/main.c    **** #include "usart.h"
   5:Src/main.c    **** #include "usb_device.h"
   6:Src/main.c    **** #include "gpio.h"
   7:Src/main.c    **** #include "usbd_cdc.h"
   8:Src/main.c    **** 
   9:Src/main.c    **** /* USER CODE BEGIN Includes */
  10:Src/main.c    **** 
  11:Src/main.c    **** /* USER CODE END Includes */
  12:Src/main.c    **** 
  13:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  14:Src/main.c    **** 
  15:Src/main.c    **** /* USER CODE BEGIN PV */
  16:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  17:Src/main.c    **** #define TIM2_CCR1_Address ((unsigned int)0x40000000 + 0x34)
  18:Src/main.c    **** #define DMA_BUFFER_SIZE   61440
  19:Src/main.c    **** #define SIZE 1024
  20:Src/main.c    **** #define Destination_Address ((unsigned int)0x30000000)
  21:Src/main.c    **** 
  22:Src/main.c    **** USBD_HandleTypeDef hUsbDeviceFS;
  23:Src/main.c    **** 
  24:Src/main.c    **** // TODO: why does this not zeroed array 
  25:Src/main.c    **** unsigned int buffer[DMA_BUFFER_SIZE] __attribute__((section(".orbita_buffer")));
  26:Src/main.c    **** unsigned int bufferIndex = 0;
  27:Src/main.c    **** unsigned int bufferValue = 0;
  28:Src/main.c    **** 
  29:Src/main.c    **** 
  30:Src/main.c    **** typedef struct {
  31:Src/main.c    ****   unsigned int NDTR;
  32:Src/main.c    ****   unsigned int circBufferCounter;
  33:Src/main.c    ****   unsigned int dmaFlag;
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 2


  34:Src/main.c    ****   unsigned int StartBufferEntry;
  35:Src/main.c    ****   
  36:Src/main.c    **** } DEBUG_STRUCT;
  37:Src/main.c    **** 
  38:Src/main.c    **** #define debugBufferLength 4
  39:Src/main.c    **** DEBUG_STRUCT debugBuffer[debugBufferLength];
  40:Src/main.c    **** unsigned int debugIndex = 0;
  41:Src/main.c    **** 
  42:Src/main.c    **** volatile unsigned int dmaFlag = 0;
  43:Src/main.c    **** volatile unsigned int flipFlag = 0;
  44:Src/main.c    **** 
  45:Src/main.c    **** char string[22] = "end\r\n";
  46:Src/main.c    **** unsigned int transmissionFlag = 0;
  47:Src/main.c    **** 
  48:Src/main.c    **** USBD_HandleTypeDef *usbDevice;
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE END PV */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  53:Src/main.c    **** void SystemClock_Config(void);
  54:Src/main.c    **** 
  55:Src/main.c    **** /* USER CODE BEGIN PFP */
  56:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE END PFP */
  59:Src/main.c    **** 
  60:Src/main.c    **** static void my_initClocks(void);
  61:Src/main.c    **** static void my_initGPIO(void);
  62:Src/main.c    **** static void my_DMA_init(void);
  63:Src/main.c    **** static void my_TIM2_initInputCaptureTimer(void);
  64:Src/main.c    **** static void my_initTIM6(void);
  65:Src/main.c    **** 
  66:Src/main.c    **** static void printArray(void);
  67:Src/main.c    **** static void zeroArray(void);
  68:Src/main.c    **** static void printDebugBuffer(void);
  69:Src/main.c    **** static void writeFile(void);
  70:Src/main.c    **** 
  71:Src/main.c    **** /* USER CODE BEGIN 0 */
  72:Src/main.c    **** 
  73:Src/main.c    **** 
  74:Src/main.c    **** /* USER CODE END 0 */
  75:Src/main.c    **** 
  76:Src/main.c    **** /**
  77:Src/main.c    ****   * @brief  The application entry point.
  78:Src/main.c    ****   *
  79:Src/main.c    ****   * @retval None
  80:Src/main.c    ****   */
  81:Src/main.c    **** int main(void)
  82:Src/main.c    **** {
  83:Src/main.c    **** 
  84:Src/main.c    ****   HAL_Init();
  85:Src/main.c    ****   
  86:Src/main.c    ****   SCB_DisableICache();
  87:Src/main.c    ****   SCB_DisableDCache();
  88:Src/main.c    ****   /*SCB_InvalidateICache();
  89:Src/main.c    ****   SCB_InvalidateDCache();
  90:Src/main.c    ****   SCB_EnableICache();
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 3


  91:Src/main.c    ****   SCB_EnableDCache();*/
  92:Src/main.c    **** 
  93:Src/main.c    ****   my_initClocks();
  94:Src/main.c    ****   my_initGPIO();
  95:Src/main.c    ****   
  96:Src/main.c    ****   MX_ETH_Init();
  97:Src/main.c    ****   MX_USART3_UART_Init();
  98:Src/main.c    ****   usbDevice = MX_USB_DEVICE_Init();
  99:Src/main.c    ****   
 100:Src/main.c    ****   zeroArray();
 101:Src/main.c    ****   
 102:Src/main.c    ****   HAL_Delay(2000);  
 103:Src/main.c    ****   printf("waiting\r\n");  
 104:Src/main.c    ****   while((strcmp(string, "send_data")) != 0);
 105:Src/main.c    ****   printf("start \r\n");  
 106:Src/main.c    ****   
 107:Src/main.c    ****   //my_DMA_init();
 108:Src/main.c    ****   //my_TIM2_initInputCaptureTimer();
 109:Src/main.c    ****   my_initTIM6();
 110:Src/main.c    ****   
 111:Src/main.c    ****   unsigned int circ_buffer_ptr = 0;
 112:Src/main.c    ****   unsigned int counter = 0;
 113:Src/main.c    ****   unsigned int stopFlag = 0;
 114:Src/main.c    ****   while (1)
 115:Src/main.c    ****   {
 116:Src/main.c    ****     if(!stopFlag) {
 117:Src/main.c    ****       for(int i = 0; i < 3; ++i) {
 118:Src/main.c    ****         writeFile();
 119:Src/main.c    ****       }
 120:Src/main.c    ****       counter = 1;
 121:Src/main.c    ****     }
 122:Src/main.c    ****       
 123:Src/main.c    ****     if(counter == 1) {
 124:Src/main.c    ****       counter = 0;
 125:Src/main.c    ****       stopFlag = 1;
 126:Src/main.c    ****       
 127:Src/main.c    ****       buffer[0] = 0x00646E65;
 128:Src/main.c    ****       CDC_Transmit_FS(buffer, SIZE*sizeof(unsigned int));
 129:Src/main.c    ****       while(((USBD_CDC_HandleTypeDef*)(hUsbDeviceFS.pClassData))->TxState != 0);
 130:Src/main.c    ****       //CDC_Transmit_FS(buffer, SIZE*sizeof(unsigned int));
 131:Src/main.c    ****       GPIOB->ODR |= (0x1 << 7);
 132:Src/main.c    ****       //return(1);
 133:Src/main.c    ****     }
 134:Src/main.c    ****     
 135:Src/main.c    ****   }// while
 136:Src/main.c    **** }// main
 137:Src/main.c    **** 
 138:Src/main.c    **** void TIM2_IRQHandler(void) {
 139:Src/main.c    ****   
 140:Src/main.c    ****   // reset interrupt flag
 141:Src/main.c    ****   TIM2->SR = 0;
 142:Src/main.c    ****   //GPIOB->ODR ^= (0x1 << 7);
 143:Src/main.c    ****   
 144:Src/main.c    ****   //tick = systick_ms;
 145:Src/main.c    ****   //flag++;
 146:Src/main.c    **** }
 147:Src/main.c    **** 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 4


 148:Src/main.c    **** void DMA1_Stream0_IRQHandler(void) {
 149:Src/main.c    ****   
 150:Src/main.c    ****   // clear interrupt flag
 151:Src/main.c    ****   DMA1->LIFCR |= (0x1 << 3) | (0x1 << 5);
 152:Src/main.c    ****   //TIM6->CR1 &= ~(0x1);
 153:Src/main.c    ****   GPIOB->ODR |= (0x1 << 7);
 154:Src/main.c    ****   dmaFlag++;
 155:Src/main.c    ****   flipFlag++;
 156:Src/main.c    ****   
 157:Src/main.c    **** }
 158:Src/main.c    **** 
 159:Src/main.c    **** void TIM6_DAC_IRQHandler(void) {
 160:Src/main.c    ****   // reset interrupt flag
 161:Src/main.c    ****   TIM6->SR &= ~(0x1 << 0);
 162:Src/main.c    ****   
 163:Src/main.c    ****   buffer[bufferIndex] = bufferValue;
 164:Src/main.c    ****   bufferValue += 5;
 165:Src/main.c    ****   bufferIndex = (++bufferIndex)%DMA_BUFFER_SIZE;
 166:Src/main.c    ****   // toggle pin
 167:Src/main.c    ****   //GPIOG->ODR ^= (0x1 << 0);
 168:Src/main.c    **** }
 169:Src/main.c    **** 
 170:Src/main.c    **** 
 171:Src/main.c    **** static void my_initGPIO(void) {
  26              		.loc 1 171 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
 172:Src/main.c    ****   // GPIO initialization
 173:Src/main.c    ****   // WARNING idk why but if deactivate some of them USB stop work, even if
 174:Src/main.c    ****   // designated pins (overcurrent\power_switch) still active
 175:Src/main.c    ****   RCC->AHB4ENR |= (1 << 0);
  31              		.loc 1 175 0
  32 0000 4C4B     		ldr	r3, .L2
  33 0002 D3F8E020 		ldr	r2, [r3, #224]
  34 0006 42F00102 		orr	r2, r2, #1
  35 000a C3F8E020 		str	r2, [r3, #224]
 176:Src/main.c    ****   RCC->AHB4ENR |= (1 << 1);
  36              		.loc 1 176 0
  37 000e D3F8E020 		ldr	r2, [r3, #224]
  38 0012 42F00202 		orr	r2, r2, #2
  39 0016 C3F8E020 		str	r2, [r3, #224]
 177:Src/main.c    ****   RCC->AHB4ENR |= (1 << 2);
  40              		.loc 1 177 0
  41 001a D3F8E020 		ldr	r2, [r3, #224]
  42 001e 42F00402 		orr	r2, r2, #4
  43 0022 C3F8E020 		str	r2, [r3, #224]
 178:Src/main.c    ****   RCC->AHB4ENR |= (1 << 3);
  44              		.loc 1 178 0
  45 0026 D3F8E020 		ldr	r2, [r3, #224]
  46 002a 42F00802 		orr	r2, r2, #8
  47 002e C3F8E020 		str	r2, [r3, #224]
 179:Src/main.c    ****   RCC->AHB4ENR |= (1 << 4);
  48              		.loc 1 179 0
  49 0032 D3F8E020 		ldr	r2, [r3, #224]
  50 0036 42F01002 		orr	r2, r2, #16
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 5


  51 003a C3F8E020 		str	r2, [r3, #224]
 180:Src/main.c    ****   RCC->AHB4ENR |= (1 << 6);
  52              		.loc 1 180 0
  53 003e D3F8E020 		ldr	r2, [r3, #224]
  54 0042 42F04002 		orr	r2, r2, #64
  55 0046 C3F8E020 		str	r2, [r3, #224]
 181:Src/main.c    ****   RCC->AHB4ENR |= (1 << 7);  
  56              		.loc 1 181 0
  57 004a D3F8E020 		ldr	r2, [r3, #224]
  58 004e 42F08002 		orr	r2, r2, #128
  59 0052 C3F8E020 		str	r2, [r3, #224]
 182:Src/main.c    ****   // configurate Blue_LD pin
 183:Src/main.c    ****   GPIOB->MODER &= ~(0x2 << 14);
  60              		.loc 1 183 0
  61 0056 384A     		ldr	r2, .L2+4
  62 0058 1168     		ldr	r1, [r2]
  63 005a 21F40041 		bic	r1, r1, #32768
  64 005e 1160     		str	r1, [r2]
 184:Src/main.c    ****   // configurate Red_LD pin
 185:Src/main.c    ****   GPIOB->MODER &= ~(0x2 << 28);
  65              		.loc 1 185 0
  66 0060 1168     		ldr	r1, [r2]
  67 0062 21F00051 		bic	r1, r1, #536870912
  68 0066 1160     		str	r1, [r2]
 186:Src/main.c    ****   // configurate toggle pin for INP/CAP
 187:Src/main.c    ****   GPIOG->MODER &= ~(0x2 << 0);
  69              		.loc 1 187 0
  70 0068 02F5A052 		add	r2, r2, #5120
  71 006c 1168     		ldr	r1, [r2]
  72 006e 21F00201 		bic	r1, r1, #2
  73 0072 1160     		str	r1, [r2]
 188:Src/main.c    ****   // configurate external LD pin
 189:Src/main.c    ****   GPIOE->MODER &= ~(0x2 << 0);
  74              		.loc 1 189 0
  75 0074 3149     		ldr	r1, .L2+8
  76 0076 0868     		ldr	r0, [r1]
  77 0078 20F00200 		bic	r0, r0, #2
  78 007c 0860     		str	r0, [r1]
 190:Src/main.c    ****   // Usb powerSwitch ON pin (reset)
 191:Src/main.c    ****   GPIOG->ODR &= ~(0x1 << 6);
  79              		.loc 1 191 0
  80 007e 5069     		ldr	r0, [r2, #20]
  81 0080 20F04000 		bic	r0, r0, #64
  82 0084 5061     		str	r0, [r2, #20]
 192:Src/main.c    ****   // configure usb power switch on PIT
 193:Src/main.c    ****   GPIOG->MODER &= ~(0x2 << 12);
  83              		.loc 1 193 0
  84 0086 1068     		ldr	r0, [r2]
  85 0088 20F40050 		bic	r0, r0, #8192
  86 008c 1060     		str	r0, [r2]
 194:Src/main.c    ****   GPIOG->PUPDR &= ~(0x3 << 12);
  87              		.loc 1 194 0
  88 008e D068     		ldr	r0, [r2, #12]
  89 0090 20F44050 		bic	r0, r0, #12288
  90 0094 D060     		str	r0, [r2, #12]
 195:Src/main.c    ****   GPIOG->OSPEEDR &= ~(0x3 << 12);
  91              		.loc 1 195 0
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 6


  92 0096 9068     		ldr	r0, [r2, #8]
  93 0098 20F44050 		bic	r0, r0, #12288
  94 009c 9060     		str	r0, [r2, #8]
 196:Src/main.c    ****   // configure usb overcurrent pin
 197:Src/main.c    ****   GPIOG->MODER &= ~(0x3 << 14);
  95              		.loc 1 197 0
  96 009e 1068     		ldr	r0, [r2]
  97 00a0 20F44040 		bic	r0, r0, #49152
  98 00a4 1060     		str	r0, [r2]
 198:Src/main.c    ****   GPIOG->PUPDR &= ~(0x3 << 14);
  99              		.loc 1 198 0
 100 00a6 D068     		ldr	r0, [r2, #12]
 101 00a8 20F44040 		bic	r0, r0, #49152
 102 00ac D060     		str	r0, [r2, #12]
 199:Src/main.c    ****   // deactivate pin
 200:Src/main.c    ****   GPIOG->ODR &= ~(0x1 << 0);
 103              		.loc 1 200 0
 104 00ae 5069     		ldr	r0, [r2, #20]
 105 00b0 20F00100 		bic	r0, r0, #1
 106 00b4 5061     		str	r0, [r2, #20]
 201:Src/main.c    ****   GPIOE->ODR &= ~(0x1 << 0);
 107              		.loc 1 201 0
 108 00b6 4A69     		ldr	r2, [r1, #20]
 109 00b8 22F00102 		bic	r2, r2, #1
 110 00bc 4A61     		str	r2, [r1, #20]
 202:Src/main.c    ****   // NOTE: config PA5-leg as input for InpCap TIM2
 203:Src/main.c    ****   // clear PA5 part of MODER register
 204:Src/main.c    ****   GPIOA->MODER &= ~(0x3 << 10);
 111              		.loc 1 204 0
 112 00be 204A     		ldr	r2, .L2+12
 113 00c0 1168     		ldr	r1, [r2]
 114 00c2 21F44061 		bic	r1, r1, #3072
 115 00c6 1160     		str	r1, [r2]
 205:Src/main.c    ****   // put PA5 in alternate function mode
 206:Src/main.c    ****   GPIOA->MODER |= (0x2 << 10);
 116              		.loc 1 206 0
 117 00c8 1168     		ldr	r1, [r2]
 118 00ca 41F40061 		orr	r1, r1, #2048
 119 00ce 1160     		str	r1, [r2]
 207:Src/main.c    ****   // config PA5 for using (AF1 - TIM2_CH1)
 208:Src/main.c    ****   GPIOA->AFR[0] |= (0x1 << 20);
 120              		.loc 1 208 0
 121 00d0 116A     		ldr	r1, [r2, #32]
 122 00d2 41F48011 		orr	r1, r1, #1048576
 123 00d6 1162     		str	r1, [r2, #32]
 209:Src/main.c    ****   // config PA5 (nopull)
 210:Src/main.c    ****   GPIOA->PUPDR &= ~(0x3 << 10);
 124              		.loc 1 210 0
 125 00d8 D168     		ldr	r1, [r2, #12]
 126 00da 21F44061 		bic	r1, r1, #3072
 127 00de D160     		str	r1, [r2, #12]
 211:Src/main.c    ****   // config PA5 (VERY HIGH FREQ)
 212:Src/main.c    ****   GPIOA->OSPEEDR |= (0x3 << 10);
 128              		.loc 1 212 0
 129 00e0 9168     		ldr	r1, [r2, #8]
 130 00e2 41F44061 		orr	r1, r1, #3072
 131 00e6 9160     		str	r1, [r2, #8]
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 7


 213:Src/main.c    ****   // NOTE: config PC13-leg as external interrupt for user button (blue button)
 214:Src/main.c    ****   // enable clock to SysCFG
 215:Src/main.c    ****   RCC->APB4ENR |= (0x1 << 1);
 132              		.loc 1 215 0
 133 00e8 D3F8F420 		ldr	r2, [r3, #244]
 134 00ec 42F00202 		orr	r2, r2, #2
 135 00f0 C3F8F420 		str	r2, [r3, #244]
 216:Src/main.c    ****   // config pin as input
 217:Src/main.c    ****   GPIOC->MODER &= ~(0x3 << 26);
 136              		.loc 1 217 0
 137 00f4 A3F57053 		sub	r3, r3, #15360
 138 00f8 1A68     		ldr	r2, [r3]
 139 00fa 22F04062 		bic	r2, r2, #201326592
 140 00fe 1A60     		str	r2, [r3]
 218:Src/main.c    ****   // set PC13 pin as source of External Interrupt
 219:Src/main.c    ****   SYSCFG->EXTICR[3] |= (0x2 << 4);
 141              		.loc 1 219 0
 142 0100 1049     		ldr	r1, .L2+16
 143 0102 4A69     		ldr	r2, [r1, #20]
 144 0104 42F02002 		orr	r2, r2, #32
 145 0108 4A61     		str	r2, [r1, #20]
 220:Src/main.c    ****   // enable interrupt generation to PC13 leg via masking
 221:Src/main.c    ****   EXTI_D1->IMR1 |= (0x1 << 13);
 146              		.loc 1 221 0
 147 010a A1F56071 		sub	r1, r1, #896
 148 010e 0A68     		ldr	r2, [r1]
 149 0110 42F40052 		orr	r2, r2, #8192
 150 0114 0A60     		str	r2, [r1]
 222:Src/main.c    ****   // use (Rising edge) for PC13 event generation -> clear Falling edge register
 223:Src/main.c    ****   EXTI->FTSR1 &= ~(0x1 << 13);
 151              		.loc 1 223 0
 152 0116 4FF0B042 		mov	r2, #1476395008
 153 011a 5168     		ldr	r1, [r2, #4]
 154 011c 21F40051 		bic	r1, r1, #8192
 155 0120 5160     		str	r1, [r2, #4]
 224:Src/main.c    ****   // use (Rising edge) for PC13
 225:Src/main.c    ****   EXTI->RTSR1 |= (0x1 << 13);
 156              		.loc 1 225 0
 157 0122 1168     		ldr	r1, [r2]
 158 0124 41F40051 		orr	r1, r1, #8192
 159 0128 1160     		str	r1, [r2]
 226:Src/main.c    ****   // config PC13 (NOPULL)
 227:Src/main.c    ****   GPIOC->PUPDR &= ~(0x3 << 26);
 160              		.loc 1 227 0
 161 012a DA68     		ldr	r2, [r3, #12]
 162 012c 22F04062 		bic	r2, r2, #201326592
 163 0130 DA60     		str	r2, [r3, #12]
 228:Src/main.c    **** }
 164              		.loc 1 228 0
 165 0132 7047     		bx	lr
 166              	.L3:
 167              		.align	2
 168              	.L2:
 169 0134 00440258 		.word	1476543488
 170 0138 00040258 		.word	1476527104
 171 013c 00100258 		.word	1476530176
 172 0140 00000258 		.word	1476526080
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 8


 173 0144 00040058 		.word	1476396032
 174              		.cfi_endproc
 175              	.LFE141:
 177              		.section	.text.my_initTIM6,"ax",%progbits
 178              		.align	1
 179              		.syntax unified
 180              		.thumb
 181              		.thumb_func
 182              		.fpu fpv5-d16
 184              	my_initTIM6:
 185              	.LFB144:
 229:Src/main.c    **** 
 230:Src/main.c    **** static void my_TIM2_initInputCaptureTimer(void) {
 231:Src/main.c    ****   // enable clock source for timer
 232:Src/main.c    ****   RCC->APB1LENR |= (0x1 << 0);
 233:Src/main.c    ****   // set prescaler to 200
 234:Src/main.c    ****   TIM2->PSC = 1 - 1;
 235:Src/main.c    ****   // choose TIM2_CH1 input
 236:Src/main.c    ****   TIM2->TISEL |= (0x0 << 0);
 237:Src/main.c    ****   // set channel 1 as input mapped on TI1
 238:Src/main.c    ****   TIM2->CCMR1 |= (0x1 << 0);
 239:Src/main.c    ****   // digital filter length (0)
 240:Src/main.c    ****   TIM2->CCMR1 |= (0x0 << 4);
 241:Src/main.c    ****   // rising & falling edge
 242:Src/main.c    ****   TIM2->CCER |= (0x1 << 1);
 243:Src/main.c    ****   TIM2->CCER |= (0x1 << 3);
 244:Src/main.c    ****   // prescaler to (0)
 245:Src/main.c    ****   TIM2->CCMR1 |= (0x0 << 2);
 246:Src/main.c    ****   // enable DMA interrupt &  disable Capture/Compare interrupt
 247:Src/main.c    ****   TIM2->DIER |= (0x1 << 9) | (0x0 << 1);
 248:Src/main.c    ****   // capture enabled
 249:Src/main.c    ****   TIM2->CCER |= (0x1 << 0);
 250:Src/main.c    ****   // reset registers WARNING: need for preloading PSC  
 251:Src/main.c    ****   TIM2->EGR |= (0x1 << 0);
 252:Src/main.c    ****   // enable TIM3 timer
 253:Src/main.c    ****   TIM2->CR1 |= TIM_CR1_CEN;
 254:Src/main.c    ****   // enable interrupt request
 255:Src/main.c    ****   // NVIC_EnableIRQ(TIM2_IRQn);
 256:Src/main.c    ****   // set priority
 257:Src/main.c    ****   // NVIC_SetPriority(TIM2_IRQn, 1);
 258:Src/main.c    **** }
 259:Src/main.c    **** 
 260:Src/main.c    **** static void my_DMA_init(void) {
 261:Src/main.c    ****   // enable DMA1 clocking
 262:Src/main.c    ****   RCC->AHB1ENR |= (0x1 << 0);
 263:Src/main.c    ****   // clear EN bit to 0
 264:Src/main.c    ****   DMA1_Stream0->CR &= ~(0x1 << 0);
 265:Src/main.c    ****   // safeguard EN bit reset
 266:Src/main.c    ****   while (DMA1_Stream0->CR & 0x1);
 267:Src/main.c    ****   // check LISR HISR registers
 268:Src/main.c    ****   if ((DMA1->HISR == 0) && (DMA1->LISR == 0))
 269:Src/main.c    ****     printf("status registers is clear\r\n");
 270:Src/main.c    ****   else
 271:Src/main.c    ****     printf("status register is not clear -- DMA wont start\r\n");
 272:Src/main.c    ****   // set peripheral addres
 273:Src/main.c    ****   DMA1_Stream0->PAR = TIM2_CCR1_Address;
 274:Src/main.c    ****   // set memory addres
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 9


 275:Src/main.c    ****   //DMA1_Stream0->M0AR = Destination_Address;
 276:Src/main.c    ****   DMA1_Stream0->M0AR = (unsigned int)buffer;
 277:Src/main.c    ****   // set total number of data items
 278:Src/main.c    ****   DMA1_Stream0->NDTR = DMA_BUFFER_SIZE - 1;
 279:Src/main.c    ****   // NOTE: configurate TIM2_CH1 interrupt route
 280:Src/main.c    ****   // set DMAMUX to route request (TIM2_CH1)
 281:Src/main.c    ****   DMAMUX1_Channel0->CCR |= 18U;
 282:Src/main.c    ****   // set DMA priority (very high)
 283:Src/main.c    ****   DMA1_Stream0->CR |= (0x3 << 16);
 284:Src/main.c    ****   // set memory data size (32)
 285:Src/main.c    ****   DMA1_Stream0->CR |= (0x2 << 13);
 286:Src/main.c    ****   // set peripheral data size (32)
 287:Src/main.c    ****   DMA1_Stream0->CR |= (0x2 << 11);
 288:Src/main.c    ****   // set memory addres increment  (enable)
 289:Src/main.c    ****   DMA1_Stream0->CR |= (0x1 << 10);
 290:Src/main.c    ****   // set peripheral addres increment (disable)
 291:Src/main.c    ****   DMA1_Stream0->CR |= (0x0 << 9);
 292:Src/main.c    ****   // set circular buffer mode (disable)
 293:Src/main.c    ****   DMA1_Stream0->CR |= (0x0 << 8);
 294:Src/main.c    ****   // set data transfer direction (peripheral to memory)
 295:Src/main.c    ****   DMA1_Stream0->CR |= (0x0 << 6);
 296:Src/main.c    ****   // set transfer complete interrupt
 297:Src/main.c    ****   DMA1_Stream0->CR |= (0x1 << 4);
 298:Src/main.c    ****   // set transfer error interrupt
 299:Src/main.c    ****   DMA1_Stream0->CR |= (0x1 << 2);
 300:Src/main.c    ****   // enable DMA1
 301:Src/main.c    ****   DMA1_Stream0->CR |= (0x1 << 0);
 302:Src/main.c    ****   // enable IRQ
 303:Src/main.c    ****   NVIC_EnableIRQ(DMA1_Stream0_IRQn);
 304:Src/main.c    ****   NVIC_SetPriority(DMA1_Stream0_IRQn, 0);
 305:Src/main.c    ****   printf("DMA1_Stream0 %lu \r\n", (DMA1_Stream0->CR & 0x1));
 306:Src/main.c    ****   printf("DMA1_Stream0 CIRC %lu \r\n", (DMA1_Stream0->CR >> 8) & 0x1);
 307:Src/main.c    **** }
 308:Src/main.c    **** 
 309:Src/main.c    **** 
 310:Src/main.c    **** // this part configurate TIM6 timer interrupt (TIM6_DAC_IRQHandler)
 311:Src/main.c    **** static void my_initTIM6(void) {
 186              		.loc 1 311 0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190              		@ link register save eliminated.
 312:Src/main.c    ****   //printf("inside init \r\n");
 313:Src/main.c    ****   // start sending CLOCK to TIM6
 314:Src/main.c    ****   RCC->APB1LENR |= (1 << 4);
 191              		.loc 1 314 0
 192 0000 0E4A     		ldr	r2, .L5
 193 0002 D2F8E830 		ldr	r3, [r2, #232]
 194 0006 43F01003 		orr	r3, r3, #16
 195 000a C2F8E830 		str	r3, [r2, #232]
 315:Src/main.c    ****   // value timer count must reach before interrupt
 316:Src/main.c    ****   // now it should be approx (1 sec) (200Mhz apb1-timer clock / PSC / ARR = 1 Hz)
 317:Src/main.c    ****   // WARNING: -1 bcoz of the counter architecture -> he make 0 to 10000 same for PSC
 318:Src/main.c    ****   TIM6->ARR = 10 - 1;
 196              		.loc 1 318 0
 197 000e 0C4B     		ldr	r3, .L5+4
 198 0010 0922     		movs	r2, #9
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 10


 199 0012 DA62     		str	r2, [r3, #44]
 319:Src/main.c    ****   // prescaler clock that divide APB1 timers clock
 320:Src/main.c    ****   TIM6->PSC = 50 - 1;
 200              		.loc 1 320 0
 201 0014 3122     		movs	r2, #49
 202 0016 1A85     		strh	r2, [r3, #40]	@ movhi
 321:Src/main.c    ****   // enable interrupt
 322:Src/main.c    ****   TIM6->DIER |= TIM_DIER_UIE | TIM_DIER_UDE;
 203              		.loc 1 322 0
 204 0018 D968     		ldr	r1, [r3, #12]
 205 001a 40F20112 		movw	r2, #257
 206 001e 0A43     		orrs	r2, r2, r1
 207 0020 DA60     		str	r2, [r3, #12]
 208              	.LVL0:
 209              	.LBB42:
 210              	.LBB43:
 211              		.file 2 "Drivers/CMSIS/Include/core_cm7.h"
   1:Drivers/CMSIS/Include/core_cm7.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm7.h ****  * @file     core_cm7.h
   3:Drivers/CMSIS/Include/core_cm7.h ****  * @brief    CMSIS Cortex-M7 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm7.h ****  * @version  V5.0.1
   5:Drivers/CMSIS/Include/core_cm7.h ****  * @date     25. November 2016
   6:Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm7.h **** /*
   8:Drivers/CMSIS/Include/core_cm7.h ****  * Copyright (c) 2009-2016 ARM Limited. All rights reserved.
   9:Drivers/CMSIS/Include/core_cm7.h ****  *
  10:Drivers/CMSIS/Include/core_cm7.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/core_cm7.h ****  *
  12:Drivers/CMSIS/Include/core_cm7.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/core_cm7.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/core_cm7.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/core_cm7.h ****  *
  16:Drivers/CMSIS/Include/core_cm7.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/core_cm7.h ****  *
  18:Drivers/CMSIS/Include/core_cm7.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/core_cm7.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/core_cm7.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/core_cm7.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/core_cm7.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/core_cm7.h ****  */
  24:Drivers/CMSIS/Include/core_cm7.h **** 
  25:Drivers/CMSIS/Include/core_cm7.h **** #if   defined ( __ICCARM__ )
  26:Drivers/CMSIS/Include/core_cm7.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  27:Drivers/CMSIS/Include/core_cm7.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  28:Drivers/CMSIS/Include/core_cm7.h ****   #pragma clang system_header   /* treat file as system include file */
  29:Drivers/CMSIS/Include/core_cm7.h **** #endif
  30:Drivers/CMSIS/Include/core_cm7.h **** 
  31:Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CORE_CM7_H_GENERIC
  32:Drivers/CMSIS/Include/core_cm7.h **** #define __CORE_CM7_H_GENERIC
  33:Drivers/CMSIS/Include/core_cm7.h **** 
  34:Drivers/CMSIS/Include/core_cm7.h **** #include <stdint.h>
  35:Drivers/CMSIS/Include/core_cm7.h **** 
  36:Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
  37:Drivers/CMSIS/Include/core_cm7.h ****  extern "C" {
  38:Drivers/CMSIS/Include/core_cm7.h **** #endif
  39:Drivers/CMSIS/Include/core_cm7.h **** 
  40:Drivers/CMSIS/Include/core_cm7.h **** /**
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 11


  41:Drivers/CMSIS/Include/core_cm7.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:Drivers/CMSIS/Include/core_cm7.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:Drivers/CMSIS/Include/core_cm7.h **** 
  44:Drivers/CMSIS/Include/core_cm7.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:Drivers/CMSIS/Include/core_cm7.h ****      Function definitions in header files are used to allow 'inlining'.
  46:Drivers/CMSIS/Include/core_cm7.h **** 
  47:Drivers/CMSIS/Include/core_cm7.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:Drivers/CMSIS/Include/core_cm7.h ****      Unions are used for effective representation of core registers.
  49:Drivers/CMSIS/Include/core_cm7.h **** 
  50:Drivers/CMSIS/Include/core_cm7.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:Drivers/CMSIS/Include/core_cm7.h ****      Function-like macros are used to allow more efficient code.
  52:Drivers/CMSIS/Include/core_cm7.h ****  */
  53:Drivers/CMSIS/Include/core_cm7.h **** 
  54:Drivers/CMSIS/Include/core_cm7.h **** 
  55:Drivers/CMSIS/Include/core_cm7.h **** /*******************************************************************************
  56:Drivers/CMSIS/Include/core_cm7.h ****  *                 CMSIS definitions
  57:Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
  58:Drivers/CMSIS/Include/core_cm7.h **** /**
  59:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup Cortex_M7
  60:Drivers/CMSIS/Include/core_cm7.h ****   @{
  61:Drivers/CMSIS/Include/core_cm7.h ****  */
  62:Drivers/CMSIS/Include/core_cm7.h **** 
  63:Drivers/CMSIS/Include/core_cm7.h **** /*  CMSIS CM7 definitions */
  64:Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_MAIN  ( 5U)                                      /*!< [31:16] CMSIS HAL
  65:Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_SUB   ( 0U)                                      /*!< [15:0]  CMSIS HAL
  66:Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION       ((__CM7_CMSIS_VERSION_MAIN << 16U) | \
  67:Drivers/CMSIS/Include/core_cm7.h ****                                     __CM7_CMSIS_VERSION_SUB           )      /*!< CMSIS HAL version
  68:Drivers/CMSIS/Include/core_cm7.h **** 
  69:Drivers/CMSIS/Include/core_cm7.h **** #define __CORTEX_M                (7U)                                       /*!< Cortex-M Core */
  70:Drivers/CMSIS/Include/core_cm7.h **** 
  71:Drivers/CMSIS/Include/core_cm7.h **** /** __FPU_USED indicates whether an FPU is used or not.
  72:Drivers/CMSIS/Include/core_cm7.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  73:Drivers/CMSIS/Include/core_cm7.h **** */
  74:Drivers/CMSIS/Include/core_cm7.h **** #if defined ( __CC_ARM )
  75:Drivers/CMSIS/Include/core_cm7.h ****   #if defined __TARGET_FPU_VFP
  76:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  77:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
  78:Drivers/CMSIS/Include/core_cm7.h ****     #else
  79:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  80:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
  81:Drivers/CMSIS/Include/core_cm7.h ****     #endif
  82:Drivers/CMSIS/Include/core_cm7.h ****   #else
  83:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
  84:Drivers/CMSIS/Include/core_cm7.h ****   #endif
  85:Drivers/CMSIS/Include/core_cm7.h **** 
  86:Drivers/CMSIS/Include/core_cm7.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  87:Drivers/CMSIS/Include/core_cm7.h ****   #if defined __ARM_PCS_VFP
  88:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  89:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
  90:Drivers/CMSIS/Include/core_cm7.h ****     #else
  91:Drivers/CMSIS/Include/core_cm7.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  92:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
  93:Drivers/CMSIS/Include/core_cm7.h ****     #endif
  94:Drivers/CMSIS/Include/core_cm7.h ****   #else
  95:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
  96:Drivers/CMSIS/Include/core_cm7.h ****   #endif
  97:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 12


  98:Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __GNUC__ )
  99:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 100:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 101:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 102:Drivers/CMSIS/Include/core_cm7.h ****     #else
 103:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 104:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 105:Drivers/CMSIS/Include/core_cm7.h ****     #endif
 106:Drivers/CMSIS/Include/core_cm7.h ****   #else
 107:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 108:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 109:Drivers/CMSIS/Include/core_cm7.h **** 
 110:Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __ICCARM__ )
 111:Drivers/CMSIS/Include/core_cm7.h ****   #if defined __ARMVFP__
 112:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 113:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 114:Drivers/CMSIS/Include/core_cm7.h ****     #else
 115:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 116:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 117:Drivers/CMSIS/Include/core_cm7.h ****     #endif
 118:Drivers/CMSIS/Include/core_cm7.h ****   #else
 119:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 120:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 121:Drivers/CMSIS/Include/core_cm7.h **** 
 122:Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __TI_ARM__ )
 123:Drivers/CMSIS/Include/core_cm7.h ****   #if defined __TI_VFP_SUPPORT__
 124:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 125:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 126:Drivers/CMSIS/Include/core_cm7.h ****     #else
 127:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 128:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 129:Drivers/CMSIS/Include/core_cm7.h ****     #endif
 130:Drivers/CMSIS/Include/core_cm7.h ****   #else
 131:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 132:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 133:Drivers/CMSIS/Include/core_cm7.h **** 
 134:Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __TASKING__ )
 135:Drivers/CMSIS/Include/core_cm7.h ****   #if defined __FPU_VFP__
 136:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 137:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 138:Drivers/CMSIS/Include/core_cm7.h ****     #else
 139:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 140:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 141:Drivers/CMSIS/Include/core_cm7.h ****     #endif
 142:Drivers/CMSIS/Include/core_cm7.h ****   #else
 143:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 144:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 145:Drivers/CMSIS/Include/core_cm7.h **** 
 146:Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __CSMC__ )
 147:Drivers/CMSIS/Include/core_cm7.h ****   #if ( __CSMC__ & 0x400U)
 148:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 149:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 150:Drivers/CMSIS/Include/core_cm7.h ****     #else
 151:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 152:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 153:Drivers/CMSIS/Include/core_cm7.h ****     #endif
 154:Drivers/CMSIS/Include/core_cm7.h ****   #else
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 13


 155:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 156:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 157:Drivers/CMSIS/Include/core_cm7.h **** 
 158:Drivers/CMSIS/Include/core_cm7.h **** #endif
 159:Drivers/CMSIS/Include/core_cm7.h **** 
 160:Drivers/CMSIS/Include/core_cm7.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 161:Drivers/CMSIS/Include/core_cm7.h **** 
 162:Drivers/CMSIS/Include/core_cm7.h **** 
 163:Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 164:Drivers/CMSIS/Include/core_cm7.h **** }
 165:Drivers/CMSIS/Include/core_cm7.h **** #endif
 166:Drivers/CMSIS/Include/core_cm7.h **** 
 167:Drivers/CMSIS/Include/core_cm7.h **** #endif /* __CORE_CM7_H_GENERIC */
 168:Drivers/CMSIS/Include/core_cm7.h **** 
 169:Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CMSIS_GENERIC
 170:Drivers/CMSIS/Include/core_cm7.h **** 
 171:Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CORE_CM7_H_DEPENDANT
 172:Drivers/CMSIS/Include/core_cm7.h **** #define __CORE_CM7_H_DEPENDANT
 173:Drivers/CMSIS/Include/core_cm7.h **** 
 174:Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 175:Drivers/CMSIS/Include/core_cm7.h ****  extern "C" {
 176:Drivers/CMSIS/Include/core_cm7.h **** #endif
 177:Drivers/CMSIS/Include/core_cm7.h **** 
 178:Drivers/CMSIS/Include/core_cm7.h **** /* check device defines and use defaults */
 179:Drivers/CMSIS/Include/core_cm7.h **** #if defined __CHECK_DEVICE_DEFINES
 180:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __CM7_REV
 181:Drivers/CMSIS/Include/core_cm7.h ****     #define __CM7_REV               0x0000U
 182:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__CM7_REV not defined in device header file; using default!"
 183:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 184:Drivers/CMSIS/Include/core_cm7.h **** 
 185:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __FPU_PRESENT
 186:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_PRESENT             0U
 187:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 188:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 189:Drivers/CMSIS/Include/core_cm7.h **** 
 190:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __MPU_PRESENT
 191:Drivers/CMSIS/Include/core_cm7.h ****     #define __MPU_PRESENT             0U
 192:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 193:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 194:Drivers/CMSIS/Include/core_cm7.h **** 
 195:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __ICACHE_PRESENT
 196:Drivers/CMSIS/Include/core_cm7.h ****     #define __ICACHE_PRESENT          0U
 197:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__ICACHE_PRESENT not defined in device header file; using default!"
 198:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 199:Drivers/CMSIS/Include/core_cm7.h **** 
 200:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __DCACHE_PRESENT
 201:Drivers/CMSIS/Include/core_cm7.h ****     #define __DCACHE_PRESENT          0U
 202:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__DCACHE_PRESENT not defined in device header file; using default!"
 203:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 204:Drivers/CMSIS/Include/core_cm7.h **** 
 205:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __DTCM_PRESENT
 206:Drivers/CMSIS/Include/core_cm7.h ****     #define __DTCM_PRESENT            0U
 207:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__DTCM_PRESENT        not defined in device header file; using default!"
 208:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 209:Drivers/CMSIS/Include/core_cm7.h **** 
 210:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __NVIC_PRIO_BITS
 211:Drivers/CMSIS/Include/core_cm7.h ****     #define __NVIC_PRIO_BITS          3U
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 14


 212:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 213:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 214:Drivers/CMSIS/Include/core_cm7.h **** 
 215:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __Vendor_SysTickConfig
 216:Drivers/CMSIS/Include/core_cm7.h ****     #define __Vendor_SysTickConfig    0U
 217:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 218:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 219:Drivers/CMSIS/Include/core_cm7.h **** #endif
 220:Drivers/CMSIS/Include/core_cm7.h **** 
 221:Drivers/CMSIS/Include/core_cm7.h **** /* IO definitions (access restrictions to peripheral registers) */
 222:Drivers/CMSIS/Include/core_cm7.h **** /**
 223:Drivers/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 224:Drivers/CMSIS/Include/core_cm7.h **** 
 225:Drivers/CMSIS/Include/core_cm7.h ****     <strong>IO Type Qualifiers</strong> are used
 226:Drivers/CMSIS/Include/core_cm7.h ****     \li to specify the access to peripheral variables.
 227:Drivers/CMSIS/Include/core_cm7.h ****     \li for automatic generation of peripheral register debug information.
 228:Drivers/CMSIS/Include/core_cm7.h **** */
 229:Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 230:Drivers/CMSIS/Include/core_cm7.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 231:Drivers/CMSIS/Include/core_cm7.h **** #else
 232:Drivers/CMSIS/Include/core_cm7.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 233:Drivers/CMSIS/Include/core_cm7.h **** #endif
 234:Drivers/CMSIS/Include/core_cm7.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 235:Drivers/CMSIS/Include/core_cm7.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 236:Drivers/CMSIS/Include/core_cm7.h **** 
 237:Drivers/CMSIS/Include/core_cm7.h **** /* following defines should be used for structure members */
 238:Drivers/CMSIS/Include/core_cm7.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 239:Drivers/CMSIS/Include/core_cm7.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 240:Drivers/CMSIS/Include/core_cm7.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 241:Drivers/CMSIS/Include/core_cm7.h **** 
 242:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group Cortex_M7 */
 243:Drivers/CMSIS/Include/core_cm7.h **** 
 244:Drivers/CMSIS/Include/core_cm7.h **** 
 245:Drivers/CMSIS/Include/core_cm7.h **** 
 246:Drivers/CMSIS/Include/core_cm7.h **** /*******************************************************************************
 247:Drivers/CMSIS/Include/core_cm7.h ****  *                 Register Abstraction
 248:Drivers/CMSIS/Include/core_cm7.h ****   Core Register contain:
 249:Drivers/CMSIS/Include/core_cm7.h ****   - Core Register
 250:Drivers/CMSIS/Include/core_cm7.h ****   - Core NVIC Register
 251:Drivers/CMSIS/Include/core_cm7.h ****   - Core SCB Register
 252:Drivers/CMSIS/Include/core_cm7.h ****   - Core SysTick Register
 253:Drivers/CMSIS/Include/core_cm7.h ****   - Core Debug Register
 254:Drivers/CMSIS/Include/core_cm7.h ****   - Core MPU Register
 255:Drivers/CMSIS/Include/core_cm7.h ****   - Core FPU Register
 256:Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
 257:Drivers/CMSIS/Include/core_cm7.h **** /**
 258:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 259:Drivers/CMSIS/Include/core_cm7.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 260:Drivers/CMSIS/Include/core_cm7.h **** */
 261:Drivers/CMSIS/Include/core_cm7.h **** 
 262:Drivers/CMSIS/Include/core_cm7.h **** /**
 263:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
 264:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 265:Drivers/CMSIS/Include/core_cm7.h ****   \brief      Core Register type definitions.
 266:Drivers/CMSIS/Include/core_cm7.h ****   @{
 267:Drivers/CMSIS/Include/core_cm7.h ****  */
 268:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 15


 269:Drivers/CMSIS/Include/core_cm7.h **** /**
 270:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 271:Drivers/CMSIS/Include/core_cm7.h ****  */
 272:Drivers/CMSIS/Include/core_cm7.h **** typedef union
 273:Drivers/CMSIS/Include/core_cm7.h **** {
 274:Drivers/CMSIS/Include/core_cm7.h ****   struct
 275:Drivers/CMSIS/Include/core_cm7.h ****   {
 276:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 277:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 278:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 279:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 280:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 281:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 282:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 283:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 284:Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 285:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 286:Drivers/CMSIS/Include/core_cm7.h **** } APSR_Type;
 287:Drivers/CMSIS/Include/core_cm7.h **** 
 288:Drivers/CMSIS/Include/core_cm7.h **** /* APSR Register Definitions */
 289:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 290:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 291:Drivers/CMSIS/Include/core_cm7.h **** 
 292:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 293:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 294:Drivers/CMSIS/Include/core_cm7.h **** 
 295:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 296:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 297:Drivers/CMSIS/Include/core_cm7.h **** 
 298:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 299:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 300:Drivers/CMSIS/Include/core_cm7.h **** 
 301:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 302:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 303:Drivers/CMSIS/Include/core_cm7.h **** 
 304:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 305:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 306:Drivers/CMSIS/Include/core_cm7.h **** 
 307:Drivers/CMSIS/Include/core_cm7.h **** 
 308:Drivers/CMSIS/Include/core_cm7.h **** /**
 309:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 310:Drivers/CMSIS/Include/core_cm7.h ****  */
 311:Drivers/CMSIS/Include/core_cm7.h **** typedef union
 312:Drivers/CMSIS/Include/core_cm7.h **** {
 313:Drivers/CMSIS/Include/core_cm7.h ****   struct
 314:Drivers/CMSIS/Include/core_cm7.h ****   {
 315:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 316:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 317:Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 318:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 319:Drivers/CMSIS/Include/core_cm7.h **** } IPSR_Type;
 320:Drivers/CMSIS/Include/core_cm7.h **** 
 321:Drivers/CMSIS/Include/core_cm7.h **** /* IPSR Register Definitions */
 322:Drivers/CMSIS/Include/core_cm7.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 323:Drivers/CMSIS/Include/core_cm7.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 324:Drivers/CMSIS/Include/core_cm7.h **** 
 325:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 16


 326:Drivers/CMSIS/Include/core_cm7.h **** /**
 327:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 328:Drivers/CMSIS/Include/core_cm7.h ****  */
 329:Drivers/CMSIS/Include/core_cm7.h **** typedef union
 330:Drivers/CMSIS/Include/core_cm7.h **** {
 331:Drivers/CMSIS/Include/core_cm7.h ****   struct
 332:Drivers/CMSIS/Include/core_cm7.h ****   {
 333:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 334:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 335:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 336:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 337:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 338:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 339:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 340:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 341:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 342:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 343:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 344:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 345:Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 346:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 347:Drivers/CMSIS/Include/core_cm7.h **** } xPSR_Type;
 348:Drivers/CMSIS/Include/core_cm7.h **** 
 349:Drivers/CMSIS/Include/core_cm7.h **** /* xPSR Register Definitions */
 350:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 351:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 352:Drivers/CMSIS/Include/core_cm7.h **** 
 353:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 354:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 355:Drivers/CMSIS/Include/core_cm7.h **** 
 356:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 357:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 358:Drivers/CMSIS/Include/core_cm7.h **** 
 359:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 360:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 361:Drivers/CMSIS/Include/core_cm7.h **** 
 362:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 363:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 364:Drivers/CMSIS/Include/core_cm7.h **** 
 365:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 366:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 367:Drivers/CMSIS/Include/core_cm7.h **** 
 368:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 369:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 370:Drivers/CMSIS/Include/core_cm7.h **** 
 371:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 372:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 373:Drivers/CMSIS/Include/core_cm7.h **** 
 374:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 375:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 376:Drivers/CMSIS/Include/core_cm7.h **** 
 377:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 378:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 379:Drivers/CMSIS/Include/core_cm7.h **** 
 380:Drivers/CMSIS/Include/core_cm7.h **** 
 381:Drivers/CMSIS/Include/core_cm7.h **** /**
 382:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Control Registers (CONTROL).
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 17


 383:Drivers/CMSIS/Include/core_cm7.h ****  */
 384:Drivers/CMSIS/Include/core_cm7.h **** typedef union
 385:Drivers/CMSIS/Include/core_cm7.h **** {
 386:Drivers/CMSIS/Include/core_cm7.h ****   struct
 387:Drivers/CMSIS/Include/core_cm7.h ****   {
 388:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 389:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 390:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 391:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 392:Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 393:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 394:Drivers/CMSIS/Include/core_cm7.h **** } CONTROL_Type;
 395:Drivers/CMSIS/Include/core_cm7.h **** 
 396:Drivers/CMSIS/Include/core_cm7.h **** /* CONTROL Register Definitions */
 397:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 398:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 399:Drivers/CMSIS/Include/core_cm7.h **** 
 400:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 401:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 402:Drivers/CMSIS/Include/core_cm7.h **** 
 403:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 404:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 405:Drivers/CMSIS/Include/core_cm7.h **** 
 406:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_CORE */
 407:Drivers/CMSIS/Include/core_cm7.h **** 
 408:Drivers/CMSIS/Include/core_cm7.h **** 
 409:Drivers/CMSIS/Include/core_cm7.h **** /**
 410:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
 411:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 412:Drivers/CMSIS/Include/core_cm7.h ****   \brief      Type definitions for the NVIC Registers
 413:Drivers/CMSIS/Include/core_cm7.h ****   @{
 414:Drivers/CMSIS/Include/core_cm7.h ****  */
 415:Drivers/CMSIS/Include/core_cm7.h **** 
 416:Drivers/CMSIS/Include/core_cm7.h **** /**
 417:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 418:Drivers/CMSIS/Include/core_cm7.h ****  */
 419:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 420:Drivers/CMSIS/Include/core_cm7.h **** {
 421:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 422:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[24U];
 423:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 424:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RSERVED1[24U];
 425:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 426:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[24U];
 427:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 428:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[24U];
 429:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 430:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[56U];
 431:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 432:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[644U];
 433:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 434:Drivers/CMSIS/Include/core_cm7.h **** }  NVIC_Type;
 435:Drivers/CMSIS/Include/core_cm7.h **** 
 436:Drivers/CMSIS/Include/core_cm7.h **** /* Software Triggered Interrupt Register Definitions */
 437:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 438:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 439:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 18


 440:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_NVIC */
 441:Drivers/CMSIS/Include/core_cm7.h **** 
 442:Drivers/CMSIS/Include/core_cm7.h **** 
 443:Drivers/CMSIS/Include/core_cm7.h **** /**
 444:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 445:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 446:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Control Block Registers
 447:Drivers/CMSIS/Include/core_cm7.h ****   @{
 448:Drivers/CMSIS/Include/core_cm7.h ****  */
 449:Drivers/CMSIS/Include/core_cm7.h **** 
 450:Drivers/CMSIS/Include/core_cm7.h **** /**
 451:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Control Block (SCB).
 452:Drivers/CMSIS/Include/core_cm7.h ****  */
 453:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 454:Drivers/CMSIS/Include/core_cm7.h **** {
 455:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 456:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 457:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 458:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 459:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 460:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 461:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint8_t  SHPR[12U];              /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 462:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 463:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 464:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 465:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 466:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 467:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 468:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 469:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_PFR[2U];             /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 470:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_DFR;                 /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 471:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_AFR;                 /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 472:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_MFR[4U];             /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 473:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_ISAR[5U];            /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 474:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
 475:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CLIDR;                  /*!< Offset: 0x078 (R/ )  Cache Level ID register */
 476:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CTR;                    /*!< Offset: 0x07C (R/ )  Cache Type register */
 477:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CCSIDR;                 /*!< Offset: 0x080 (R/ )  Cache Size ID Register */
 478:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CSSELR;                 /*!< Offset: 0x084 (R/W)  Cache Size Selection Register */
 479:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 480:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[93U];
 481:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0x200 ( /W)  Software Triggered Interrupt Reg
 482:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[15U];
 483:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x240 (R/ )  Media and VFP Feature Register 0
 484:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x244 (R/ )  Media and VFP Feature Register 1
 485:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x248 (R/ )  Media and VFP Feature Register 1
 486:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[1U];
 487:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t ICIALLU;                /*!< Offset: 0x250 ( /W)  I-Cache Invalidate All to PoU */
 488:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED6[1U];
 489:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t ICIMVAU;                /*!< Offset: 0x258 ( /W)  I-Cache Invalidate by MVA to PoU
 490:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCIMVAC;                /*!< Offset: 0x25C ( /W)  D-Cache Invalidate by MVA to PoC
 491:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCISW;                  /*!< Offset: 0x260 ( /W)  D-Cache Invalidate by Set-way */
 492:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCMVAU;                /*!< Offset: 0x264 ( /W)  D-Cache Clean by MVA to PoU */
 493:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCMVAC;                /*!< Offset: 0x268 ( /W)  D-Cache Clean by MVA to PoC */
 494:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCSW;                  /*!< Offset: 0x26C ( /W)  D-Cache Clean by Set-way */
 495:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCIMVAC;               /*!< Offset: 0x270 ( /W)  D-Cache Clean and Invalidate by 
 496:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCISW;                 /*!< Offset: 0x274 ( /W)  D-Cache Clean and Invalidate by 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 19


 497:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED7[6U];
 498:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ITCMCR;                 /*!< Offset: 0x290 (R/W)  Instruction Tightly-Coupled Memo
 499:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DTCMCR;                 /*!< Offset: 0x294 (R/W)  Data Tightly-Coupled Memory Cont
 500:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AHBPCR;                 /*!< Offset: 0x298 (R/W)  AHBP Control Register */
 501:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CACR;                   /*!< Offset: 0x29C (R/W)  L1 Cache Control Register */
 502:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AHBSCR;                 /*!< Offset: 0x2A0 (R/W)  AHB Slave Control Register */
 503:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED8[1U];
 504:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ABFSR;                  /*!< Offset: 0x2A8 (R/W)  Auxiliary Bus Fault Status Regis
 505:Drivers/CMSIS/Include/core_cm7.h **** } SCB_Type;
 506:Drivers/CMSIS/Include/core_cm7.h **** 
 507:Drivers/CMSIS/Include/core_cm7.h **** /* SCB CPUID Register Definitions */
 508:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 509:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 510:Drivers/CMSIS/Include/core_cm7.h **** 
 511:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 512:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 513:Drivers/CMSIS/Include/core_cm7.h **** 
 514:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 515:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 516:Drivers/CMSIS/Include/core_cm7.h **** 
 517:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 518:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 519:Drivers/CMSIS/Include/core_cm7.h **** 
 520:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 521:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 522:Drivers/CMSIS/Include/core_cm7.h **** 
 523:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Interrupt Control State Register Definitions */
 524:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 525:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 526:Drivers/CMSIS/Include/core_cm7.h **** 
 527:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 528:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 529:Drivers/CMSIS/Include/core_cm7.h **** 
 530:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 531:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 532:Drivers/CMSIS/Include/core_cm7.h **** 
 533:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 534:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 535:Drivers/CMSIS/Include/core_cm7.h **** 
 536:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 537:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 538:Drivers/CMSIS/Include/core_cm7.h **** 
 539:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 540:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 541:Drivers/CMSIS/Include/core_cm7.h **** 
 542:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 543:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 544:Drivers/CMSIS/Include/core_cm7.h **** 
 545:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 546:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 547:Drivers/CMSIS/Include/core_cm7.h **** 
 548:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 549:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 550:Drivers/CMSIS/Include/core_cm7.h **** 
 551:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 552:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 553:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 20


 554:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Vector Table Offset Register Definitions */
 555:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 556:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 557:Drivers/CMSIS/Include/core_cm7.h **** 
 558:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 559:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 560:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 561:Drivers/CMSIS/Include/core_cm7.h **** 
 562:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 563:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 564:Drivers/CMSIS/Include/core_cm7.h **** 
 565:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 566:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 567:Drivers/CMSIS/Include/core_cm7.h **** 
 568:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 569:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 570:Drivers/CMSIS/Include/core_cm7.h **** 
 571:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 572:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 573:Drivers/CMSIS/Include/core_cm7.h **** 
 574:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 575:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 576:Drivers/CMSIS/Include/core_cm7.h **** 
 577:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 578:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 579:Drivers/CMSIS/Include/core_cm7.h **** 
 580:Drivers/CMSIS/Include/core_cm7.h **** /* SCB System Control Register Definitions */
 581:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 582:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 583:Drivers/CMSIS/Include/core_cm7.h **** 
 584:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 585:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 586:Drivers/CMSIS/Include/core_cm7.h **** 
 587:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 588:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 589:Drivers/CMSIS/Include/core_cm7.h **** 
 590:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Configuration Control Register Definitions */
 591:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BP_Pos                      18U                                           /*!< SCB 
 592:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BP_Msk                     (1UL << SCB_CCR_BP_Pos)                        /*!< SCB 
 593:Drivers/CMSIS/Include/core_cm7.h **** 
 594:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_IC_Pos                      17U                                           /*!< SCB 
 595:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_IC_Msk                     (1UL << SCB_CCR_IC_Pos)                        /*!< SCB 
 596:Drivers/CMSIS/Include/core_cm7.h **** 
 597:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DC_Pos                      16U                                           /*!< SCB 
 598:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DC_Msk                     (1UL << SCB_CCR_DC_Pos)                        /*!< SCB 
 599:Drivers/CMSIS/Include/core_cm7.h **** 
 600:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 601:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 602:Drivers/CMSIS/Include/core_cm7.h **** 
 603:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 604:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 605:Drivers/CMSIS/Include/core_cm7.h **** 
 606:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 607:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 608:Drivers/CMSIS/Include/core_cm7.h **** 
 609:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 610:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 21


 611:Drivers/CMSIS/Include/core_cm7.h **** 
 612:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 613:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 614:Drivers/CMSIS/Include/core_cm7.h **** 
 615:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 616:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 617:Drivers/CMSIS/Include/core_cm7.h **** 
 618:Drivers/CMSIS/Include/core_cm7.h **** /* SCB System Handler Control and State Register Definitions */
 619:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 620:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 621:Drivers/CMSIS/Include/core_cm7.h **** 
 622:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 623:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 624:Drivers/CMSIS/Include/core_cm7.h **** 
 625:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 626:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 627:Drivers/CMSIS/Include/core_cm7.h **** 
 628:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 629:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 630:Drivers/CMSIS/Include/core_cm7.h **** 
 631:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 632:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 633:Drivers/CMSIS/Include/core_cm7.h **** 
 634:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 635:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 636:Drivers/CMSIS/Include/core_cm7.h **** 
 637:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 638:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 639:Drivers/CMSIS/Include/core_cm7.h **** 
 640:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 641:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 642:Drivers/CMSIS/Include/core_cm7.h **** 
 643:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 644:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 645:Drivers/CMSIS/Include/core_cm7.h **** 
 646:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 647:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 648:Drivers/CMSIS/Include/core_cm7.h **** 
 649:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 650:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 651:Drivers/CMSIS/Include/core_cm7.h **** 
 652:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 653:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 654:Drivers/CMSIS/Include/core_cm7.h **** 
 655:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 656:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 657:Drivers/CMSIS/Include/core_cm7.h **** 
 658:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 659:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 660:Drivers/CMSIS/Include/core_cm7.h **** 
 661:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Configurable Fault Status Register Definitions */
 662:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 663:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 664:Drivers/CMSIS/Include/core_cm7.h **** 
 665:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 666:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 667:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 22


 668:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 669:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 670:Drivers/CMSIS/Include/core_cm7.h **** 
 671:Drivers/CMSIS/Include/core_cm7.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 672:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 673:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 674:Drivers/CMSIS/Include/core_cm7.h **** 
 675:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 676:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 677:Drivers/CMSIS/Include/core_cm7.h **** 
 678:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 679:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 680:Drivers/CMSIS/Include/core_cm7.h **** 
 681:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 682:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 683:Drivers/CMSIS/Include/core_cm7.h **** 
 684:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 685:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 686:Drivers/CMSIS/Include/core_cm7.h **** 
 687:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 688:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 689:Drivers/CMSIS/Include/core_cm7.h **** 
 690:Drivers/CMSIS/Include/core_cm7.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 691:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 692:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 693:Drivers/CMSIS/Include/core_cm7.h **** 
 694:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 695:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 696:Drivers/CMSIS/Include/core_cm7.h **** 
 697:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 698:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 699:Drivers/CMSIS/Include/core_cm7.h **** 
 700:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 701:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 702:Drivers/CMSIS/Include/core_cm7.h **** 
 703:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 704:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 705:Drivers/CMSIS/Include/core_cm7.h **** 
 706:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 707:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 708:Drivers/CMSIS/Include/core_cm7.h **** 
 709:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 710:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 711:Drivers/CMSIS/Include/core_cm7.h **** 
 712:Drivers/CMSIS/Include/core_cm7.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 713:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 714:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 715:Drivers/CMSIS/Include/core_cm7.h **** 
 716:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 717:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 718:Drivers/CMSIS/Include/core_cm7.h **** 
 719:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 720:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 721:Drivers/CMSIS/Include/core_cm7.h **** 
 722:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 723:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 724:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 23


 725:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 726:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 727:Drivers/CMSIS/Include/core_cm7.h **** 
 728:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 729:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 730:Drivers/CMSIS/Include/core_cm7.h **** 
 731:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Hard Fault Status Register Definitions */
 732:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 733:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 734:Drivers/CMSIS/Include/core_cm7.h **** 
 735:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 736:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 737:Drivers/CMSIS/Include/core_cm7.h **** 
 738:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 739:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 740:Drivers/CMSIS/Include/core_cm7.h **** 
 741:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Debug Fault Status Register Definitions */
 742:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 743:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 744:Drivers/CMSIS/Include/core_cm7.h **** 
 745:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 746:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 747:Drivers/CMSIS/Include/core_cm7.h **** 
 748:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 749:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 750:Drivers/CMSIS/Include/core_cm7.h **** 
 751:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 752:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 753:Drivers/CMSIS/Include/core_cm7.h **** 
 754:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 755:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 756:Drivers/CMSIS/Include/core_cm7.h **** 
 757:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Level ID Register Definitions */
 758:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Pos                 27U                                            /*!< SCB 
 759:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Msk                 (7UL << SCB_CLIDR_LOUU_Pos)                    /*!< SCB 
 760:Drivers/CMSIS/Include/core_cm7.h **** 
 761:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Pos                  24U                                            /*!< SCB 
 762:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Msk                  (7UL << SCB_CLIDR_LOC_Pos)                     /*!< SCB 
 763:Drivers/CMSIS/Include/core_cm7.h **** 
 764:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Type Register Definitions */
 765:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Pos                 29U                                            /*!< SCB 
 766:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Msk                 (7UL << SCB_CTR_FORMAT_Pos)                    /*!< SCB 
 767:Drivers/CMSIS/Include/core_cm7.h **** 
 768:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_CWG_Pos                    24U                                            /*!< SCB 
 769:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_CWG_Msk                    (0xFUL << SCB_CTR_CWG_Pos)                     /*!< SCB 
 770:Drivers/CMSIS/Include/core_cm7.h **** 
 771:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_ERG_Pos                    20U                                            /*!< SCB 
 772:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_ERG_Msk                    (0xFUL << SCB_CTR_ERG_Pos)                     /*!< SCB 
 773:Drivers/CMSIS/Include/core_cm7.h **** 
 774:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Pos               16U                                            /*!< SCB 
 775:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Msk               (0xFUL << SCB_CTR_DMINLINE_Pos)                /*!< SCB 
 776:Drivers/CMSIS/Include/core_cm7.h **** 
 777:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Pos                0U                                            /*!< SCB 
 778:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Msk               (0xFUL /*<< SCB_CTR_IMINLINE_Pos*/)            /*!< SCB 
 779:Drivers/CMSIS/Include/core_cm7.h **** 
 780:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Size ID Register Definitions */
 781:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Pos                  31U                                            /*!< SCB 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 24


 782:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Msk                  (1UL << SCB_CCSIDR_WT_Pos)                     /*!< SCB 
 783:Drivers/CMSIS/Include/core_cm7.h **** 
 784:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Pos                  30U                                            /*!< SCB 
 785:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Msk                  (1UL << SCB_CCSIDR_WB_Pos)                     /*!< SCB 
 786:Drivers/CMSIS/Include/core_cm7.h **** 
 787:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Pos                  29U                                            /*!< SCB 
 788:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Msk                  (1UL << SCB_CCSIDR_RA_Pos)                     /*!< SCB 
 789:Drivers/CMSIS/Include/core_cm7.h **** 
 790:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Pos                  28U                                            /*!< SCB 
 791:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Msk                  (1UL << SCB_CCSIDR_WA_Pos)                     /*!< SCB 
 792:Drivers/CMSIS/Include/core_cm7.h **** 
 793:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Pos             13U                                            /*!< SCB 
 794:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Msk             (0x7FFFUL << SCB_CCSIDR_NUMSETS_Pos)           /*!< SCB 
 795:Drivers/CMSIS/Include/core_cm7.h **** 
 796:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Pos        3U                                            /*!< SCB 
 797:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Msk       (0x3FFUL << SCB_CCSIDR_ASSOCIATIVITY_Pos)      /*!< SCB 
 798:Drivers/CMSIS/Include/core_cm7.h **** 
 799:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Pos             0U                                            /*!< SCB 
 800:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Msk            (7UL /*<< SCB_CCSIDR_LINESIZE_Pos*/)           /*!< SCB 
 801:Drivers/CMSIS/Include/core_cm7.h **** 
 802:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Size Selection Register Definitions */
 803:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Pos                1U                                            /*!< SCB 
 804:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Msk               (7UL << SCB_CSSELR_LEVEL_Pos)                  /*!< SCB 
 805:Drivers/CMSIS/Include/core_cm7.h **** 
 806:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_IND_Pos                  0U                                            /*!< SCB 
 807:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_IND_Msk                 (1UL /*<< SCB_CSSELR_IND_Pos*/)                /*!< SCB 
 808:Drivers/CMSIS/Include/core_cm7.h **** 
 809:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Software Triggered Interrupt Register Definitions */
 810:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_STIR_INTID_Pos                  0U                                            /*!< SCB 
 811:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_STIR_INTID_Msk                 (0x1FFUL /*<< SCB_STIR_INTID_Pos*/)            /*!< SCB 
 812:Drivers/CMSIS/Include/core_cm7.h **** 
 813:Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Invalidate by Set-way Register Definitions */
 814:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_WAY_Pos                  30U                                            /*!< SCB 
 815:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_WAY_Msk                  (3UL << SCB_DCISW_WAY_Pos)                     /*!< SCB 
 816:Drivers/CMSIS/Include/core_cm7.h **** 
 817:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_SET_Pos                   5U                                            /*!< SCB 
 818:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_SET_Msk                  (0x1FFUL << SCB_DCISW_SET_Pos)                 /*!< SCB 
 819:Drivers/CMSIS/Include/core_cm7.h **** 
 820:Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Clean by Set-way Register Definitions */
 821:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Pos                  30U                                            /*!< SCB 
 822:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Msk                  (3UL << SCB_DCCSW_WAY_Pos)                     /*!< SCB 
 823:Drivers/CMSIS/Include/core_cm7.h **** 
 824:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_SET_Pos                   5U                                            /*!< SCB 
 825:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_SET_Msk                  (0x1FFUL << SCB_DCCSW_SET_Pos)                 /*!< SCB 
 826:Drivers/CMSIS/Include/core_cm7.h **** 
 827:Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Clean and Invalidate by Set-way Register Definitions */
 828:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Pos                 30U                                            /*!< SCB 
 829:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Msk                 (3UL << SCB_DCCISW_WAY_Pos)                    /*!< SCB 
 830:Drivers/CMSIS/Include/core_cm7.h **** 
 831:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_SET_Pos                  5U                                            /*!< SCB 
 832:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_SET_Msk                 (0x1FFUL << SCB_DCCISW_SET_Pos)                /*!< SCB 
 833:Drivers/CMSIS/Include/core_cm7.h **** 
 834:Drivers/CMSIS/Include/core_cm7.h **** /* Instruction Tightly-Coupled Memory Control Register Definitions */
 835:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Pos                   3U                                            /*!< SCB 
 836:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Msk                  (0xFUL << SCB_ITCMCR_SZ_Pos)                   /*!< SCB 
 837:Drivers/CMSIS/Include/core_cm7.h **** 
 838:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Pos                2U                                            /*!< SCB 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 25


 839:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Msk               (1UL << SCB_ITCMCR_RETEN_Pos)                  /*!< SCB 
 840:Drivers/CMSIS/Include/core_cm7.h **** 
 841:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Pos                  1U                                            /*!< SCB 
 842:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Msk                 (1UL << SCB_ITCMCR_RMW_Pos)                    /*!< SCB 
 843:Drivers/CMSIS/Include/core_cm7.h **** 
 844:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Pos                   0U                                            /*!< SCB 
 845:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Msk                  (1UL /*<< SCB_ITCMCR_EN_Pos*/)                 /*!< SCB 
 846:Drivers/CMSIS/Include/core_cm7.h **** 
 847:Drivers/CMSIS/Include/core_cm7.h **** /* Data Tightly-Coupled Memory Control Register Definitions */
 848:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Pos                   3U                                            /*!< SCB 
 849:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Msk                  (0xFUL << SCB_DTCMCR_SZ_Pos)                   /*!< SCB 
 850:Drivers/CMSIS/Include/core_cm7.h **** 
 851:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Pos                2U                                            /*!< SCB 
 852:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Msk               (1UL << SCB_DTCMCR_RETEN_Pos)                   /*!< SCB
 853:Drivers/CMSIS/Include/core_cm7.h **** 
 854:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Pos                  1U                                            /*!< SCB 
 855:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Msk                 (1UL << SCB_DTCMCR_RMW_Pos)                    /*!< SCB 
 856:Drivers/CMSIS/Include/core_cm7.h **** 
 857:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Pos                   0U                                            /*!< SCB 
 858:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Msk                  (1UL /*<< SCB_DTCMCR_EN_Pos*/)                 /*!< SCB 
 859:Drivers/CMSIS/Include/core_cm7.h **** 
 860:Drivers/CMSIS/Include/core_cm7.h **** /* AHBP Control Register Definitions */
 861:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Pos                   1U                                            /*!< SCB 
 862:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Msk                  (7UL << SCB_AHBPCR_SZ_Pos)                     /*!< SCB 
 863:Drivers/CMSIS/Include/core_cm7.h **** 
 864:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Pos                   0U                                            /*!< SCB 
 865:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Msk                  (1UL /*<< SCB_AHBPCR_EN_Pos*/)                 /*!< SCB 
 866:Drivers/CMSIS/Include/core_cm7.h **** 
 867:Drivers/CMSIS/Include/core_cm7.h **** /* L1 Cache Control Register Definitions */
 868:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Pos                2U                                            /*!< SCB 
 869:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Msk               (1UL << SCB_CACR_FORCEWT_Pos)                  /*!< SCB 
 870:Drivers/CMSIS/Include/core_cm7.h **** 
 871:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Pos                  1U                                            /*!< SCB 
 872:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Msk                 (1UL << SCB_CACR_ECCEN_Pos)                    /*!< SCB 
 873:Drivers/CMSIS/Include/core_cm7.h **** 
 874:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_SIWT_Pos                   0U                                            /*!< SCB 
 875:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_SIWT_Msk                  (1UL /*<< SCB_CACR_SIWT_Pos*/)                 /*!< SCB 
 876:Drivers/CMSIS/Include/core_cm7.h **** 
 877:Drivers/CMSIS/Include/core_cm7.h **** /* AHBS Control Register Definitions */
 878:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Pos           11U                                            /*!< SCB 
 879:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Msk           (0x1FUL << SCB_AHBPCR_INITCOUNT_Pos)           /*!< SCB 
 880:Drivers/CMSIS/Include/core_cm7.h **** 
 881:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Pos                 2U                                            /*!< SCB 
 882:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Msk                (0x1FFUL << SCB_AHBPCR_TPRI_Pos)               /*!< SCB 
 883:Drivers/CMSIS/Include/core_cm7.h **** 
 884:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Pos                  0U                                            /*!< SCB 
 885:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Msk                 (3UL /*<< SCB_AHBPCR_CTL_Pos*/)                /*!< SCB 
 886:Drivers/CMSIS/Include/core_cm7.h **** 
 887:Drivers/CMSIS/Include/core_cm7.h **** /* Auxiliary Bus Fault Status Register Definitions */
 888:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Pos              8U                                            /*!< SCB 
 889:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Msk             (3UL << SCB_ABFSR_AXIMTYPE_Pos)                /*!< SCB 
 890:Drivers/CMSIS/Include/core_cm7.h **** 
 891:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Pos                  4U                                            /*!< SCB 
 892:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Msk                 (1UL << SCB_ABFSR_EPPB_Pos)                    /*!< SCB 
 893:Drivers/CMSIS/Include/core_cm7.h **** 
 894:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Pos                  3U                                            /*!< SCB 
 895:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Msk                 (1UL << SCB_ABFSR_AXIM_Pos)                    /*!< SCB 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 26


 896:Drivers/CMSIS/Include/core_cm7.h **** 
 897:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Pos                  2U                                            /*!< SCB 
 898:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Msk                 (1UL << SCB_ABFSR_AHBP_Pos)                    /*!< SCB 
 899:Drivers/CMSIS/Include/core_cm7.h **** 
 900:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Pos                  1U                                            /*!< SCB 
 901:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Msk                 (1UL << SCB_ABFSR_DTCM_Pos)                    /*!< SCB 
 902:Drivers/CMSIS/Include/core_cm7.h **** 
 903:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Pos                  0U                                            /*!< SCB 
 904:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Msk                 (1UL /*<< SCB_ABFSR_ITCM_Pos*/)                /*!< SCB 
 905:Drivers/CMSIS/Include/core_cm7.h **** 
 906:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SCB */
 907:Drivers/CMSIS/Include/core_cm7.h **** 
 908:Drivers/CMSIS/Include/core_cm7.h **** 
 909:Drivers/CMSIS/Include/core_cm7.h **** /**
 910:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 911:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 912:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 913:Drivers/CMSIS/Include/core_cm7.h ****   @{
 914:Drivers/CMSIS/Include/core_cm7.h ****  */
 915:Drivers/CMSIS/Include/core_cm7.h **** 
 916:Drivers/CMSIS/Include/core_cm7.h **** /**
 917:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 918:Drivers/CMSIS/Include/core_cm7.h ****  */
 919:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 920:Drivers/CMSIS/Include/core_cm7.h **** {
 921:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
 922:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 923:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 924:Drivers/CMSIS/Include/core_cm7.h **** } SCnSCB_Type;
 925:Drivers/CMSIS/Include/core_cm7.h **** 
 926:Drivers/CMSIS/Include/core_cm7.h **** /* Interrupt Controller Type Register Definitions */
 927:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 928:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 929:Drivers/CMSIS/Include/core_cm7.h **** 
 930:Drivers/CMSIS/Include/core_cm7.h **** /* Auxiliary Control Register Definitions */
 931:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Pos    12U                                         /*!< ACTLR: 
 932:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Msk    (1UL << SCnSCB_ACTLR_DISITMATBFLUSH_Pos)    /*!< ACTLR: 
 933:Drivers/CMSIS/Include/core_cm7.h **** 
 934:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Pos         11U                                         /*!< ACTLR: 
 935:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Msk         (1UL << SCnSCB_ACTLR_DISRAMODE_Pos)         /*!< ACTLR: 
 936:Drivers/CMSIS/Include/core_cm7.h **** 
 937:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Pos         10U                                         /*!< ACTLR: 
 938:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Msk         (1UL << SCnSCB_ACTLR_FPEXCODIS_Pos)         /*!< ACTLR: 
 939:Drivers/CMSIS/Include/core_cm7.h **** 
 940:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 941:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 942:Drivers/CMSIS/Include/core_cm7.h **** 
 943:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 944:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 945:Drivers/CMSIS/Include/core_cm7.h **** 
 946:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SCnotSCB */
 947:Drivers/CMSIS/Include/core_cm7.h **** 
 948:Drivers/CMSIS/Include/core_cm7.h **** 
 949:Drivers/CMSIS/Include/core_cm7.h **** /**
 950:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 951:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 952:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Timer Registers.
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 27


 953:Drivers/CMSIS/Include/core_cm7.h ****   @{
 954:Drivers/CMSIS/Include/core_cm7.h ****  */
 955:Drivers/CMSIS/Include/core_cm7.h **** 
 956:Drivers/CMSIS/Include/core_cm7.h **** /**
 957:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Timer (SysTick).
 958:Drivers/CMSIS/Include/core_cm7.h ****  */
 959:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 960:Drivers/CMSIS/Include/core_cm7.h **** {
 961:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 962:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 963:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 964:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 965:Drivers/CMSIS/Include/core_cm7.h **** } SysTick_Type;
 966:Drivers/CMSIS/Include/core_cm7.h **** 
 967:Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Control / Status Register Definitions */
 968:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 969:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 970:Drivers/CMSIS/Include/core_cm7.h **** 
 971:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 972:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 973:Drivers/CMSIS/Include/core_cm7.h **** 
 974:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 975:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 976:Drivers/CMSIS/Include/core_cm7.h **** 
 977:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 978:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 979:Drivers/CMSIS/Include/core_cm7.h **** 
 980:Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Reload Register Definitions */
 981:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 982:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 983:Drivers/CMSIS/Include/core_cm7.h **** 
 984:Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Current Register Definitions */
 985:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 986:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 987:Drivers/CMSIS/Include/core_cm7.h **** 
 988:Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Calibration Register Definitions */
 989:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 990:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 991:Drivers/CMSIS/Include/core_cm7.h **** 
 992:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 993:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 994:Drivers/CMSIS/Include/core_cm7.h **** 
 995:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 996:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 997:Drivers/CMSIS/Include/core_cm7.h **** 
 998:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SysTick */
 999:Drivers/CMSIS/Include/core_cm7.h **** 
1000:Drivers/CMSIS/Include/core_cm7.h **** 
1001:Drivers/CMSIS/Include/core_cm7.h **** /**
1002:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1003:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
1004:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
1005:Drivers/CMSIS/Include/core_cm7.h ****   @{
1006:Drivers/CMSIS/Include/core_cm7.h ****  */
1007:Drivers/CMSIS/Include/core_cm7.h **** 
1008:Drivers/CMSIS/Include/core_cm7.h **** /**
1009:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 28


1010:Drivers/CMSIS/Include/core_cm7.h ****  */
1011:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1012:Drivers/CMSIS/Include/core_cm7.h **** {
1013:Drivers/CMSIS/Include/core_cm7.h ****   __OM  union
1014:Drivers/CMSIS/Include/core_cm7.h ****   {
1015:Drivers/CMSIS/Include/core_cm7.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
1016:Drivers/CMSIS/Include/core_cm7.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
1017:Drivers/CMSIS/Include/core_cm7.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
1018:Drivers/CMSIS/Include/core_cm7.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
1019:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[864U];
1020:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
1021:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[15U];
1022:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
1023:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[15U];
1024:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
1025:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[29U];
1026:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
1027:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
1028:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
1029:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[43U];
1030:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
1031:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
1032:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[6U];
1033:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
1034:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
1035:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
1036:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
1037:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
1038:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
1039:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
1040:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
1041:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
1042:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
1043:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
1044:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
1045:Drivers/CMSIS/Include/core_cm7.h **** } ITM_Type;
1046:Drivers/CMSIS/Include/core_cm7.h **** 
1047:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Trace Privilege Register Definitions */
1048:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
1049:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
1050:Drivers/CMSIS/Include/core_cm7.h **** 
1051:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Trace Control Register Definitions */
1052:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
1053:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
1054:Drivers/CMSIS/Include/core_cm7.h **** 
1055:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
1056:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
1057:Drivers/CMSIS/Include/core_cm7.h **** 
1058:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
1059:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
1060:Drivers/CMSIS/Include/core_cm7.h **** 
1061:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
1062:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
1063:Drivers/CMSIS/Include/core_cm7.h **** 
1064:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
1065:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
1066:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 29


1067:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
1068:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
1069:Drivers/CMSIS/Include/core_cm7.h **** 
1070:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
1071:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
1072:Drivers/CMSIS/Include/core_cm7.h **** 
1073:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
1074:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
1075:Drivers/CMSIS/Include/core_cm7.h **** 
1076:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
1077:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
1078:Drivers/CMSIS/Include/core_cm7.h **** 
1079:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Integration Write Register Definitions */
1080:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
1081:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
1082:Drivers/CMSIS/Include/core_cm7.h **** 
1083:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Integration Read Register Definitions */
1084:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
1085:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
1086:Drivers/CMSIS/Include/core_cm7.h **** 
1087:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Integration Mode Control Register Definitions */
1088:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
1089:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
1090:Drivers/CMSIS/Include/core_cm7.h **** 
1091:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Lock Status Register Definitions */
1092:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
1093:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
1094:Drivers/CMSIS/Include/core_cm7.h **** 
1095:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
1096:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
1097:Drivers/CMSIS/Include/core_cm7.h **** 
1098:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
1099:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
1100:Drivers/CMSIS/Include/core_cm7.h **** 
1101:Drivers/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_ITM */
1102:Drivers/CMSIS/Include/core_cm7.h **** 
1103:Drivers/CMSIS/Include/core_cm7.h **** 
1104:Drivers/CMSIS/Include/core_cm7.h **** /**
1105:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1106:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
1107:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
1108:Drivers/CMSIS/Include/core_cm7.h ****   @{
1109:Drivers/CMSIS/Include/core_cm7.h ****  */
1110:Drivers/CMSIS/Include/core_cm7.h **** 
1111:Drivers/CMSIS/Include/core_cm7.h **** /**
1112:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
1113:Drivers/CMSIS/Include/core_cm7.h ****  */
1114:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1115:Drivers/CMSIS/Include/core_cm7.h **** {
1116:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
1117:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
1118:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
1119:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
1120:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
1121:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
1122:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
1123:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 30


1124:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
1125:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
1126:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
1127:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
1128:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
1129:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
1130:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
1131:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[1U];
1132:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
1133:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
1134:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
1135:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[1U];
1136:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
1137:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
1138:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
1139:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[981U];
1140:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 (  W)  Lock Access Register */
1141:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R  )  Lock Status Register */
1142:Drivers/CMSIS/Include/core_cm7.h **** } DWT_Type;
1143:Drivers/CMSIS/Include/core_cm7.h **** 
1144:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Control Register Definitions */
1145:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
1146:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
1147:Drivers/CMSIS/Include/core_cm7.h **** 
1148:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
1149:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
1150:Drivers/CMSIS/Include/core_cm7.h **** 
1151:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
1152:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
1153:Drivers/CMSIS/Include/core_cm7.h **** 
1154:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
1155:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
1156:Drivers/CMSIS/Include/core_cm7.h **** 
1157:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
1158:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
1159:Drivers/CMSIS/Include/core_cm7.h **** 
1160:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
1161:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
1162:Drivers/CMSIS/Include/core_cm7.h **** 
1163:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
1164:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
1165:Drivers/CMSIS/Include/core_cm7.h **** 
1166:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
1167:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
1168:Drivers/CMSIS/Include/core_cm7.h **** 
1169:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
1170:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
1171:Drivers/CMSIS/Include/core_cm7.h **** 
1172:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
1173:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
1174:Drivers/CMSIS/Include/core_cm7.h **** 
1175:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
1176:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
1177:Drivers/CMSIS/Include/core_cm7.h **** 
1178:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
1179:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
1180:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 31


1181:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
1182:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
1183:Drivers/CMSIS/Include/core_cm7.h **** 
1184:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
1185:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
1186:Drivers/CMSIS/Include/core_cm7.h **** 
1187:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
1188:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
1189:Drivers/CMSIS/Include/core_cm7.h **** 
1190:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
1191:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
1192:Drivers/CMSIS/Include/core_cm7.h **** 
1193:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
1194:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
1195:Drivers/CMSIS/Include/core_cm7.h **** 
1196:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
1197:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
1198:Drivers/CMSIS/Include/core_cm7.h **** 
1199:Drivers/CMSIS/Include/core_cm7.h **** /* DWT CPI Count Register Definitions */
1200:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
1201:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
1202:Drivers/CMSIS/Include/core_cm7.h **** 
1203:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Exception Overhead Count Register Definitions */
1204:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
1205:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
1206:Drivers/CMSIS/Include/core_cm7.h **** 
1207:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Sleep Count Register Definitions */
1208:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
1209:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
1210:Drivers/CMSIS/Include/core_cm7.h **** 
1211:Drivers/CMSIS/Include/core_cm7.h **** /* DWT LSU Count Register Definitions */
1212:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
1213:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
1214:Drivers/CMSIS/Include/core_cm7.h **** 
1215:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Folded-instruction Count Register Definitions */
1216:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1217:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1218:Drivers/CMSIS/Include/core_cm7.h **** 
1219:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Comparator Mask Register Definitions */
1220:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1221:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1222:Drivers/CMSIS/Include/core_cm7.h **** 
1223:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Comparator Function Register Definitions */
1224:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1225:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1226:Drivers/CMSIS/Include/core_cm7.h **** 
1227:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1228:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1229:Drivers/CMSIS/Include/core_cm7.h **** 
1230:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1231:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1232:Drivers/CMSIS/Include/core_cm7.h **** 
1233:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1234:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1235:Drivers/CMSIS/Include/core_cm7.h **** 
1236:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1237:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 32


1238:Drivers/CMSIS/Include/core_cm7.h **** 
1239:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1240:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1241:Drivers/CMSIS/Include/core_cm7.h **** 
1242:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1243:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1244:Drivers/CMSIS/Include/core_cm7.h **** 
1245:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1246:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1247:Drivers/CMSIS/Include/core_cm7.h **** 
1248:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1249:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1250:Drivers/CMSIS/Include/core_cm7.h **** 
1251:Drivers/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_DWT */
1252:Drivers/CMSIS/Include/core_cm7.h **** 
1253:Drivers/CMSIS/Include/core_cm7.h **** 
1254:Drivers/CMSIS/Include/core_cm7.h **** /**
1255:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1256:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1257:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1258:Drivers/CMSIS/Include/core_cm7.h ****   @{
1259:Drivers/CMSIS/Include/core_cm7.h ****  */
1260:Drivers/CMSIS/Include/core_cm7.h **** 
1261:Drivers/CMSIS/Include/core_cm7.h **** /**
1262:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1263:Drivers/CMSIS/Include/core_cm7.h ****  */
1264:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1265:Drivers/CMSIS/Include/core_cm7.h **** {
1266:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1267:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1268:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[2U];
1269:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1270:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[55U];
1271:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1272:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[131U];
1273:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1274:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1275:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1276:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[759U];
1277:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER */
1278:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1279:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1280:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[1U];
1281:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1282:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1283:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1284:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[39U];
1285:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1286:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1287:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED7[8U];
1288:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1289:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1290:Drivers/CMSIS/Include/core_cm7.h **** } TPI_Type;
1291:Drivers/CMSIS/Include/core_cm7.h **** 
1292:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1293:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1294:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 33


1295:Drivers/CMSIS/Include/core_cm7.h **** 
1296:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Selected Pin Protocol Register Definitions */
1297:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1298:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1299:Drivers/CMSIS/Include/core_cm7.h **** 
1300:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Formatter and Flush Status Register Definitions */
1301:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1302:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1303:Drivers/CMSIS/Include/core_cm7.h **** 
1304:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1305:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1306:Drivers/CMSIS/Include/core_cm7.h **** 
1307:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1308:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1309:Drivers/CMSIS/Include/core_cm7.h **** 
1310:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1311:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1312:Drivers/CMSIS/Include/core_cm7.h **** 
1313:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Formatter and Flush Control Register Definitions */
1314:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1315:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1316:Drivers/CMSIS/Include/core_cm7.h **** 
1317:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1318:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1319:Drivers/CMSIS/Include/core_cm7.h **** 
1320:Drivers/CMSIS/Include/core_cm7.h **** /* TPI TRIGGER Register Definitions */
1321:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1322:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1323:Drivers/CMSIS/Include/core_cm7.h **** 
1324:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1325:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1326:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1327:Drivers/CMSIS/Include/core_cm7.h **** 
1328:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1329:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1330:Drivers/CMSIS/Include/core_cm7.h **** 
1331:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1332:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1333:Drivers/CMSIS/Include/core_cm7.h **** 
1334:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1335:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1336:Drivers/CMSIS/Include/core_cm7.h **** 
1337:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1338:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1339:Drivers/CMSIS/Include/core_cm7.h **** 
1340:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1341:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1342:Drivers/CMSIS/Include/core_cm7.h **** 
1343:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1344:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1345:Drivers/CMSIS/Include/core_cm7.h **** 
1346:Drivers/CMSIS/Include/core_cm7.h **** /* TPI ITATBCTR2 Register Definitions */
1347:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0U                                         /*!< TPI ITA
1348:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1349:Drivers/CMSIS/Include/core_cm7.h **** 
1350:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1351:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 34


1352:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1353:Drivers/CMSIS/Include/core_cm7.h **** 
1354:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1355:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1356:Drivers/CMSIS/Include/core_cm7.h **** 
1357:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1358:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1359:Drivers/CMSIS/Include/core_cm7.h **** 
1360:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1361:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1362:Drivers/CMSIS/Include/core_cm7.h **** 
1363:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1364:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1365:Drivers/CMSIS/Include/core_cm7.h **** 
1366:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1367:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1368:Drivers/CMSIS/Include/core_cm7.h **** 
1369:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1370:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1371:Drivers/CMSIS/Include/core_cm7.h **** 
1372:Drivers/CMSIS/Include/core_cm7.h **** /* TPI ITATBCTR0 Register Definitions */
1373:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0U                                         /*!< TPI ITA
1374:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1375:Drivers/CMSIS/Include/core_cm7.h **** 
1376:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration Mode Control Register Definitions */
1377:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1378:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1379:Drivers/CMSIS/Include/core_cm7.h **** 
1380:Drivers/CMSIS/Include/core_cm7.h **** /* TPI DEVID Register Definitions */
1381:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1382:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1383:Drivers/CMSIS/Include/core_cm7.h **** 
1384:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1385:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1386:Drivers/CMSIS/Include/core_cm7.h **** 
1387:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1388:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1389:Drivers/CMSIS/Include/core_cm7.h **** 
1390:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1391:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1392:Drivers/CMSIS/Include/core_cm7.h **** 
1393:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1394:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1395:Drivers/CMSIS/Include/core_cm7.h **** 
1396:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1397:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1398:Drivers/CMSIS/Include/core_cm7.h **** 
1399:Drivers/CMSIS/Include/core_cm7.h **** /* TPI DEVTYPE Register Definitions */
1400:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Pos           4U                                         /*!< TPI DEV
1401:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1402:Drivers/CMSIS/Include/core_cm7.h **** 
1403:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Pos             0U                                         /*!< TPI DEV
1404:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1405:Drivers/CMSIS/Include/core_cm7.h **** 
1406:Drivers/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_TPI */
1407:Drivers/CMSIS/Include/core_cm7.h **** 
1408:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 35


1409:Drivers/CMSIS/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1410:Drivers/CMSIS/Include/core_cm7.h **** /**
1411:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1412:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1413:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1414:Drivers/CMSIS/Include/core_cm7.h ****   @{
1415:Drivers/CMSIS/Include/core_cm7.h ****  */
1416:Drivers/CMSIS/Include/core_cm7.h **** 
1417:Drivers/CMSIS/Include/core_cm7.h **** /**
1418:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1419:Drivers/CMSIS/Include/core_cm7.h ****  */
1420:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1421:Drivers/CMSIS/Include/core_cm7.h **** {
1422:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1423:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1424:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1425:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1426:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1427:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1428:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1429:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1430:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1431:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1432:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1433:Drivers/CMSIS/Include/core_cm7.h **** } MPU_Type;
1434:Drivers/CMSIS/Include/core_cm7.h **** 
1435:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Type Register Definitions */
1436:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1437:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1438:Drivers/CMSIS/Include/core_cm7.h **** 
1439:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1440:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1441:Drivers/CMSIS/Include/core_cm7.h **** 
1442:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1443:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1444:Drivers/CMSIS/Include/core_cm7.h **** 
1445:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Control Register Definitions */
1446:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1447:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1448:Drivers/CMSIS/Include/core_cm7.h **** 
1449:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1450:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1451:Drivers/CMSIS/Include/core_cm7.h **** 
1452:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1453:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1454:Drivers/CMSIS/Include/core_cm7.h **** 
1455:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Number Register Definitions */
1456:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1457:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1458:Drivers/CMSIS/Include/core_cm7.h **** 
1459:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Base Address Register Definitions */
1460:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1461:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1462:Drivers/CMSIS/Include/core_cm7.h **** 
1463:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1464:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1465:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 36


1466:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1467:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1468:Drivers/CMSIS/Include/core_cm7.h **** 
1469:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Attribute and Size Register Definitions */
1470:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1471:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1472:Drivers/CMSIS/Include/core_cm7.h **** 
1473:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1474:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1475:Drivers/CMSIS/Include/core_cm7.h **** 
1476:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1477:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1478:Drivers/CMSIS/Include/core_cm7.h **** 
1479:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1480:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1481:Drivers/CMSIS/Include/core_cm7.h **** 
1482:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1483:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1484:Drivers/CMSIS/Include/core_cm7.h **** 
1485:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1486:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1487:Drivers/CMSIS/Include/core_cm7.h **** 
1488:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1489:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1490:Drivers/CMSIS/Include/core_cm7.h **** 
1491:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1492:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1493:Drivers/CMSIS/Include/core_cm7.h **** 
1494:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1495:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1496:Drivers/CMSIS/Include/core_cm7.h **** 
1497:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1498:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1499:Drivers/CMSIS/Include/core_cm7.h **** 
1500:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_MPU */
1501:Drivers/CMSIS/Include/core_cm7.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1502:Drivers/CMSIS/Include/core_cm7.h **** 
1503:Drivers/CMSIS/Include/core_cm7.h **** 
1504:Drivers/CMSIS/Include/core_cm7.h **** /**
1505:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1506:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1507:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1508:Drivers/CMSIS/Include/core_cm7.h ****   @{
1509:Drivers/CMSIS/Include/core_cm7.h ****  */
1510:Drivers/CMSIS/Include/core_cm7.h **** 
1511:Drivers/CMSIS/Include/core_cm7.h **** /**
1512:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1513:Drivers/CMSIS/Include/core_cm7.h ****  */
1514:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1515:Drivers/CMSIS/Include/core_cm7.h **** {
1516:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
1517:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1518:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1519:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1520:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1521:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1522:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 37


1523:Drivers/CMSIS/Include/core_cm7.h **** } FPU_Type;
1524:Drivers/CMSIS/Include/core_cm7.h **** 
1525:Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Context Control Register Definitions */
1526:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1527:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1528:Drivers/CMSIS/Include/core_cm7.h **** 
1529:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1530:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1531:Drivers/CMSIS/Include/core_cm7.h **** 
1532:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1533:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1534:Drivers/CMSIS/Include/core_cm7.h **** 
1535:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1536:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1537:Drivers/CMSIS/Include/core_cm7.h **** 
1538:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1539:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1540:Drivers/CMSIS/Include/core_cm7.h **** 
1541:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1542:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1543:Drivers/CMSIS/Include/core_cm7.h **** 
1544:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1545:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1546:Drivers/CMSIS/Include/core_cm7.h **** 
1547:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1548:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1549:Drivers/CMSIS/Include/core_cm7.h **** 
1550:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1551:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1552:Drivers/CMSIS/Include/core_cm7.h **** 
1553:Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Context Address Register Definitions */
1554:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1555:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1556:Drivers/CMSIS/Include/core_cm7.h **** 
1557:Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Default Status Control Register Definitions */
1558:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1559:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1560:Drivers/CMSIS/Include/core_cm7.h **** 
1561:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1562:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1563:Drivers/CMSIS/Include/core_cm7.h **** 
1564:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1565:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1566:Drivers/CMSIS/Include/core_cm7.h **** 
1567:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1568:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1569:Drivers/CMSIS/Include/core_cm7.h **** 
1570:Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 0 Definitions */
1571:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1572:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1573:Drivers/CMSIS/Include/core_cm7.h **** 
1574:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1575:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1576:Drivers/CMSIS/Include/core_cm7.h **** 
1577:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1578:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1579:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 38


1580:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1581:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1582:Drivers/CMSIS/Include/core_cm7.h **** 
1583:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1584:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1585:Drivers/CMSIS/Include/core_cm7.h **** 
1586:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1587:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1588:Drivers/CMSIS/Include/core_cm7.h **** 
1589:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1590:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1591:Drivers/CMSIS/Include/core_cm7.h **** 
1592:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1593:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1594:Drivers/CMSIS/Include/core_cm7.h **** 
1595:Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 1 Definitions */
1596:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1597:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1598:Drivers/CMSIS/Include/core_cm7.h **** 
1599:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1600:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1601:Drivers/CMSIS/Include/core_cm7.h **** 
1602:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1603:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1604:Drivers/CMSIS/Include/core_cm7.h **** 
1605:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1606:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1607:Drivers/CMSIS/Include/core_cm7.h **** 
1608:Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 2 Definitions */
1609:Drivers/CMSIS/Include/core_cm7.h **** 
1610:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_FPU */
1611:Drivers/CMSIS/Include/core_cm7.h **** 
1612:Drivers/CMSIS/Include/core_cm7.h **** 
1613:Drivers/CMSIS/Include/core_cm7.h **** /**
1614:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1615:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1616:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Core Debug Registers
1617:Drivers/CMSIS/Include/core_cm7.h ****   @{
1618:Drivers/CMSIS/Include/core_cm7.h ****  */
1619:Drivers/CMSIS/Include/core_cm7.h **** 
1620:Drivers/CMSIS/Include/core_cm7.h **** /**
1621:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1622:Drivers/CMSIS/Include/core_cm7.h ****  */
1623:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1624:Drivers/CMSIS/Include/core_cm7.h **** {
1625:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1626:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1627:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1628:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1629:Drivers/CMSIS/Include/core_cm7.h **** } CoreDebug_Type;
1630:Drivers/CMSIS/Include/core_cm7.h **** 
1631:Drivers/CMSIS/Include/core_cm7.h **** /* Debug Halting Control and Status Register Definitions */
1632:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1633:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1634:Drivers/CMSIS/Include/core_cm7.h **** 
1635:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1636:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 39


1637:Drivers/CMSIS/Include/core_cm7.h **** 
1638:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1639:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1640:Drivers/CMSIS/Include/core_cm7.h **** 
1641:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1642:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1643:Drivers/CMSIS/Include/core_cm7.h **** 
1644:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1645:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1646:Drivers/CMSIS/Include/core_cm7.h **** 
1647:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1648:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1649:Drivers/CMSIS/Include/core_cm7.h **** 
1650:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1651:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1652:Drivers/CMSIS/Include/core_cm7.h **** 
1653:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1654:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1655:Drivers/CMSIS/Include/core_cm7.h **** 
1656:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1657:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1658:Drivers/CMSIS/Include/core_cm7.h **** 
1659:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1660:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1661:Drivers/CMSIS/Include/core_cm7.h **** 
1662:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1663:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1664:Drivers/CMSIS/Include/core_cm7.h **** 
1665:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1666:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1667:Drivers/CMSIS/Include/core_cm7.h **** 
1668:Drivers/CMSIS/Include/core_cm7.h **** /* Debug Core Register Selector Register Definitions */
1669:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1670:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1671:Drivers/CMSIS/Include/core_cm7.h **** 
1672:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1673:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1674:Drivers/CMSIS/Include/core_cm7.h **** 
1675:Drivers/CMSIS/Include/core_cm7.h **** /* Debug Exception and Monitor Control Register Definitions */
1676:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1677:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1678:Drivers/CMSIS/Include/core_cm7.h **** 
1679:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1680:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1681:Drivers/CMSIS/Include/core_cm7.h **** 
1682:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1683:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1684:Drivers/CMSIS/Include/core_cm7.h **** 
1685:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1686:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1687:Drivers/CMSIS/Include/core_cm7.h **** 
1688:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1689:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1690:Drivers/CMSIS/Include/core_cm7.h **** 
1691:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1692:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1693:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 40


1694:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1695:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1696:Drivers/CMSIS/Include/core_cm7.h **** 
1697:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1698:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1699:Drivers/CMSIS/Include/core_cm7.h **** 
1700:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1701:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1702:Drivers/CMSIS/Include/core_cm7.h **** 
1703:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1704:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1705:Drivers/CMSIS/Include/core_cm7.h **** 
1706:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1707:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1708:Drivers/CMSIS/Include/core_cm7.h **** 
1709:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1710:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1711:Drivers/CMSIS/Include/core_cm7.h **** 
1712:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1713:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1714:Drivers/CMSIS/Include/core_cm7.h **** 
1715:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_CoreDebug */
1716:Drivers/CMSIS/Include/core_cm7.h **** 
1717:Drivers/CMSIS/Include/core_cm7.h **** 
1718:Drivers/CMSIS/Include/core_cm7.h **** /**
1719:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1720:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1721:Drivers/CMSIS/Include/core_cm7.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1722:Drivers/CMSIS/Include/core_cm7.h ****   @{
1723:Drivers/CMSIS/Include/core_cm7.h ****  */
1724:Drivers/CMSIS/Include/core_cm7.h **** 
1725:Drivers/CMSIS/Include/core_cm7.h **** /**
1726:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1727:Drivers/CMSIS/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1728:Drivers/CMSIS/Include/core_cm7.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1729:Drivers/CMSIS/Include/core_cm7.h ****   \return           Masked and shifted value.
1730:Drivers/CMSIS/Include/core_cm7.h **** */
1731:Drivers/CMSIS/Include/core_cm7.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1732:Drivers/CMSIS/Include/core_cm7.h **** 
1733:Drivers/CMSIS/Include/core_cm7.h **** /**
1734:Drivers/CMSIS/Include/core_cm7.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1735:Drivers/CMSIS/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1736:Drivers/CMSIS/Include/core_cm7.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1737:Drivers/CMSIS/Include/core_cm7.h ****   \return           Masked and shifted bit field value.
1738:Drivers/CMSIS/Include/core_cm7.h **** */
1739:Drivers/CMSIS/Include/core_cm7.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1740:Drivers/CMSIS/Include/core_cm7.h **** 
1741:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_core_bitfield */
1742:Drivers/CMSIS/Include/core_cm7.h **** 
1743:Drivers/CMSIS/Include/core_cm7.h **** 
1744:Drivers/CMSIS/Include/core_cm7.h **** /**
1745:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1746:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_core_base     Core Definitions
1747:Drivers/CMSIS/Include/core_cm7.h ****   \brief      Definitions for base addresses, unions, and structures.
1748:Drivers/CMSIS/Include/core_cm7.h ****   @{
1749:Drivers/CMSIS/Include/core_cm7.h ****  */
1750:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 41


1751:Drivers/CMSIS/Include/core_cm7.h **** /* Memory mapping of Core Hardware */
1752:Drivers/CMSIS/Include/core_cm7.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1753:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1754:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1755:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1756:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1757:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1758:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1759:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1760:Drivers/CMSIS/Include/core_cm7.h **** 
1761:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1762:Drivers/CMSIS/Include/core_cm7.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1763:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1764:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1765:Drivers/CMSIS/Include/core_cm7.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1766:Drivers/CMSIS/Include/core_cm7.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1767:Drivers/CMSIS/Include/core_cm7.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1768:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1769:Drivers/CMSIS/Include/core_cm7.h **** 
1770:Drivers/CMSIS/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1771:Drivers/CMSIS/Include/core_cm7.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1772:Drivers/CMSIS/Include/core_cm7.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1773:Drivers/CMSIS/Include/core_cm7.h **** #endif
1774:Drivers/CMSIS/Include/core_cm7.h **** 
1775:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1776:Drivers/CMSIS/Include/core_cm7.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1777:Drivers/CMSIS/Include/core_cm7.h **** 
1778:Drivers/CMSIS/Include/core_cm7.h **** /*@} */
1779:Drivers/CMSIS/Include/core_cm7.h **** 
1780:Drivers/CMSIS/Include/core_cm7.h **** 
1781:Drivers/CMSIS/Include/core_cm7.h **** 
1782:Drivers/CMSIS/Include/core_cm7.h **** /*******************************************************************************
1783:Drivers/CMSIS/Include/core_cm7.h ****  *                Hardware Abstraction Layer
1784:Drivers/CMSIS/Include/core_cm7.h ****   Core Function Interface contains:
1785:Drivers/CMSIS/Include/core_cm7.h ****   - Core NVIC Functions
1786:Drivers/CMSIS/Include/core_cm7.h ****   - Core SysTick Functions
1787:Drivers/CMSIS/Include/core_cm7.h ****   - Core Debug Functions
1788:Drivers/CMSIS/Include/core_cm7.h ****   - Core Register Access Functions
1789:Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
1790:Drivers/CMSIS/Include/core_cm7.h **** /**
1791:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1792:Drivers/CMSIS/Include/core_cm7.h **** */
1793:Drivers/CMSIS/Include/core_cm7.h **** 
1794:Drivers/CMSIS/Include/core_cm7.h **** 
1795:Drivers/CMSIS/Include/core_cm7.h **** 
1796:Drivers/CMSIS/Include/core_cm7.h **** /* ##########################   NVIC functions  #################################### */
1797:Drivers/CMSIS/Include/core_cm7.h **** /**
1798:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
1799:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1800:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1801:Drivers/CMSIS/Include/core_cm7.h ****   @{
1802:Drivers/CMSIS/Include/core_cm7.h ****  */
1803:Drivers/CMSIS/Include/core_cm7.h **** 
1804:Drivers/CMSIS/Include/core_cm7.h **** #ifndef CMSIS_NVIC_VIRTUAL
1805:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1806:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1807:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 42


1808:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1809:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1810:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1811:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1812:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1813:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetActive              __NVIC_GetActive
1814:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1815:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1816:Drivers/CMSIS/Include/core_cm7.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1817:Drivers/CMSIS/Include/core_cm7.h **** 
1818:Drivers/CMSIS/Include/core_cm7.h **** #ifndef CMSIS_VECTAB_VIRTUAL
1819:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetVector              __NVIC_SetVector
1820:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetVector              __NVIC_GetVector
1821:Drivers/CMSIS/Include/core_cm7.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1822:Drivers/CMSIS/Include/core_cm7.h **** 
1823:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_USER_IRQ_OFFSET          16
1824:Drivers/CMSIS/Include/core_cm7.h **** 
1825:Drivers/CMSIS/Include/core_cm7.h **** 
1826:Drivers/CMSIS/Include/core_cm7.h **** 
1827:Drivers/CMSIS/Include/core_cm7.h **** /**
1828:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Priority Grouping
1829:Drivers/CMSIS/Include/core_cm7.h ****   \details Sets the priority grouping field using the required unlock sequence.
1830:Drivers/CMSIS/Include/core_cm7.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1831:Drivers/CMSIS/Include/core_cm7.h ****            Only values from 0..7 are used.
1832:Drivers/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
1833:Drivers/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1834:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      PriorityGroup  Priority grouping field.
1835:Drivers/CMSIS/Include/core_cm7.h ****  */
1836:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1837:Drivers/CMSIS/Include/core_cm7.h **** {
1838:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t reg_value;
1839:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1840:Drivers/CMSIS/Include/core_cm7.h **** 
1841:Drivers/CMSIS/Include/core_cm7.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1842:Drivers/CMSIS/Include/core_cm7.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1843:Drivers/CMSIS/Include/core_cm7.h ****   reg_value  =  (reg_value                                   |
1844:Drivers/CMSIS/Include/core_cm7.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1845:Drivers/CMSIS/Include/core_cm7.h ****                 (PriorityGroupTmp << 8U)                      );              /* Insert write key a
1846:Drivers/CMSIS/Include/core_cm7.h ****   SCB->AIRCR =  reg_value;
1847:Drivers/CMSIS/Include/core_cm7.h **** }
1848:Drivers/CMSIS/Include/core_cm7.h **** 
1849:Drivers/CMSIS/Include/core_cm7.h **** 
1850:Drivers/CMSIS/Include/core_cm7.h **** /**
1851:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Priority Grouping
1852:Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1853:Drivers/CMSIS/Include/core_cm7.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1854:Drivers/CMSIS/Include/core_cm7.h ****  */
1855:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1856:Drivers/CMSIS/Include/core_cm7.h **** {
1857:Drivers/CMSIS/Include/core_cm7.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1858:Drivers/CMSIS/Include/core_cm7.h **** }
1859:Drivers/CMSIS/Include/core_cm7.h **** 
1860:Drivers/CMSIS/Include/core_cm7.h **** 
1861:Drivers/CMSIS/Include/core_cm7.h **** /**
1862:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Enable Interrupt
1863:Drivers/CMSIS/Include/core_cm7.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1864:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 43


1865:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1866:Drivers/CMSIS/Include/core_cm7.h ****  */
1867:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1868:Drivers/CMSIS/Include/core_cm7.h **** {
1869:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1870:Drivers/CMSIS/Include/core_cm7.h ****   {
1871:Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) &
 212              		.loc 2 1871 0
 213 0022 084A     		ldr	r2, .L5+8
 214 0024 4FF48001 		mov	r1, #4194304
 215 0028 5160     		str	r1, [r2, #4]
 216              	.LVL1:
 217              	.LBE43:
 218              	.LBE42:
 219              	.LBB44:
 220              	.LBB45:
1872:Drivers/CMSIS/Include/core_cm7.h ****   }
1873:Drivers/CMSIS/Include/core_cm7.h **** }
1874:Drivers/CMSIS/Include/core_cm7.h **** 
1875:Drivers/CMSIS/Include/core_cm7.h **** 
1876:Drivers/CMSIS/Include/core_cm7.h **** /**
1877:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Enable status
1878:Drivers/CMSIS/Include/core_cm7.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1879:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1880:Drivers/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt is not enabled.
1881:Drivers/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt is enabled.
1882:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1883:Drivers/CMSIS/Include/core_cm7.h ****  */
1884:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1885:Drivers/CMSIS/Include/core_cm7.h **** {
1886:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1887:Drivers/CMSIS/Include/core_cm7.h ****   {
1888:Drivers/CMSIS/Include/core_cm7.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32
1889:Drivers/CMSIS/Include/core_cm7.h ****   }
1890:Drivers/CMSIS/Include/core_cm7.h ****   else
1891:Drivers/CMSIS/Include/core_cm7.h ****   {
1892:Drivers/CMSIS/Include/core_cm7.h ****     return(0U);
1893:Drivers/CMSIS/Include/core_cm7.h ****   }
1894:Drivers/CMSIS/Include/core_cm7.h **** }
1895:Drivers/CMSIS/Include/core_cm7.h **** 
1896:Drivers/CMSIS/Include/core_cm7.h **** 
1897:Drivers/CMSIS/Include/core_cm7.h **** /**
1898:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Disable Interrupt
1899:Drivers/CMSIS/Include/core_cm7.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1900:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1901:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1902:Drivers/CMSIS/Include/core_cm7.h ****  */
1903:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1904:Drivers/CMSIS/Include/core_cm7.h **** {
1905:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1906:Drivers/CMSIS/Include/core_cm7.h ****   {
1907:Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ICER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) &
1908:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
1909:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
1910:Drivers/CMSIS/Include/core_cm7.h ****   }
1911:Drivers/CMSIS/Include/core_cm7.h **** }
1912:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 44


1913:Drivers/CMSIS/Include/core_cm7.h **** 
1914:Drivers/CMSIS/Include/core_cm7.h **** /**
1915:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Pending Interrupt
1916:Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1917:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1918:Drivers/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt status is not pending.
1919:Drivers/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt status is pending.
1920:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1921:Drivers/CMSIS/Include/core_cm7.h ****  */
1922:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1923:Drivers/CMSIS/Include/core_cm7.h **** {
1924:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1925:Drivers/CMSIS/Include/core_cm7.h ****   {
1926:Drivers/CMSIS/Include/core_cm7.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32
1927:Drivers/CMSIS/Include/core_cm7.h ****   }
1928:Drivers/CMSIS/Include/core_cm7.h ****   else
1929:Drivers/CMSIS/Include/core_cm7.h ****   {
1930:Drivers/CMSIS/Include/core_cm7.h ****     return(0U);
1931:Drivers/CMSIS/Include/core_cm7.h ****   }
1932:Drivers/CMSIS/Include/core_cm7.h **** }
1933:Drivers/CMSIS/Include/core_cm7.h **** 
1934:Drivers/CMSIS/Include/core_cm7.h **** 
1935:Drivers/CMSIS/Include/core_cm7.h **** /**
1936:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Pending Interrupt
1937:Drivers/CMSIS/Include/core_cm7.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1938:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1939:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1940:Drivers/CMSIS/Include/core_cm7.h ****  */
1941:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1942:Drivers/CMSIS/Include/core_cm7.h **** {
1943:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1944:Drivers/CMSIS/Include/core_cm7.h ****   {
1945:Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) &
1946:Drivers/CMSIS/Include/core_cm7.h ****   }
1947:Drivers/CMSIS/Include/core_cm7.h **** }
1948:Drivers/CMSIS/Include/core_cm7.h **** 
1949:Drivers/CMSIS/Include/core_cm7.h **** 
1950:Drivers/CMSIS/Include/core_cm7.h **** /**
1951:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Clear Pending Interrupt
1952:Drivers/CMSIS/Include/core_cm7.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1953:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1954:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1955:Drivers/CMSIS/Include/core_cm7.h ****  */
1956:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1957:Drivers/CMSIS/Include/core_cm7.h **** {
1958:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1959:Drivers/CMSIS/Include/core_cm7.h ****   {
1960:Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ICPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) &
1961:Drivers/CMSIS/Include/core_cm7.h ****   }
1962:Drivers/CMSIS/Include/core_cm7.h **** }
1963:Drivers/CMSIS/Include/core_cm7.h **** 
1964:Drivers/CMSIS/Include/core_cm7.h **** 
1965:Drivers/CMSIS/Include/core_cm7.h **** /**
1966:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Active Interrupt
1967:Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1968:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1969:Drivers/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt status is not active.
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 45


1970:Drivers/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt status is active.
1971:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1972:Drivers/CMSIS/Include/core_cm7.h ****  */
1973:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
1974:Drivers/CMSIS/Include/core_cm7.h **** {
1975:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1976:Drivers/CMSIS/Include/core_cm7.h ****   {
1977:Drivers/CMSIS/Include/core_cm7.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32
1978:Drivers/CMSIS/Include/core_cm7.h ****   }
1979:Drivers/CMSIS/Include/core_cm7.h ****   else
1980:Drivers/CMSIS/Include/core_cm7.h ****   {
1981:Drivers/CMSIS/Include/core_cm7.h ****     return(0U);
1982:Drivers/CMSIS/Include/core_cm7.h ****   }
1983:Drivers/CMSIS/Include/core_cm7.h **** }
1984:Drivers/CMSIS/Include/core_cm7.h **** 
1985:Drivers/CMSIS/Include/core_cm7.h **** 
1986:Drivers/CMSIS/Include/core_cm7.h **** /**
1987:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Interrupt Priority
1988:Drivers/CMSIS/Include/core_cm7.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
1989:Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
1990:Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
1991:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Interrupt number.
1992:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]  priority  Priority to set.
1993:Drivers/CMSIS/Include/core_cm7.h ****   \note    The priority cannot be set for every processor exception.
1994:Drivers/CMSIS/Include/core_cm7.h ****  */
1995:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1996:Drivers/CMSIS/Include/core_cm7.h **** {
1997:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1998:Drivers/CMSIS/Include/core_cm7.h ****   {
1999:Drivers/CMSIS/Include/core_cm7.h ****     NVIC->IP[((uint32_t)(int32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_B
 221              		.loc 2 1999 0
 222 002a F021     		movs	r1, #240
 223 002c 82F83613 		strb	r1, [r2, #822]
 224              	.LVL2:
 225              	.LBE45:
 226              	.LBE44:
 323:Src/main.c    ****    // enable interrupt request
 324:Src/main.c    ****   NVIC_EnableIRQ(TIM6_DAC_IRQn);
 325:Src/main.c    ****   // set priority 
 326:Src/main.c    ****   NVIC_SetPriority(TIM6_DAC_IRQn, 15);
 327:Src/main.c    ****   // enable TIM6
 328:Src/main.c    ****   TIM6->CR1 |= TIM_CR1_CEN;
 227              		.loc 1 328 0
 228 0030 1A88     		ldrh	r2, [r3]
 229 0032 42F00102 		orr	r2, r2, #1
 230 0036 1A80     		strh	r2, [r3]	@ movhi
 329:Src/main.c    **** }
 231              		.loc 1 329 0
 232 0038 7047     		bx	lr
 233              	.L6:
 234 003a 00BF     		.align	2
 235              	.L5:
 236 003c 00440258 		.word	1476543488
 237 0040 00100040 		.word	1073745920
 238 0044 00E100E0 		.word	-536813312
 239              		.cfi_endproc
 240              	.LFE144:
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 46


 242              		.section	.text.zeroArray,"ax",%progbits
 243              		.align	1
 244              		.syntax unified
 245              		.thumb
 246              		.thumb_func
 247              		.fpu fpv5-d16
 249              	zeroArray:
 250              	.LFB145:
 330:Src/main.c    **** 
 331:Src/main.c    **** 
 332:Src/main.c    **** // just clear array for easier visualization
 333:Src/main.c    **** static void zeroArray(void) {
 251              		.loc 1 333 0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 0
 254              		@ frame_needed = 0, uses_anonymous_args = 0
 255              		@ link register save eliminated.
 256              	.LVL3:
 257              	.LBB46:
 334:Src/main.c    ****   for(int i = 0; i < DMA_BUFFER_SIZE; ++i) {
 258              		.loc 1 334 0
 259 0000 0023     		movs	r3, #0
 260 0002 03E0     		b	.L8
 261              	.LVL4:
 262              	.L9:
 335:Src/main.c    ****     buffer[i] = i;
 263              		.loc 1 335 0 discriminator 3
 264 0004 034A     		ldr	r2, .L10
 265 0006 42F82330 		str	r3, [r2, r3, lsl #2]
 334:Src/main.c    ****   for(int i = 0; i < DMA_BUFFER_SIZE; ++i) {
 266              		.loc 1 334 0 discriminator 3
 267 000a 0133     		adds	r3, r3, #1
 268              	.LVL5:
 269              	.L8:
 334:Src/main.c    ****   for(int i = 0; i < DMA_BUFFER_SIZE; ++i) {
 270              		.loc 1 334 0 is_stmt 0 discriminator 1
 271 000c B3F5704F 		cmp	r3, #61440
 272 0010 F8DB     		blt	.L9
 273              	.LBE46:
 336:Src/main.c    ****   }
 337:Src/main.c    **** }
 274              		.loc 1 337 0 is_stmt 1
 275 0012 7047     		bx	lr
 276              	.L11:
 277              		.align	2
 278              	.L10:
 279 0014 00000000 		.word	buffer
 280              		.cfi_endproc
 281              	.LFE145:
 283              		.section	.text.my_initClocks,"ax",%progbits
 284              		.align	1
 285              		.syntax unified
 286              		.thumb
 287              		.thumb_func
 288              		.fpu fpv5-d16
 290              	my_initClocks:
 291              	.LFB152:
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 47


 338:Src/main.c    **** 
 339:Src/main.c    **** static void printDebugBuffer(void) {
 340:Src/main.c    ****   printf("Debug Info: \r\n");
 341:Src/main.c    ****   for(int i = 0; i < debugBufferLength; ++i) {
 342:Src/main.c    ****     
 343:Src/main.c    ****     if(!(i % 2)) {
 344:Src/main.c    ****       printf("------------------------------ \r\n");
 345:Src/main.c    ****     }
 346:Src/main.c    ****     printf("NDTR: %u circBuffer %u dmaFlag: %u StartBufferEntry %10u \r\n",
 347:Src/main.c    ****            debugBuffer[i].NDTR,
 348:Src/main.c    ****            debugBuffer[i].circBufferCounter,
 349:Src/main.c    ****            debugBuffer[i].dmaFlag,
 350:Src/main.c    ****            debugBuffer[i].StartBufferEntry);
 351:Src/main.c    ****   }
 352:Src/main.c    ****   //printf("end \r\n");
 353:Src/main.c    **** }
 354:Src/main.c    **** 
 355:Src/main.c    **** // print array in matrix like style
 356:Src/main.c    **** static void printArray(void) {
 357:Src/main.c    ****   printf("buffer: \r\n");
 358:Src/main.c    ****   for(int i = 0; i < DMA_BUFFER_SIZE; ++i) {
 359:Src/main.c    ****     printf(" %12u ", buffer[i]);
 360:Src/main.c    ****     // new line every 10 outputs
 361:Src/main.c    ****     if(!((i+1) % 8)) {
 362:Src/main.c    ****       printf("\r\n");
 363:Src/main.c    ****     }
 364:Src/main.c    ****   }  
 365:Src/main.c    **** }
 366:Src/main.c    **** 
 367:Src/main.c    **** static void writeFile(void) {
 368:Src/main.c    ****   unsigned int circ_buffer_ptr = 0;
 369:Src/main.c    ****   for(int i = 0; i < (DMA_BUFFER_SIZE/SIZE); ++i) {
 370:Src/main.c    ****     CDC_Transmit_FS(buffer + circ_buffer_ptr, SIZE*sizeof(unsigned int));
 371:Src/main.c    ****     circ_buffer_ptr = (circ_buffer_ptr + SIZE) % DMA_BUFFER_SIZE;
 372:Src/main.c    ****     while(((USBD_CDC_HandleTypeDef*)(hUsbDeviceFS.pClassData))->TxState != 0);
 373:Src/main.c    ****   }
 374:Src/main.c    **** }// writeFile
 375:Src/main.c    ****   
 376:Src/main.c    **** 
 377:Src/main.c    **** 
 378:Src/main.c    **** /* USER CODE BEGIN 4 */
 379:Src/main.c    **** int __io_putchar(int ch)
 380:Src/main.c    **** {
 381:Src/main.c    ****   uint8_t c[1];
 382:Src/main.c    ****   c[0] = ch & 0x00FF;
 383:Src/main.c    ****   HAL_UART_Transmit(&huart3, &c[0], 1, 10);
 384:Src/main.c    ****   return ch;
 385:Src/main.c    **** }
 386:Src/main.c    **** 
 387:Src/main.c    **** int _write(int file,char *ptr, int len)
 388:Src/main.c    **** {
 389:Src/main.c    ****   int DataIdx;
 390:Src/main.c    ****   for(DataIdx= 0; DataIdx< len; DataIdx++)
 391:Src/main.c    ****   {
 392:Src/main.c    ****     __io_putchar(*ptr++);
 393:Src/main.c    ****   }
 394:Src/main.c    ****   return len;
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 48


 395:Src/main.c    **** }
 396:Src/main.c    **** 
 397:Src/main.c    **** /* USER CODE END 4 */
 398:Src/main.c    **** 
 399:Src/main.c    **** /**
 400:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 401:Src/main.c    ****   * @param  file: The file name as string.
 402:Src/main.c    ****   * @param  line: The line in file as a number.
 403:Src/main.c    ****   * @retval None
 404:Src/main.c    ****   */
 405:Src/main.c    **** void _Error_Handler(char *file, int line)
 406:Src/main.c    **** {
 407:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 408:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 409:Src/main.c    ****   while(1)
 410:Src/main.c    ****   {
 411:Src/main.c    ****   }
 412:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 413:Src/main.c    **** }
 414:Src/main.c    **** 
 415:Src/main.c    **** #ifdef  USE_FULL_ASSERT
 416:Src/main.c    **** /**
 417:Src/main.c    ****   * @brief  Reports the name of the source file and the source line number
 418:Src/main.c    ****   *         where the assert_param error has occurred.
 419:Src/main.c    ****   * @param  file: pointer to the source file name
 420:Src/main.c    ****   * @param  line: assert_param error line source number
 421:Src/main.c    ****   * @retval None
 422:Src/main.c    ****   */
 423:Src/main.c    **** void assert_failed(uint8_t* file, uint32_t line)
 424:Src/main.c    **** { 
 425:Src/main.c    ****   /* USER CODE BEGIN 6 */
 426:Src/main.c    ****   /* User can add his own implementation to report the file name and line number,
 427:Src/main.c    ****      tex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
 428:Src/main.c    ****   /* USER CODE END 6 */
 429:Src/main.c    **** }
 430:Src/main.c    **** #endif /* USE_FULL_ASSERT */
 431:Src/main.c    **** 
 432:Src/main.c    **** /**
 433:Src/main.c    ****   * @}
 434:Src/main.c    ****   */
 435:Src/main.c    **** 
 436:Src/main.c    **** /**
 437:Src/main.c    ****   * @}
 438:Src/main.c    ****   */
 439:Src/main.c    **** 
 440:Src/main.c    **** /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/
 441:Src/main.c    **** /* USER CODE BEGIN 7 */
 442:Src/main.c    **** // this config should get (400 Mhz) CPU clock from (8 Mhz Hse) RC oscillator
 443:Src/main.c    **** void my_initClocks(void) {
 292              		.loc 1 443 0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296              		@ link register save eliminated.
 444:Src/main.c    ****   // WARNING: this is needed bcoz of high CPU freq
 445:Src/main.c    ****   // set up power Level Scale 1
 446:Src/main.c    ****   MODIFY_REG(PWR->CR3, PWR_CR3_SCUEN, 0);
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 49


 297              		.loc 1 446 0
 298 0000 4E4B     		ldr	r3, .L17
 299 0002 DA68     		ldr	r2, [r3, #12]
 300 0004 22F00402 		bic	r2, r2, #4
 301 0008 DA60     		str	r2, [r3, #12]
 447:Src/main.c    ****   PWR->D3CR |= (0x3 << 14);
 302              		.loc 1 447 0
 303 000a 9A69     		ldr	r2, [r3, #24]
 304 000c 42F44042 		orr	r2, r2, #49152
 305 0010 9A61     		str	r2, [r3, #24]
 306              	.L13:
 448:Src/main.c    ****   // power level configuration safeguard
 449:Src/main.c    ****   while ((PWR->D3CR & (PWR_D3CR_VOSRDY)) != PWR_D3CR_VOSRDY);
 307              		.loc 1 449 0 discriminator 1
 308 0012 4A4B     		ldr	r3, .L17
 309 0014 9B69     		ldr	r3, [r3, #24]
 310 0016 13F4005F 		tst	r3, #8192
 311 001a FAD0     		beq	.L13
 450:Src/main.c    ****   // Enable HSI48 for usb clocking
 451:Src/main.c    ****   RCC->CR |= (0x1 << 12);
 312              		.loc 1 451 0
 313 001c 484B     		ldr	r3, .L17+4
 314 001e 1A68     		ldr	r2, [r3]
 315 0020 42F48052 		orr	r2, r2, #4096
 316 0024 1A60     		str	r2, [r3]
 452:Src/main.c    ****   // Enable HSE as Bypass RC-oscillator
 453:Src/main.c    ****   // HSEBYP bit enabled
 454:Src/main.c    ****   RCC->CR |= (1 << 18);
 317              		.loc 1 454 0
 318 0026 1A68     		ldr	r2, [r3]
 319 0028 42F48022 		orr	r2, r2, #262144
 320 002c 1A60     		str	r2, [r3]
 455:Src/main.c    ****   // HSEON bit enabled
 456:Src/main.c    ****   RCC->CR |= (1 << 16);
 321              		.loc 1 456 0
 322 002e 1A68     		ldr	r2, [r3]
 323 0030 42F48032 		orr	r2, r2, #65536
 324 0034 1A60     		str	r2, [r3]
 325              	.L14:
 457:Src/main.c    ****   // safeguard HSE
 458:Src/main.c    ****   while(!(RCC->CR & (0x1 << 17)));
 326              		.loc 1 458 0 discriminator 1
 327 0036 424B     		ldr	r3, .L17+4
 328 0038 1B68     		ldr	r3, [r3]
 329 003a 13F4003F 		tst	r3, #131072
 330 003e FAD0     		beq	.L14
 459:Src/main.c    ****   // NOTE: for further configuration
 460:Src/main.c    ****   // PLL OFF 
 461:Src/main.c    ****   RCC->CR &= ~(RCC_CR_PLL1ON);
 331              		.loc 1 461 0
 332 0040 3F4B     		ldr	r3, .L17+4
 333 0042 1A68     		ldr	r2, [r3]
 334 0044 22F08072 		bic	r2, r2, #16777216
 335 0048 1A60     		str	r2, [r3]
 462:Src/main.c    ****   // set PLL1 source as (HSE)
 463:Src/main.c    ****   RCC->PLLCKSELR |= (0x2 << 0);
 336              		.loc 1 463 0
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 50


 337 004a 9A6A     		ldr	r2, [r3, #40]
 338 004c 42F00202 		orr	r2, r2, #2
 339 0050 9A62     		str	r2, [r3, #40]
 464:Src/main.c    ****   // set PLL1 prescaler to (1)
 465:Src/main.c    ****   RCC->PLLCKSELR |= (0x1 << 4);
 340              		.loc 1 465 0
 341 0052 9A6A     		ldr	r2, [r3, #40]
 342 0054 42F01002 		orr	r2, r2, #16
 343 0058 9A62     		str	r2, [r3, #40]
 466:Src/main.c    ****   // set PLL1 multiplier to (100)
 467:Src/main.c    ****   RCC->PLL1DIVR |= (0x64 << 0);
 344              		.loc 1 467 0
 345 005a 1A6B     		ldr	r2, [r3, #48]
 346 005c 42F06402 		orr	r2, r2, #100
 347 0060 1A63     		str	r2, [r3, #48]
 468:Src/main.c    ****   // set PLL1 DIVP1 to (2)
 469:Src/main.c    ****   RCC->PLL1DIVR |= (0x1 << 9);
 348              		.loc 1 469 0
 349 0062 1A6B     		ldr	r2, [r3, #48]
 350 0064 42F40072 		orr	r2, r2, #512
 351 0068 1A63     		str	r2, [r3, #48]
 470:Src/main.c    ****   // set PLL1 DIVQ1 to (4)
 471:Src/main.c    ****   RCC->PLL1DIVR |= (0x3 << 16);
 352              		.loc 1 471 0
 353 006a 1A6B     		ldr	r2, [r3, #48]
 354 006c 42F44032 		orr	r2, r2, #196608
 355 0070 1A63     		str	r2, [r3, #48]
 472:Src/main.c    ****   // set PLL1 DIVR1 to (2)
 473:Src/main.c    ****   RCC->PLL1DIVR |= (0x1 << 24);
 356              		.loc 1 473 0
 357 0072 1A6B     		ldr	r2, [r3, #48]
 358 0074 42F08072 		orr	r2, r2, #16777216
 359 0078 1A63     		str	r2, [r3, #48]
 474:Src/main.c    ****   // disable PLL1 FRACTION mode 
 475:Src/main.c    ****   RCC->PLLCFGR &= ~(0x1 << 0);
 360              		.loc 1 475 0
 361 007a DA6A     		ldr	r2, [r3, #44]
 362 007c 22F00102 		bic	r2, r2, #1
 363 0080 DA62     		str	r2, [r3, #44]
 476:Src/main.c    ****   // set FRACN1 to (0)
 477:Src/main.c    ****   RCC->PLL1FRACR = 0x0;
 364              		.loc 1 477 0
 365 0082 0022     		movs	r2, #0
 366 0084 5A63     		str	r2, [r3, #52]
 478:Src/main.c    ****   // set PLL input freq range to (8 - 16 Mhz)
 479:Src/main.c    ****   RCC->PLLCFGR |= (0x3 << 2);
 367              		.loc 1 479 0
 368 0086 DA6A     		ldr	r2, [r3, #44]
 369 0088 42F00C02 		orr	r2, r2, #12
 370 008c DA62     		str	r2, [r3, #44]
 480:Src/main.c    ****   // set PLL VCO frequency range (wide -> 192 - 836 Mhz)
 481:Src/main.c    ****   RCC->PLLCFGR |= (0x1 << 1);
 371              		.loc 1 481 0
 372 008e DA6A     		ldr	r2, [r3, #44]
 373 0090 42F00202 		orr	r2, r2, #2
 374 0094 DA62     		str	r2, [r3, #44]
 482:Src/main.c    ****   // set PLL1_DIVP|DIVQ|DIVR enable
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 51


 483:Src/main.c    ****   RCC->PLLCFGR |= (0x1 << 18) | (0x1 << 17) | (0x1 << 16);
 375              		.loc 1 483 0
 376 0096 DA6A     		ldr	r2, [r3, #44]
 377 0098 42F4E022 		orr	r2, r2, #458752
 378 009c DA62     		str	r2, [r3, #44]
 484:Src/main.c    ****   // enable PLL1 FRACTION mode 
 485:Src/main.c    ****   RCC->PLLCFGR |= (0x1 << 0);
 379              		.loc 1 485 0
 380 009e DA6A     		ldr	r2, [r3, #44]
 381 00a0 42F00102 		orr	r2, r2, #1
 382 00a4 DA62     		str	r2, [r3, #44]
 486:Src/main.c    ****   // enable PLL1
 487:Src/main.c    ****   RCC->CR |= (RCC_CR_PLL1ON);
 383              		.loc 1 487 0
 384 00a6 1A68     		ldr	r2, [r3]
 385 00a8 42F08072 		orr	r2, r2, #16777216
 386 00ac 1A60     		str	r2, [r3]
 387              	.L15:
 488:Src/main.c    ****   // safeguard PLL1
 489:Src/main.c    ****   while(!(RCC->CR & (0x1 << 25)));
 388              		.loc 1 489 0 discriminator 1
 389 00ae 244B     		ldr	r3, .L17+4
 390 00b0 1B68     		ldr	r3, [r3]
 391 00b2 13F0007F 		tst	r3, #33554432
 392 00b6 FAD0     		beq	.L15
 490:Src/main.c    ****   // WARNING should be matched with CPU speed 
 491:Src/main.c    ****   // set FLASH Latency (wait 2) 
 492:Src/main.c    ****   FLASH->ACR |= (0x2 << 0);
 393              		.loc 1 492 0
 394 00b8 224A     		ldr	r2, .L17+8
 395 00ba 1368     		ldr	r3, [r2]
 396 00bc 43F00203 		orr	r3, r3, #2
 397 00c0 1360     		str	r3, [r2]
 493:Src/main.c    ****   // NOTE 0x8 -> 2, 0x9 -> 4 ... first bit of reg part should be 1
 494:Src/main.c    ****   // set HPRE to (2) 
 495:Src/main.c    ****   RCC->D1CFGR |= (0x8 << 0);
 398              		.loc 1 495 0
 399 00c2 1F4B     		ldr	r3, .L17+4
 400 00c4 9A69     		ldr	r2, [r3, #24]
 401 00c6 42F00802 		orr	r2, r2, #8
 402 00ca 9A61     		str	r2, [r3, #24]
 496:Src/main.c    ****   // set D1CPRE to (1)
 497:Src/main.c    ****   RCC->D1CFGR |= (0x0 << 8);
 403              		.loc 1 497 0
 404 00cc 9A69     		ldr	r2, [r3, #24]
 405 00ce 9A61     		str	r2, [r3, #24]
 406              	.L16:
 498:Src/main.c    ****   // NOTE: actually do not needed
 499:Src/main.c    ****   // safeguard PLL1  
 500:Src/main.c    ****   while(!(RCC->CR & (0x1 << 25)));
 407              		.loc 1 500 0 discriminator 1
 408 00d0 1B4B     		ldr	r3, .L17+4
 409 00d2 1B68     		ldr	r3, [r3]
 410 00d4 13F0007F 		tst	r3, #33554432
 411 00d8 FAD0     		beq	.L16
 501:Src/main.c    ****   // set D1PPRE to (2)
 502:Src/main.c    ****   RCC->D1CFGR |= (0x4 << 4);
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 52


 412              		.loc 1 502 0
 413 00da 194B     		ldr	r3, .L17+4
 414 00dc 9A69     		ldr	r2, [r3, #24]
 415 00de 42F04002 		orr	r2, r2, #64
 416 00e2 9A61     		str	r2, [r3, #24]
 503:Src/main.c    ****   // set D2PPRE1 to (2)
 504:Src/main.c    ****   RCC->D2CFGR |= (0x4 << 4);
 417              		.loc 1 504 0
 418 00e4 DA69     		ldr	r2, [r3, #28]
 419 00e6 42F04002 		orr	r2, r2, #64
 420 00ea DA61     		str	r2, [r3, #28]
 505:Src/main.c    ****   // set D2PPRE2 to (2)
 506:Src/main.c    ****   RCC->D2CFGR |= (0x4 << 8);
 421              		.loc 1 506 0
 422 00ec DA69     		ldr	r2, [r3, #28]
 423 00ee 42F48062 		orr	r2, r2, #1024
 424 00f2 DA61     		str	r2, [r3, #28]
 507:Src/main.c    ****   // set D3PPRE2 to (2)
 508:Src/main.c    ****   RCC->D3CFGR |= (0x4 << 4);
 425              		.loc 1 508 0
 426 00f4 1A6A     		ldr	r2, [r3, #32]
 427 00f6 42F04002 		orr	r2, r2, #64
 428 00fa 1A62     		str	r2, [r3, #32]
 509:Src/main.c    ****   // set PLL1 as (sysClk)
 510:Src/main.c    ****   RCC->CFGR |= (0x3 << 0);
 429              		.loc 1 510 0
 430 00fc 1A69     		ldr	r2, [r3, #16]
 431 00fe 42F00302 		orr	r2, r2, #3
 432 0102 1A61     		str	r2, [r3, #16]
 511:Src/main.c    ****   // set USART2/3/4/5/7/8 clockw as (rcc_pclk1)
 512:Src/main.c    ****   RCC->D2CCIP2R &= ~(0x7 << 0);
 433              		.loc 1 512 0
 434 0104 5A6D     		ldr	r2, [r3, #84]
 435 0106 22F00702 		bic	r2, r2, #7
 436 010a 5A65     		str	r2, [r3, #84]
 513:Src/main.c    ****   RCC->D2CCIP2R |= (0x0 << 0);
 437              		.loc 1 513 0
 438 010c 5A6D     		ldr	r2, [r3, #84]
 439 010e 5A65     		str	r2, [r3, #84]
 514:Src/main.c    ****   // set USB clock as (HSI48)
 515:Src/main.c    ****   RCC->D2CCIP2R &= ~(0x3 << 20);
 440              		.loc 1 515 0
 441 0110 5A6D     		ldr	r2, [r3, #84]
 442 0112 22F44012 		bic	r2, r2, #3145728
 443 0116 5A65     		str	r2, [r3, #84]
 516:Src/main.c    ****   RCC->D2CCIP2R |= (0x3 << 20);
 444              		.loc 1 516 0
 445 0118 5A6D     		ldr	r2, [r3, #84]
 446 011a 42F44012 		orr	r2, r2, #3145728
 447 011e 5A65     		str	r2, [r3, #84]
 448              	.LVL6:
 449              	.LBB47:
 450              	.LBB48:
2000:Drivers/CMSIS/Include/core_cm7.h ****   }
2001:Drivers/CMSIS/Include/core_cm7.h ****   else
2002:Drivers/CMSIS/Include/core_cm7.h ****   {
2003:Drivers/CMSIS/Include/core_cm7.h ****     SCB->SHPR[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_B
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 53


2004:Drivers/CMSIS/Include/core_cm7.h ****   }
2005:Drivers/CMSIS/Include/core_cm7.h **** }
2006:Drivers/CMSIS/Include/core_cm7.h **** 
2007:Drivers/CMSIS/Include/core_cm7.h **** 
2008:Drivers/CMSIS/Include/core_cm7.h **** /**
2009:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Priority
2010:Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
2011:Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2012:Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2013:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn  Interrupt number.
2014:Drivers/CMSIS/Include/core_cm7.h ****   \return             Interrupt Priority.
2015:Drivers/CMSIS/Include/core_cm7.h ****                       Value is aligned automatically to the implemented priority bits of the microc
2016:Drivers/CMSIS/Include/core_cm7.h ****  */
2017:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
2018:Drivers/CMSIS/Include/core_cm7.h **** {
2019:Drivers/CMSIS/Include/core_cm7.h **** 
2020:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2021:Drivers/CMSIS/Include/core_cm7.h ****   {
2022:Drivers/CMSIS/Include/core_cm7.h ****     return(((uint32_t)NVIC->IP[((uint32_t)(int32_t)IRQn)]                >> (8U - __NVIC_PRIO_BITS)
2023:Drivers/CMSIS/Include/core_cm7.h ****   }
2024:Drivers/CMSIS/Include/core_cm7.h ****   else
2025:Drivers/CMSIS/Include/core_cm7.h ****   {
2026:Drivers/CMSIS/Include/core_cm7.h ****     return(((uint32_t)SCB->SHPR[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)
2027:Drivers/CMSIS/Include/core_cm7.h ****   }
2028:Drivers/CMSIS/Include/core_cm7.h **** }
2029:Drivers/CMSIS/Include/core_cm7.h **** 
2030:Drivers/CMSIS/Include/core_cm7.h **** 
2031:Drivers/CMSIS/Include/core_cm7.h **** /**
2032:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Encode Priority
2033:Drivers/CMSIS/Include/core_cm7.h ****   \details Encodes the priority for an interrupt with the given priority group,
2034:Drivers/CMSIS/Include/core_cm7.h ****            preemptive priority value, and subpriority value.
2035:Drivers/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
2036:Drivers/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
2037:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]     PriorityGroup  Used priority group.
2038:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
2039:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
2040:Drivers/CMSIS/Include/core_cm7.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
2041:Drivers/CMSIS/Include/core_cm7.h ****  */
2042:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
2043:Drivers/CMSIS/Include/core_cm7.h **** {
2044:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
2045:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
2046:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t SubPriorityBits;
2047:Drivers/CMSIS/Include/core_cm7.h **** 
2048:Drivers/CMSIS/Include/core_cm7.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
2049:Drivers/CMSIS/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
2050:Drivers/CMSIS/Include/core_cm7.h **** 
2051:Drivers/CMSIS/Include/core_cm7.h ****   return (
2052:Drivers/CMSIS/Include/core_cm7.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
2053:Drivers/CMSIS/Include/core_cm7.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
2054:Drivers/CMSIS/Include/core_cm7.h ****          );
2055:Drivers/CMSIS/Include/core_cm7.h **** }
2056:Drivers/CMSIS/Include/core_cm7.h **** 
2057:Drivers/CMSIS/Include/core_cm7.h **** 
2058:Drivers/CMSIS/Include/core_cm7.h **** /**
2059:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Decode Priority
2060:Drivers/CMSIS/Include/core_cm7.h ****   \details Decodes an interrupt priority value with a given priority group to
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 54


2061:Drivers/CMSIS/Include/core_cm7.h ****            preemptive priority value and subpriority value.
2062:Drivers/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
2063:Drivers/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
2064:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
2065:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]     PriorityGroup  Used priority group.
2066:Drivers/CMSIS/Include/core_cm7.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
2067:Drivers/CMSIS/Include/core_cm7.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
2068:Drivers/CMSIS/Include/core_cm7.h ****  */
2069:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
2070:Drivers/CMSIS/Include/core_cm7.h **** {
2071:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
2072:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
2073:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t SubPriorityBits;
2074:Drivers/CMSIS/Include/core_cm7.h **** 
2075:Drivers/CMSIS/Include/core_cm7.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
2076:Drivers/CMSIS/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
2077:Drivers/CMSIS/Include/core_cm7.h **** 
2078:Drivers/CMSIS/Include/core_cm7.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
2079:Drivers/CMSIS/Include/core_cm7.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
2080:Drivers/CMSIS/Include/core_cm7.h **** }
2081:Drivers/CMSIS/Include/core_cm7.h **** 
2082:Drivers/CMSIS/Include/core_cm7.h **** 
2083:Drivers/CMSIS/Include/core_cm7.h **** /**
2084:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Interrupt Vector
2085:Drivers/CMSIS/Include/core_cm7.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
2086:Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2087:Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2088:Drivers/CMSIS/Include/core_cm7.h ****            VTOR must been relocated to SRAM before.
2089:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn      Interrupt number
2090:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   vector    Address of interrupt handler function
2091:Drivers/CMSIS/Include/core_cm7.h ****  */
2092:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
2093:Drivers/CMSIS/Include/core_cm7.h **** {
2094:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
2095:Drivers/CMSIS/Include/core_cm7.h ****   vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET] = vector;
2096:Drivers/CMSIS/Include/core_cm7.h **** }
2097:Drivers/CMSIS/Include/core_cm7.h **** 
2098:Drivers/CMSIS/Include/core_cm7.h **** 
2099:Drivers/CMSIS/Include/core_cm7.h **** /**
2100:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Vector
2101:Drivers/CMSIS/Include/core_cm7.h ****   \details Reads an interrupt vector from interrupt vector table.
2102:Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2103:Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2104:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn      Interrupt number.
2105:Drivers/CMSIS/Include/core_cm7.h ****   \return                 Address of interrupt handler function
2106:Drivers/CMSIS/Include/core_cm7.h ****  */
2107:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
2108:Drivers/CMSIS/Include/core_cm7.h **** {
2109:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
2110:Drivers/CMSIS/Include/core_cm7.h ****   return vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET];
2111:Drivers/CMSIS/Include/core_cm7.h **** }
2112:Drivers/CMSIS/Include/core_cm7.h **** 
2113:Drivers/CMSIS/Include/core_cm7.h **** 
2114:Drivers/CMSIS/Include/core_cm7.h **** /**
2115:Drivers/CMSIS/Include/core_cm7.h ****   \brief   System Reset
2116:Drivers/CMSIS/Include/core_cm7.h ****   \details Initiates a system reset request to reset the MCU.
2117:Drivers/CMSIS/Include/core_cm7.h ****  */
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 55


2118:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void NVIC_SystemReset(void)
2119:Drivers/CMSIS/Include/core_cm7.h **** {
2120:Drivers/CMSIS/Include/core_cm7.h ****   __DSB();                                                          /* Ensure all outstanding memor
2121:Drivers/CMSIS/Include/core_cm7.h ****                                                                        buffered write are completed
2122:Drivers/CMSIS/Include/core_cm7.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
2123:Drivers/CMSIS/Include/core_cm7.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
2124:Drivers/CMSIS/Include/core_cm7.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
2125:Drivers/CMSIS/Include/core_cm7.h ****   __DSB();                                                          /* Ensure completion of memory 
2126:Drivers/CMSIS/Include/core_cm7.h **** 
2127:Drivers/CMSIS/Include/core_cm7.h ****   for(;;)                                                           /* wait until reset */
2128:Drivers/CMSIS/Include/core_cm7.h ****   {
2129:Drivers/CMSIS/Include/core_cm7.h ****     __NOP();
2130:Drivers/CMSIS/Include/core_cm7.h ****   }
2131:Drivers/CMSIS/Include/core_cm7.h **** }
2132:Drivers/CMSIS/Include/core_cm7.h **** 
2133:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_NVICFunctions */
2134:Drivers/CMSIS/Include/core_cm7.h **** 
2135:Drivers/CMSIS/Include/core_cm7.h **** 
2136:Drivers/CMSIS/Include/core_cm7.h **** /* ##########################  FPU functions  #################################### */
2137:Drivers/CMSIS/Include/core_cm7.h **** /**
2138:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2139:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_FpuFunctions FPU Functions
2140:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Function that provides FPU type.
2141:Drivers/CMSIS/Include/core_cm7.h ****   @{
2142:Drivers/CMSIS/Include/core_cm7.h ****  */
2143:Drivers/CMSIS/Include/core_cm7.h **** 
2144:Drivers/CMSIS/Include/core_cm7.h **** /**
2145:Drivers/CMSIS/Include/core_cm7.h ****   \brief   get FPU type
2146:Drivers/CMSIS/Include/core_cm7.h ****   \details returns the FPU type
2147:Drivers/CMSIS/Include/core_cm7.h ****   \returns
2148:Drivers/CMSIS/Include/core_cm7.h ****    - \b  0: No FPU
2149:Drivers/CMSIS/Include/core_cm7.h ****    - \b  1: Single precision FPU
2150:Drivers/CMSIS/Include/core_cm7.h ****    - \b  2: Double + Single precision FPU
2151:Drivers/CMSIS/Include/core_cm7.h ****  */
2152:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t SCB_GetFPUType(void)
2153:Drivers/CMSIS/Include/core_cm7.h **** {
2154:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t mvfr0;
2155:Drivers/CMSIS/Include/core_cm7.h **** 
2156:Drivers/CMSIS/Include/core_cm7.h ****   mvfr0 = SCB->MVFR0;
2157:Drivers/CMSIS/Include/core_cm7.h ****   if      ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x220U)
2158:Drivers/CMSIS/Include/core_cm7.h ****   {
2159:Drivers/CMSIS/Include/core_cm7.h ****     return 2U;           /* Double + Single precision FPU */
2160:Drivers/CMSIS/Include/core_cm7.h ****   }
2161:Drivers/CMSIS/Include/core_cm7.h ****   else if ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x020U)
2162:Drivers/CMSIS/Include/core_cm7.h ****   {
2163:Drivers/CMSIS/Include/core_cm7.h ****     return 1U;           /* Single precision FPU */
2164:Drivers/CMSIS/Include/core_cm7.h ****   }
2165:Drivers/CMSIS/Include/core_cm7.h ****   else
2166:Drivers/CMSIS/Include/core_cm7.h ****   {
2167:Drivers/CMSIS/Include/core_cm7.h ****     return 0U;           /* No FPU */
2168:Drivers/CMSIS/Include/core_cm7.h ****   }
2169:Drivers/CMSIS/Include/core_cm7.h **** }
2170:Drivers/CMSIS/Include/core_cm7.h **** 
2171:Drivers/CMSIS/Include/core_cm7.h **** 
2172:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_FpuFunctions */
2173:Drivers/CMSIS/Include/core_cm7.h **** 
2174:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 56


2175:Drivers/CMSIS/Include/core_cm7.h **** 
2176:Drivers/CMSIS/Include/core_cm7.h **** /* ##########################  Cache functions  #################################### */
2177:Drivers/CMSIS/Include/core_cm7.h **** /**
2178:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2179:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_CacheFunctions Cache Functions
2180:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Functions that configure Instruction and Data cache.
2181:Drivers/CMSIS/Include/core_cm7.h ****   @{
2182:Drivers/CMSIS/Include/core_cm7.h ****  */
2183:Drivers/CMSIS/Include/core_cm7.h **** 
2184:Drivers/CMSIS/Include/core_cm7.h **** /* Cache Size ID Register Macros */
2185:Drivers/CMSIS/Include/core_cm7.h **** #define CCSIDR_WAYS(x)         (((x) & SCB_CCSIDR_ASSOCIATIVITY_Msk) >> SCB_CCSIDR_ASSOCIATIVITY_Po
2186:Drivers/CMSIS/Include/core_cm7.h **** #define CCSIDR_SETS(x)         (((x) & SCB_CCSIDR_NUMSETS_Msk      ) >> SCB_CCSIDR_NUMSETS_Pos     
2187:Drivers/CMSIS/Include/core_cm7.h **** 
2188:Drivers/CMSIS/Include/core_cm7.h **** 
2189:Drivers/CMSIS/Include/core_cm7.h **** /**
2190:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Enable I-Cache
2191:Drivers/CMSIS/Include/core_cm7.h ****   \details Turns on I-Cache
2192:Drivers/CMSIS/Include/core_cm7.h ****   */
2193:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_EnableICache (void)
2194:Drivers/CMSIS/Include/core_cm7.h **** {
2195:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2196:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2197:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2198:Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
2199:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2200:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2201:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
2202:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2203:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2204:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2205:Drivers/CMSIS/Include/core_cm7.h **** }
2206:Drivers/CMSIS/Include/core_cm7.h **** 
2207:Drivers/CMSIS/Include/core_cm7.h **** 
2208:Drivers/CMSIS/Include/core_cm7.h **** /**
2209:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Disable I-Cache
2210:Drivers/CMSIS/Include/core_cm7.h ****   \details Turns off I-Cache
2211:Drivers/CMSIS/Include/core_cm7.h ****   */
2212:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_DisableICache (void)
2213:Drivers/CMSIS/Include/core_cm7.h **** {
2214:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2215:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2216:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2217:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk;  /* disable I-Cache */
2218:Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
2219:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2220:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2221:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2222:Drivers/CMSIS/Include/core_cm7.h **** }
2223:Drivers/CMSIS/Include/core_cm7.h **** 
2224:Drivers/CMSIS/Include/core_cm7.h **** 
2225:Drivers/CMSIS/Include/core_cm7.h **** /**
2226:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Invalidate I-Cache
2227:Drivers/CMSIS/Include/core_cm7.h ****   \details Invalidates I-Cache
2228:Drivers/CMSIS/Include/core_cm7.h ****   */
2229:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_InvalidateICache (void)
2230:Drivers/CMSIS/Include/core_cm7.h **** {
2231:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 57


2232:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2233:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2234:Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;
2235:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2236:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2237:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2238:Drivers/CMSIS/Include/core_cm7.h **** }
2239:Drivers/CMSIS/Include/core_cm7.h **** 
2240:Drivers/CMSIS/Include/core_cm7.h **** 
2241:Drivers/CMSIS/Include/core_cm7.h **** /**
2242:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Enable D-Cache
2243:Drivers/CMSIS/Include/core_cm7.h ****   \details Turns on D-Cache
2244:Drivers/CMSIS/Include/core_cm7.h ****   */
2245:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_EnableDCache (void)
2246:Drivers/CMSIS/Include/core_cm7.h **** {
2247:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2248:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2249:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2250:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2251:Drivers/CMSIS/Include/core_cm7.h **** 
2252:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
2253:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2254:Drivers/CMSIS/Include/core_cm7.h **** 
2255:Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2256:Drivers/CMSIS/Include/core_cm7.h **** 
2257:Drivers/CMSIS/Include/core_cm7.h ****                                             /* invalidate D-Cache */
2258:Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2259:Drivers/CMSIS/Include/core_cm7.h ****     do {
2260:Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2261:Drivers/CMSIS/Include/core_cm7.h ****       do {
2262:Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
2263:Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
2264:Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2265:Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2266:Drivers/CMSIS/Include/core_cm7.h ****         #endif
2267:Drivers/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2268:Drivers/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
2269:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2270:Drivers/CMSIS/Include/core_cm7.h **** 
2271:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
2272:Drivers/CMSIS/Include/core_cm7.h **** 
2273:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2274:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2275:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2276:Drivers/CMSIS/Include/core_cm7.h **** }
2277:Drivers/CMSIS/Include/core_cm7.h **** 
2278:Drivers/CMSIS/Include/core_cm7.h **** 
2279:Drivers/CMSIS/Include/core_cm7.h **** /**
2280:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Disable D-Cache
2281:Drivers/CMSIS/Include/core_cm7.h ****   \details Turns off D-Cache
2282:Drivers/CMSIS/Include/core_cm7.h ****   */
2283:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_DisableDCache (void)
2284:Drivers/CMSIS/Include/core_cm7.h **** {
2285:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2286:Drivers/CMSIS/Include/core_cm7.h ****     register uint32_t ccsidr;
2287:Drivers/CMSIS/Include/core_cm7.h ****     register uint32_t sets;
2288:Drivers/CMSIS/Include/core_cm7.h ****     register uint32_t ways;
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 58


2289:Drivers/CMSIS/Include/core_cm7.h **** 
2290:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
2291:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2292:Drivers/CMSIS/Include/core_cm7.h **** 
2293:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_DC_Msk;  /* disable D-Cache */
2294:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2295:Drivers/CMSIS/Include/core_cm7.h **** 
2296:Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2297:Drivers/CMSIS/Include/core_cm7.h **** 
2298:Drivers/CMSIS/Include/core_cm7.h ****                                             /* clean & invalidate D-Cache */
2299:Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2300:Drivers/CMSIS/Include/core_cm7.h ****     do {
2301:Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2302:Drivers/CMSIS/Include/core_cm7.h ****       do {
2303:Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
2304:Drivers/CMSIS/Include/core_cm7.h ****                        ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
2305:Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2306:Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2307:Drivers/CMSIS/Include/core_cm7.h ****         #endif
2308:Drivers/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2309:Drivers/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
2310:Drivers/CMSIS/Include/core_cm7.h **** 
2311:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2312:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2313:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2314:Drivers/CMSIS/Include/core_cm7.h **** }
2315:Drivers/CMSIS/Include/core_cm7.h **** 
2316:Drivers/CMSIS/Include/core_cm7.h **** 
2317:Drivers/CMSIS/Include/core_cm7.h **** /**
2318:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Invalidate D-Cache
2319:Drivers/CMSIS/Include/core_cm7.h ****   \details Invalidates D-Cache
2320:Drivers/CMSIS/Include/core_cm7.h ****   */
2321:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_InvalidateDCache (void)
2322:Drivers/CMSIS/Include/core_cm7.h **** {
2323:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2324:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2325:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2326:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2327:Drivers/CMSIS/Include/core_cm7.h **** 
2328:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
2329:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2330:Drivers/CMSIS/Include/core_cm7.h **** 
2331:Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2332:Drivers/CMSIS/Include/core_cm7.h **** 
2333:Drivers/CMSIS/Include/core_cm7.h ****                                             /* invalidate D-Cache */
2334:Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2335:Drivers/CMSIS/Include/core_cm7.h ****     do {
2336:Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2337:Drivers/CMSIS/Include/core_cm7.h ****       do {
2338:Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
2339:Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
2340:Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2341:Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2342:Drivers/CMSIS/Include/core_cm7.h ****         #endif
2343:Drivers/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2344:Drivers/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
2345:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 59


2346:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2347:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2348:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2349:Drivers/CMSIS/Include/core_cm7.h **** }
2350:Drivers/CMSIS/Include/core_cm7.h **** 
2351:Drivers/CMSIS/Include/core_cm7.h **** 
2352:Drivers/CMSIS/Include/core_cm7.h **** /**
2353:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Clean D-Cache
2354:Drivers/CMSIS/Include/core_cm7.h ****   \details Cleans D-Cache
2355:Drivers/CMSIS/Include/core_cm7.h ****   */
2356:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_CleanDCache (void)
2357:Drivers/CMSIS/Include/core_cm7.h **** {
2358:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2359:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2360:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2361:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2362:Drivers/CMSIS/Include/core_cm7.h **** 
2363:Drivers/CMSIS/Include/core_cm7.h ****      SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
2364:Drivers/CMSIS/Include/core_cm7.h ****    __DSB();
2365:Drivers/CMSIS/Include/core_cm7.h **** 
2366:Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2367:Drivers/CMSIS/Include/core_cm7.h **** 
2368:Drivers/CMSIS/Include/core_cm7.h ****                                             /* clean D-Cache */
2369:Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2370:Drivers/CMSIS/Include/core_cm7.h ****     do {
2371:Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2372:Drivers/CMSIS/Include/core_cm7.h ****       do {
2373:Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCCSW = (((sets << SCB_DCCSW_SET_Pos) & SCB_DCCSW_SET_Msk) |
2374:Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCCSW_WAY_Pos) & SCB_DCCSW_WAY_Msk)  );
2375:Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2376:Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2377:Drivers/CMSIS/Include/core_cm7.h ****         #endif
2378:Drivers/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2379:Drivers/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
2380:Drivers/CMSIS/Include/core_cm7.h **** 
2381:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2382:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2383:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2384:Drivers/CMSIS/Include/core_cm7.h **** }
2385:Drivers/CMSIS/Include/core_cm7.h **** 
2386:Drivers/CMSIS/Include/core_cm7.h **** 
2387:Drivers/CMSIS/Include/core_cm7.h **** /**
2388:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Clean & Invalidate D-Cache
2389:Drivers/CMSIS/Include/core_cm7.h ****   \details Cleans and Invalidates D-Cache
2390:Drivers/CMSIS/Include/core_cm7.h ****   */
2391:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_CleanInvalidateDCache (void)
2392:Drivers/CMSIS/Include/core_cm7.h **** {
2393:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2394:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2395:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2396:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2397:Drivers/CMSIS/Include/core_cm7.h **** 
2398:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
2399:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2400:Drivers/CMSIS/Include/core_cm7.h **** 
2401:Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2402:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 60


2403:Drivers/CMSIS/Include/core_cm7.h ****                                             /* clean & invalidate D-Cache */
2404:Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2405:Drivers/CMSIS/Include/core_cm7.h ****     do {
2406:Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2407:Drivers/CMSIS/Include/core_cm7.h ****       do {
2408:Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
2409:Drivers/CMSIS/Include/core_cm7.h ****                        ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
2410:Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2411:Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2412:Drivers/CMSIS/Include/core_cm7.h ****         #endif
2413:Drivers/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2414:Drivers/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
2415:Drivers/CMSIS/Include/core_cm7.h **** 
2416:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2417:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2418:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2419:Drivers/CMSIS/Include/core_cm7.h **** }
2420:Drivers/CMSIS/Include/core_cm7.h **** 
2421:Drivers/CMSIS/Include/core_cm7.h **** 
2422:Drivers/CMSIS/Include/core_cm7.h **** /**
2423:Drivers/CMSIS/Include/core_cm7.h ****   \brief   D-Cache Invalidate by address
2424:Drivers/CMSIS/Include/core_cm7.h ****   \details Invalidates D-Cache for the given address
2425:Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   addr    address (aligned to 32-byte boundary)
2426:Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
2427:Drivers/CMSIS/Include/core_cm7.h **** */
2428:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_InvalidateDCache_by_Addr (uint32_t *addr, int32_t dsize)
2429:Drivers/CMSIS/Include/core_cm7.h **** {
2430:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2431:Drivers/CMSIS/Include/core_cm7.h ****      int32_t op_size = dsize;
2432:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t op_addr = (uint32_t)addr;
2433:Drivers/CMSIS/Include/core_cm7.h ****      int32_t linesize = 32;                /* in Cortex-M7 size of cache line is fixed to 8 words (
2434:Drivers/CMSIS/Include/core_cm7.h **** 
2435:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2436:Drivers/CMSIS/Include/core_cm7.h **** 
2437:Drivers/CMSIS/Include/core_cm7.h ****     while (op_size > 0) {
2438:Drivers/CMSIS/Include/core_cm7.h ****       SCB->DCIMVAC = op_addr;
2439:Drivers/CMSIS/Include/core_cm7.h ****       op_addr += (uint32_t)linesize;
2440:Drivers/CMSIS/Include/core_cm7.h ****       op_size -=           linesize;
2441:Drivers/CMSIS/Include/core_cm7.h ****     }
2442:Drivers/CMSIS/Include/core_cm7.h **** 
2443:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2444:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2445:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2446:Drivers/CMSIS/Include/core_cm7.h **** }
2447:Drivers/CMSIS/Include/core_cm7.h **** 
2448:Drivers/CMSIS/Include/core_cm7.h **** 
2449:Drivers/CMSIS/Include/core_cm7.h **** /**
2450:Drivers/CMSIS/Include/core_cm7.h ****   \brief   D-Cache Clean by address
2451:Drivers/CMSIS/Include/core_cm7.h ****   \details Cleans D-Cache for the given address
2452:Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   addr    address (aligned to 32-byte boundary)
2453:Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
2454:Drivers/CMSIS/Include/core_cm7.h **** */
2455:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_CleanDCache_by_Addr (uint32_t *addr, int32_t dsize)
2456:Drivers/CMSIS/Include/core_cm7.h **** {
2457:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2458:Drivers/CMSIS/Include/core_cm7.h ****      int32_t op_size = dsize;
2459:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t op_addr = (uint32_t) addr;
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 61


2460:Drivers/CMSIS/Include/core_cm7.h ****      int32_t linesize = 32;                /* in Cortex-M7 size of cache line is fixed to 8 words (
2461:Drivers/CMSIS/Include/core_cm7.h **** 
2462:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2463:Drivers/CMSIS/Include/core_cm7.h **** 
2464:Drivers/CMSIS/Include/core_cm7.h ****     while (op_size > 0) {
2465:Drivers/CMSIS/Include/core_cm7.h ****       SCB->DCCMVAC = op_addr;
2466:Drivers/CMSIS/Include/core_cm7.h ****       op_addr += (uint32_t)linesize;
2467:Drivers/CMSIS/Include/core_cm7.h ****       op_size -=           linesize;
2468:Drivers/CMSIS/Include/core_cm7.h ****     }
2469:Drivers/CMSIS/Include/core_cm7.h **** 
2470:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2471:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2472:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2473:Drivers/CMSIS/Include/core_cm7.h **** }
2474:Drivers/CMSIS/Include/core_cm7.h **** 
2475:Drivers/CMSIS/Include/core_cm7.h **** 
2476:Drivers/CMSIS/Include/core_cm7.h **** /**
2477:Drivers/CMSIS/Include/core_cm7.h ****   \brief   D-Cache Clean and Invalidate by address
2478:Drivers/CMSIS/Include/core_cm7.h ****   \details Cleans and invalidates D_Cache for the given address
2479:Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   addr    address (aligned to 32-byte boundary)
2480:Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
2481:Drivers/CMSIS/Include/core_cm7.h **** */
2482:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_CleanInvalidateDCache_by_Addr (uint32_t *addr, int32_t dsize)
2483:Drivers/CMSIS/Include/core_cm7.h **** {
2484:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2485:Drivers/CMSIS/Include/core_cm7.h ****      int32_t op_size = dsize;
2486:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t op_addr = (uint32_t) addr;
2487:Drivers/CMSIS/Include/core_cm7.h ****      int32_t linesize = 32;                /* in Cortex-M7 size of cache line is fixed to 8 words (
2488:Drivers/CMSIS/Include/core_cm7.h **** 
2489:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2490:Drivers/CMSIS/Include/core_cm7.h **** 
2491:Drivers/CMSIS/Include/core_cm7.h ****     while (op_size > 0) {
2492:Drivers/CMSIS/Include/core_cm7.h ****       SCB->DCCIMVAC = op_addr;
2493:Drivers/CMSIS/Include/core_cm7.h ****       op_addr += (uint32_t)linesize;
2494:Drivers/CMSIS/Include/core_cm7.h ****       op_size -=           linesize;
2495:Drivers/CMSIS/Include/core_cm7.h ****     }
2496:Drivers/CMSIS/Include/core_cm7.h **** 
2497:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2498:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2499:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2500:Drivers/CMSIS/Include/core_cm7.h **** }
2501:Drivers/CMSIS/Include/core_cm7.h **** 
2502:Drivers/CMSIS/Include/core_cm7.h **** 
2503:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_CacheFunctions */
2504:Drivers/CMSIS/Include/core_cm7.h **** 
2505:Drivers/CMSIS/Include/core_cm7.h **** 
2506:Drivers/CMSIS/Include/core_cm7.h **** 
2507:Drivers/CMSIS/Include/core_cm7.h **** /* ##################################    SysTick function  ########################################
2508:Drivers/CMSIS/Include/core_cm7.h **** /**
2509:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2510:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
2511:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Functions that configure the System.
2512:Drivers/CMSIS/Include/core_cm7.h ****   @{
2513:Drivers/CMSIS/Include/core_cm7.h ****  */
2514:Drivers/CMSIS/Include/core_cm7.h **** 
2515:Drivers/CMSIS/Include/core_cm7.h **** #if defined (__Vendor_SysTickConfig) && (__Vendor_SysTickConfig == 0U)
2516:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 62


2517:Drivers/CMSIS/Include/core_cm7.h **** /**
2518:Drivers/CMSIS/Include/core_cm7.h ****   \brief   System Tick Configuration
2519:Drivers/CMSIS/Include/core_cm7.h ****   \details Initializes the System Timer and its interrupt, and starts the System Tick Timer.
2520:Drivers/CMSIS/Include/core_cm7.h ****            Counter is in free running mode to generate periodic interrupts.
2521:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]  ticks  Number of ticks between two interrupts.
2522:Drivers/CMSIS/Include/core_cm7.h ****   \return          0  Function succeeded.
2523:Drivers/CMSIS/Include/core_cm7.h ****   \return          1  Function failed.
2524:Drivers/CMSIS/Include/core_cm7.h ****   \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
2525:Drivers/CMSIS/Include/core_cm7.h ****            function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.
2526:Drivers/CMSIS/Include/core_cm7.h ****            must contain a vendor-specific implementation of this function.
2527:Drivers/CMSIS/Include/core_cm7.h ****  */
2528:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
2529:Drivers/CMSIS/Include/core_cm7.h **** {
2530:Drivers/CMSIS/Include/core_cm7.h ****   if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
2531:Drivers/CMSIS/Include/core_cm7.h ****   {
2532:Drivers/CMSIS/Include/core_cm7.h ****     return (1UL);                                                   /* Reload value impossible */
2533:Drivers/CMSIS/Include/core_cm7.h ****   }
2534:Drivers/CMSIS/Include/core_cm7.h **** 
2535:Drivers/CMSIS/Include/core_cm7.h ****   SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 451              		.loc 2 2535 0
 452 0120 094B     		ldr	r3, .L17+12
 453 0122 0A4A     		ldr	r2, .L17+16
 454 0124 5A60     		str	r2, [r3, #4]
 455              	.LVL7:
 456              	.LBB49:
 457              	.LBB50:
2003:Drivers/CMSIS/Include/core_cm7.h ****   }
 458              		.loc 2 2003 0
 459 0126 0A4A     		ldr	r2, .L17+20
 460 0128 F021     		movs	r1, #240
 461 012a 82F82310 		strb	r1, [r2, #35]
 462              	.LVL8:
 463              	.LBE50:
 464              	.LBE49:
2536:Drivers/CMSIS/Include/core_cm7.h ****   NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Int
2537:Drivers/CMSIS/Include/core_cm7.h ****   SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Val
 465              		.loc 2 2537 0
 466 012e 0021     		movs	r1, #0
 467 0130 9960     		str	r1, [r3, #8]
2538:Drivers/CMSIS/Include/core_cm7.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 468              		.loc 2 2538 0
 469 0132 0720     		movs	r0, #7
 470 0134 1860     		str	r0, [r3]
 471              	.LVL9:
 472              	.LBE48:
 473              	.LBE47:
 474              	.LBB51:
 475              	.LBB52:
2003:Drivers/CMSIS/Include/core_cm7.h ****   }
 476              		.loc 2 2003 0
 477 0136 82F82310 		strb	r1, [r2, #35]
 478              	.LVL10:
 479              	.LBE52:
 480              	.LBE51:
 517:Src/main.c    ****   // TODO make my own realization of this func
 518:Src/main.c    ****   // NOTE 1 us is an overkill and just busting CPU for no real purpose
 519:Src/main.c    ****   SysTick_Config(400000000/1000);
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 63


 520:Src/main.c    ****   // set prirority of the SysTick
 521:Src/main.c    ****   NVIC_SetPriority(SysTick_IRQn, 0);
 522:Src/main.c    **** }
 481              		.loc 1 522 0
 482 013a 7047     		bx	lr
 483              	.L18:
 484              		.align	2
 485              	.L17:
 486 013c 00480258 		.word	1476544512
 487 0140 00440258 		.word	1476543488
 488 0144 00200052 		.word	1375739904
 489 0148 10E000E0 		.word	-536813552
 490 014c 7F1A0600 		.word	399999
 491 0150 00ED00E0 		.word	-536810240
 492              		.cfi_endproc
 493              	.LFE152:
 495              		.section	.text.writeFile,"ax",%progbits
 496              		.align	1
 497              		.syntax unified
 498              		.thumb
 499              		.thumb_func
 500              		.fpu fpv5-d16
 502              	writeFile:
 503              	.LFB148:
 367:Src/main.c    ****   unsigned int circ_buffer_ptr = 0;
 504              		.loc 1 367 0
 505              		.cfi_startproc
 506              		@ args = 0, pretend = 0, frame = 0
 507              		@ frame_needed = 0, uses_anonymous_args = 0
 508 0000 38B5     		push	{r3, r4, r5, lr}
 509              	.LCFI0:
 510              		.cfi_def_cfa_offset 16
 511              		.cfi_offset 3, -16
 512              		.cfi_offset 4, -12
 513              		.cfi_offset 5, -8
 514              		.cfi_offset 14, -4
 515              	.LVL11:
 516              	.LBB53:
 369:Src/main.c    ****     CDC_Transmit_FS(buffer + circ_buffer_ptr, SIZE*sizeof(unsigned int));
 517              		.loc 1 369 0
 518 0002 0025     		movs	r5, #0
 519              	.LBE53:
 368:Src/main.c    ****   for(int i = 0; i < (DMA_BUFFER_SIZE/SIZE); ++i) {
 520              		.loc 1 368 0
 521 0004 2C46     		mov	r4, r5
 522              	.LBB55:
 369:Src/main.c    ****     CDC_Transmit_FS(buffer + circ_buffer_ptr, SIZE*sizeof(unsigned int));
 523              		.loc 1 369 0
 524 0006 18E0     		b	.L20
 525              	.LVL12:
 526              	.L22:
 527              	.LBB54:
 370:Src/main.c    ****     circ_buffer_ptr = (circ_buffer_ptr + SIZE) % DMA_BUFFER_SIZE;
 528              		.loc 1 370 0
 529 0008 4FF48051 		mov	r1, #4096
 530 000c 0C48     		ldr	r0, .L24
 531 000e 00EB8400 		add	r0, r0, r4, lsl #2
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 64


 532 0012 FFF7FEFF 		bl	CDC_Transmit_FS
 533              	.LVL13:
 371:Src/main.c    ****     while(((USBD_CDC_HandleTypeDef*)(hUsbDeviceFS.pClassData))->TxState != 0);
 534              		.loc 1 371 0
 535 0016 04F58062 		add	r2, r4, #1024
 536 001a 0A4C     		ldr	r4, .L24+4
 537              	.LVL14:
 538 001c A4FB0234 		umull	r3, r4, r4, r2
 539 0020 E40B     		lsrs	r4, r4, #15
 540 0022 C4EB0414 		rsb	r4, r4, r4, lsl #4
 541 0026 2303     		lsls	r3, r4, #12
 542 0028 D41A     		subs	r4, r2, r3
 543              	.LVL15:
 544              	.L21:
 372:Src/main.c    ****   }
 545              		.loc 1 372 0 discriminator 1
 546 002a 074B     		ldr	r3, .L24+8
 547 002c D3F81832 		ldr	r3, [r3, #536]
 548 0030 D3F81432 		ldr	r3, [r3, #532]
 549 0034 002B     		cmp	r3, #0
 550 0036 F8D1     		bne	.L21
 551              	.LBE54:
 369:Src/main.c    ****     CDC_Transmit_FS(buffer + circ_buffer_ptr, SIZE*sizeof(unsigned int));
 552              		.loc 1 369 0 discriminator 2
 553 0038 0135     		adds	r5, r5, #1
 554              	.LVL16:
 555              	.L20:
 369:Src/main.c    ****     CDC_Transmit_FS(buffer + circ_buffer_ptr, SIZE*sizeof(unsigned int));
 556              		.loc 1 369 0 is_stmt 0 discriminator 1
 557 003a 3B2D     		cmp	r5, #59
 558 003c E4DD     		ble	.L22
 559              	.LBE55:
 374:Src/main.c    ****   
 560              		.loc 1 374 0 is_stmt 1
 561 003e 38BD     		pop	{r3, r4, r5, pc}
 562              	.LVL17:
 563              	.L25:
 564              		.align	2
 565              	.L24:
 566 0040 00000000 		.word	buffer
 567 0044 89888888 		.word	-2004318071
 568 0048 00000000 		.word	hUsbDeviceFS
 569              		.cfi_endproc
 570              	.LFE148:
 572              		.section	.text.main,"ax",%progbits
 573              		.align	1
 574              		.global	main
 575              		.syntax unified
 576              		.thumb
 577              		.thumb_func
 578              		.fpu fpv5-d16
 580              	main:
 581              	.LFB137:
  82:Src/main.c    **** 
 582              		.loc 1 82 0
 583              		.cfi_startproc
 584              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 65


 585              		@ frame_needed = 0, uses_anonymous_args = 0
 586 0000 70B5     		push	{r4, r5, r6, lr}
 587              	.LCFI1:
 588              		.cfi_def_cfa_offset 16
 589              		.cfi_offset 4, -16
 590              		.cfi_offset 5, -12
 591              		.cfi_offset 6, -8
 592              		.cfi_offset 14, -4
  84:Src/main.c    ****   
 593              		.loc 1 84 0
 594 0002 FFF7FEFF 		bl	HAL_Init
 595              	.LVL18:
 596              	.LBB78:
 597              	.LBB79:
 598              	.LBB80:
 599              	.LBB81:
 600              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     02. February 2017
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2017 ARM Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                     __asm
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  39:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                  inline
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 66


  41:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  44:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  45:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  47:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  48:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                    __attribute__((used))
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  50:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  51:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  53:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wpacked"
  56:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wattributes"
  57:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic pop
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT           struct __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  71:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  72:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  73:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  83:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  84:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  85:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  87:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  88:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  89:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  93:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  95:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  97:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 67


  98:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  99:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 100:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 101:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 102:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 105:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
 106:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 109:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 110:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 114:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 116:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 118:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 119:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 126:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 127:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 128:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 132:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 136:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 138:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 139:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 142:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 147:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 148:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 153:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 68


 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 160:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 169:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 172:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 175:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 184:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 185:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 186:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 197:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 199:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 69


 212:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 214:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 220:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 228:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 231:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 232:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 238:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 242:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 246:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 247:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 70


 269:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 272:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 276:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 281:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 288:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 291:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 293:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 294:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 297:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 71


 326:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 334:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 335:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 336:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 337:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 338:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 340:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 342:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 347:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 352:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 358:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 364:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 365:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 370:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 373:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 374:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 376:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 380:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 382:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 72


 383:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 406:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 409:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 411:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 412:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 423:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 425:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 432:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 434:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 437:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 438:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 73


 440:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 449:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 463:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 467:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 475:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 478:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 482:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 483:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 487:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 488:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 489:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 490:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 494:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 74


 497:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 505:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 515:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 517:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 524:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 526:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 527:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 528:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 530:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 532:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 533:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 536:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 538:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 539:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 543:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 544:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 545:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 546:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 547:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 75


 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 559:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 560:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 561:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 565:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 566:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 569:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 570:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 571:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 572:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 576:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 581:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 586:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 588:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 589:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 591:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 593:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 595:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 600:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 601:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 602:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 606:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 607:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 76


 611:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 612:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 614:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 617:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 620:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 623:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 626:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 630:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 631:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 635:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 641:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 642:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 643:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(0U);
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 654:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 659:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 662:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 663:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 666:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 77


 668:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 673:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 675:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 676:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 677:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 679:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 686:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 687:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 688:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 689:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 691:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 692:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** //{
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** //  __ASM volatile ("nop");
 697:Drivers/CMSIS/Include/cmsis_gcc.h **** //}
 698:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 705:Drivers/CMSIS/Include/cmsis_gcc.h **** //{
 706:Drivers/CMSIS/Include/cmsis_gcc.h **** //  __ASM volatile ("wfi");
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** //}
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 709:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 710:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 711:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 717:Drivers/CMSIS/Include/cmsis_gcc.h **** //{
 718:Drivers/CMSIS/Include/cmsis_gcc.h **** //  __ASM volatile ("wfe");
 719:Drivers/CMSIS/Include/cmsis_gcc.h **** //}
 720:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 78


 725:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 728:Drivers/CMSIS/Include/cmsis_gcc.h **** //{
 729:Drivers/CMSIS/Include/cmsis_gcc.h **** //  __ASM volatile ("sev");
 730:Drivers/CMSIS/Include/cmsis_gcc.h **** //}
 731:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 740:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 741:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 743:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 744:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 745:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 747:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 748:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 751:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 753:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 601              		.loc 3 753 0
 602              		.syntax unified
 603              	@ 753 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 604 0006 BFF34F8F 		dsb 0xF
 605              	@ 0 "" 2
 606              		.thumb
 607              		.syntax unified
 608              	.LBE81:
 609              	.LBE80:
 610              	.LBB82:
 611              	.LBB83:
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 612              		.loc 3 742 0
 613              		.syntax unified
 614              	@ 742 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 615 000a BFF36F8F 		isb 0xF
 616              	@ 0 "" 2
 617              		.thumb
 618              		.syntax unified
 619              	.LBE83:
 620              	.LBE82:
2217:Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 621              		.loc 2 2217 0
 622 000e 3B4B     		ldr	r3, .L42
 623 0010 5A69     		ldr	r2, [r3, #20]
 624 0012 22F40032 		bic	r2, r2, #131072
 625 0016 5A61     		str	r2, [r3, #20]
2218:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 79


 626              		.loc 2 2218 0
 627 0018 0022     		movs	r2, #0
 628 001a C3F85022 		str	r2, [r3, #592]
 629              	.LBB84:
 630              	.LBB85:
 631              		.loc 3 753 0
 632              		.syntax unified
 633              	@ 753 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 634 001e BFF34F8F 		dsb 0xF
 635              	@ 0 "" 2
 636              		.thumb
 637              		.syntax unified
 638              	.LBE85:
 639              	.LBE84:
 640              	.LBB86:
 641              	.LBB87:
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 642              		.loc 3 742 0
 643              		.syntax unified
 644              	@ 742 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 645 0022 BFF36F8F 		isb 0xF
 646              	@ 0 "" 2
 647              		.thumb
 648              		.syntax unified
 649              	.LBE87:
 650              	.LBE86:
 651              	.LBE79:
 652              	.LBE78:
 653              	.LBB88:
 654              	.LBB89:
2290:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
 655              		.loc 2 2290 0
 656 0026 C3F88420 		str	r2, [r3, #132]
 657              	.LBB90:
 658              	.LBB91:
 659              		.loc 3 753 0
 660              		.syntax unified
 661              	@ 753 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 662 002a BFF34F8F 		dsb 0xF
 663              	@ 0 "" 2
 664              		.thumb
 665              		.syntax unified
 666              	.LBE91:
 667              	.LBE90:
2293:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
 668              		.loc 2 2293 0
 669 002e 5A69     		ldr	r2, [r3, #20]
 670 0030 22F48032 		bic	r2, r2, #65536
 671 0034 5A61     		str	r2, [r3, #20]
 672              	.LBB92:
 673              	.LBB93:
 674              		.loc 3 753 0
 675              		.syntax unified
 676              	@ 753 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 677 0036 BFF34F8F 		dsb 0xF
 678              	@ 0 "" 2
 679              		.thumb
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 80


 680              		.syntax unified
 681              	.LBE93:
 682              	.LBE92:
2296:Drivers/CMSIS/Include/core_cm7.h **** 
 683              		.loc 2 2296 0
 684 003a D3F88040 		ldr	r4, [r3, #128]
 685              	.LVL19:
2299:Drivers/CMSIS/Include/core_cm7.h ****     do {
 686              		.loc 2 2299 0
 687 003e C4F34E31 		ubfx	r1, r4, #13, #15
 688              	.LVL20:
 689 0042 0FE0     		b	.L28
 690              	.LVL21:
 691              	.L36:
2308:Drivers/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
 692              		.loc 2 2308 0
 693 0044 1A46     		mov	r2, r3
 694              	.LVL22:
 695              	.L27:
2303:Drivers/CMSIS/Include/core_cm7.h ****                        ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
 696              		.loc 2 2303 0
 697 0046 43F6E073 		movw	r3, #16352
 698 004a 03EA4113 		and	r3, r3, r1, lsl #5
 699 004e 43EA8273 		orr	r3, r3, r2, lsl #30
 700 0052 2A48     		ldr	r0, .L42
 701 0054 C0F87432 		str	r3, [r0, #628]
2308:Drivers/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
 702              		.loc 2 2308 0
 703 0058 531E     		subs	r3, r2, #1
 704              	.LVL23:
 705 005a 002A     		cmp	r2, #0
 706 005c F2D1     		bne	.L36
2309:Drivers/CMSIS/Include/core_cm7.h **** 
 707              		.loc 2 2309 0
 708 005e 4B1E     		subs	r3, r1, #1
 709              	.LVL24:
 710 0060 19B1     		cbz	r1, .L40
 711 0062 1946     		mov	r1, r3
 712              	.LVL25:
 713              	.L28:
2301:Drivers/CMSIS/Include/core_cm7.h ****       do {
 714              		.loc 2 2301 0
 715 0064 C4F3C902 		ubfx	r2, r4, #3, #10
 716              	.LVL26:
 717 0068 EDE7     		b	.L27
 718              	.LVL27:
 719              	.L40:
 720              	.LBB94:
 721              	.LBB95:
 722              		.loc 3 753 0
 723              		.syntax unified
 724              	@ 753 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 725 006a BFF34F8F 		dsb 0xF
 726              	@ 0 "" 2
 727              		.thumb
 728              		.syntax unified
 729              	.LBE95:
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 81


 730              	.LBE94:
 731              	.LBB96:
 732              	.LBB97:
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 733              		.loc 3 742 0
 734              		.syntax unified
 735              	@ 742 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 736 006e BFF36F8F 		isb 0xF
 737              	@ 0 "" 2
 738              	.LVL28:
 739              		.thumb
 740              		.syntax unified
 741              	.LBE97:
 742              	.LBE96:
 743              	.LBE89:
 744              	.LBE88:
  93:Src/main.c    ****   my_initGPIO();
 745              		.loc 1 93 0
 746 0072 FFF7FEFF 		bl	my_initClocks
 747              	.LVL29:
  94:Src/main.c    ****   
 748              		.loc 1 94 0
 749 0076 FFF7FEFF 		bl	my_initGPIO
 750              	.LVL30:
  96:Src/main.c    ****   MX_USART3_UART_Init();
 751              		.loc 1 96 0
 752 007a FFF7FEFF 		bl	MX_ETH_Init
 753              	.LVL31:
  97:Src/main.c    ****   usbDevice = MX_USB_DEVICE_Init();
 754              		.loc 1 97 0
 755 007e FFF7FEFF 		bl	MX_USART3_UART_Init
 756              	.LVL32:
  98:Src/main.c    ****   
 757              		.loc 1 98 0
 758 0082 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 759              	.LVL33:
 760 0086 1E4B     		ldr	r3, .L42+4
 761 0088 1860     		str	r0, [r3]
 100:Src/main.c    ****   
 762              		.loc 1 100 0
 763 008a FFF7FEFF 		bl	zeroArray
 764              	.LVL34:
 102:Src/main.c    ****   printf("waiting\r\n");  
 765              		.loc 1 102 0
 766 008e 4FF4FA60 		mov	r0, #2000
 767 0092 FFF7FEFF 		bl	HAL_Delay
 768              	.LVL35:
 103:Src/main.c    ****   while((strcmp(string, "send_data")) != 0);
 769              		.loc 1 103 0
 770 0096 1B48     		ldr	r0, .L42+8
 771 0098 FFF7FEFF 		bl	puts
 772              	.LVL36:
 773              	.L29:
 104:Src/main.c    ****   printf("start \r\n");  
 774              		.loc 1 104 0 discriminator 1
 775 009c 1A49     		ldr	r1, .L42+12
 776 009e 1B48     		ldr	r0, .L42+16
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 82


 777 00a0 FFF7FEFF 		bl	strcmp
 778              	.LVL37:
 779 00a4 0646     		mov	r6, r0
 780 00a6 0028     		cmp	r0, #0
 781 00a8 F8D1     		bne	.L29
 105:Src/main.c    ****   
 782              		.loc 1 105 0
 783 00aa 1948     		ldr	r0, .L42+20
 784 00ac FFF7FEFF 		bl	puts
 785              	.LVL38:
 109:Src/main.c    ****   
 786              		.loc 1 109 0
 787 00b0 FFF7FEFF 		bl	my_initTIM6
 788              	.LVL39:
 113:Src/main.c    ****   while (1)
 789              		.loc 1 113 0
 790 00b4 0025     		movs	r5, #0
 112:Src/main.c    ****   unsigned int stopFlag = 0;
 791              		.loc 1 112 0
 792 00b6 2C46     		mov	r4, r5
 793 00b8 06E0     		b	.L33
 794              	.LVL40:
 795              	.L32:
 796              	.LBB98:
 118:Src/main.c    ****       }
 797              		.loc 1 118 0 discriminator 3
 798 00ba FFF7FEFF 		bl	writeFile
 799              	.LVL41:
 117:Src/main.c    ****         writeFile();
 800              		.loc 1 117 0 discriminator 3
 801 00be 0134     		adds	r4, r4, #1
 802              	.LVL42:
 803              	.L30:
 117:Src/main.c    ****         writeFile();
 804              		.loc 1 117 0 is_stmt 0 discriminator 1
 805 00c0 022C     		cmp	r4, #2
 806 00c2 FADD     		ble	.L32
 807              	.LBE98:
 120:Src/main.c    ****     }
 808              		.loc 1 120 0 is_stmt 1
 809 00c4 0124     		movs	r4, #1
 810              	.LVL43:
 811              	.L35:
 123:Src/main.c    ****       counter = 0;
 812              		.loc 1 123 0
 813 00c6 1CB9     		cbnz	r4, .L41
 814              	.LVL44:
 815              	.L33:
 116:Src/main.c    ****       for(int i = 0; i < 3; ++i) {
 816              		.loc 1 116 0
 817 00c8 002D     		cmp	r5, #0
 818 00ca FCD1     		bne	.L35
 819              	.LBB99:
 117:Src/main.c    ****         writeFile();
 820              		.loc 1 117 0
 821 00cc 3446     		mov	r4, r6
 822              	.LVL45:
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 83


 823 00ce F7E7     		b	.L30
 824              	.LVL46:
 825              	.L41:
 826              	.LBE99:
 827              	.LBB100:
 127:Src/main.c    ****       CDC_Transmit_FS(buffer, SIZE*sizeof(unsigned int));
 828              		.loc 1 127 0
 829 00d0 1048     		ldr	r0, .L42+24
 830 00d2 114B     		ldr	r3, .L42+28
 831 00d4 0360     		str	r3, [r0]
 128:Src/main.c    ****       while(((USBD_CDC_HandleTypeDef*)(hUsbDeviceFS.pClassData))->TxState != 0);
 832              		.loc 1 128 0
 833 00d6 4FF48051 		mov	r1, #4096
 834 00da FFF7FEFF 		bl	CDC_Transmit_FS
 835              	.LVL47:
 836              	.L34:
 129:Src/main.c    ****       //CDC_Transmit_FS(buffer, SIZE*sizeof(unsigned int));
 837              		.loc 1 129 0 discriminator 1
 838 00de 0F4B     		ldr	r3, .L42+32
 839 00e0 D3F81832 		ldr	r3, [r3, #536]
 840 00e4 D3F81432 		ldr	r3, [r3, #532]
 841 00e8 002B     		cmp	r3, #0
 842 00ea F8D1     		bne	.L34
 131:Src/main.c    ****       //return(1);
 843              		.loc 1 131 0
 844 00ec 0C4A     		ldr	r2, .L42+36
 845 00ee 5369     		ldr	r3, [r2, #20]
 846 00f0 43F08003 		orr	r3, r3, #128
 847 00f4 5361     		str	r3, [r2, #20]
 125:Src/main.c    ****       
 848              		.loc 1 125 0
 849 00f6 2546     		mov	r5, r4
 124:Src/main.c    ****       stopFlag = 1;
 850              		.loc 1 124 0
 851 00f8 0024     		movs	r4, #0
 852 00fa E4E7     		b	.L35
 853              	.L43:
 854              		.align	2
 855              	.L42:
 856 00fc 00ED00E0 		.word	-536810240
 857 0100 00000000 		.word	usbDevice
 858 0104 00000000 		.word	.LC0
 859 0108 0C000000 		.word	.LC1
 860 010c 00000000 		.word	.LANCHOR0
 861 0110 18000000 		.word	.LC2
 862 0114 00000000 		.word	buffer
 863 0118 656E6400 		.word	6581861
 864 011c 00000000 		.word	hUsbDeviceFS
 865 0120 00040258 		.word	1476527104
 866              	.LBE100:
 867              		.cfi_endproc
 868              	.LFE137:
 870              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 871              		.align	1
 872              		.global	TIM2_IRQHandler
 873              		.syntax unified
 874              		.thumb
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 84


 875              		.thumb_func
 876              		.fpu fpv5-d16
 878              	TIM2_IRQHandler:
 879              	.LFB138:
 138:Src/main.c    ****   
 880              		.loc 1 138 0
 881              		.cfi_startproc
 882              		@ args = 0, pretend = 0, frame = 0
 883              		@ frame_needed = 0, uses_anonymous_args = 0
 884              		@ link register save eliminated.
 141:Src/main.c    ****   //GPIOB->ODR ^= (0x1 << 7);
 885              		.loc 1 141 0
 886 0000 4FF08043 		mov	r3, #1073741824
 887 0004 0022     		movs	r2, #0
 888 0006 1A61     		str	r2, [r3, #16]
 146:Src/main.c    **** 
 889              		.loc 1 146 0
 890 0008 7047     		bx	lr
 891              		.cfi_endproc
 892              	.LFE138:
 894              		.section	.text.DMA1_Stream0_IRQHandler,"ax",%progbits
 895              		.align	1
 896              		.global	DMA1_Stream0_IRQHandler
 897              		.syntax unified
 898              		.thumb
 899              		.thumb_func
 900              		.fpu fpv5-d16
 902              	DMA1_Stream0_IRQHandler:
 903              	.LFB139:
 148:Src/main.c    ****   
 904              		.loc 1 148 0
 905              		.cfi_startproc
 906              		@ args = 0, pretend = 0, frame = 0
 907              		@ frame_needed = 0, uses_anonymous_args = 0
 908              		@ link register save eliminated.
 151:Src/main.c    ****   //TIM6->CR1 &= ~(0x1);
 909              		.loc 1 151 0
 910 0000 094A     		ldr	r2, .L46
 911 0002 9368     		ldr	r3, [r2, #8]
 912 0004 43F02803 		orr	r3, r3, #40
 913 0008 9360     		str	r3, [r2, #8]
 153:Src/main.c    ****   dmaFlag++;
 914              		.loc 1 153 0
 915 000a 084A     		ldr	r2, .L46+4
 916 000c 5369     		ldr	r3, [r2, #20]
 917 000e 43F08003 		orr	r3, r3, #128
 918 0012 5361     		str	r3, [r2, #20]
 154:Src/main.c    ****   flipFlag++;
 919              		.loc 1 154 0
 920 0014 064A     		ldr	r2, .L46+8
 921 0016 1368     		ldr	r3, [r2]
 922 0018 0133     		adds	r3, r3, #1
 923 001a 1360     		str	r3, [r2]
 155:Src/main.c    ****   
 924              		.loc 1 155 0
 925 001c 054A     		ldr	r2, .L46+12
 926 001e 1368     		ldr	r3, [r2]
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 85


 927 0020 0133     		adds	r3, r3, #1
 928 0022 1360     		str	r3, [r2]
 157:Src/main.c    **** 
 929              		.loc 1 157 0
 930 0024 7047     		bx	lr
 931              	.L47:
 932 0026 00BF     		.align	2
 933              	.L46:
 934 0028 00000240 		.word	1073872896
 935 002c 00040258 		.word	1476527104
 936 0030 00000000 		.word	.LANCHOR1
 937 0034 00000000 		.word	.LANCHOR2
 938              		.cfi_endproc
 939              	.LFE139:
 941              		.section	.text.TIM6_DAC_IRQHandler,"ax",%progbits
 942              		.align	1
 943              		.global	TIM6_DAC_IRQHandler
 944              		.syntax unified
 945              		.thumb
 946              		.thumb_func
 947              		.fpu fpv5-d16
 949              	TIM6_DAC_IRQHandler:
 950              	.LFB140:
 159:Src/main.c    ****   // reset interrupt flag
 951              		.loc 1 159 0
 952              		.cfi_startproc
 953              		@ args = 0, pretend = 0, frame = 0
 954              		@ frame_needed = 0, uses_anonymous_args = 0
 955              		@ link register save eliminated.
 956 0000 10B4     		push	{r4}
 957              	.LCFI2:
 958              		.cfi_def_cfa_offset 4
 959              		.cfi_offset 4, -4
 161:Src/main.c    ****   
 960              		.loc 1 161 0
 961 0002 0D4A     		ldr	r2, .L50
 962 0004 1369     		ldr	r3, [r2, #16]
 963 0006 23F00103 		bic	r3, r3, #1
 964 000a 1361     		str	r3, [r2, #16]
 163:Src/main.c    ****   bufferValue += 5;
 965              		.loc 1 163 0
 966 000c 0B49     		ldr	r1, .L50+4
 967 000e 0A68     		ldr	r2, [r1]
 968 0010 0B48     		ldr	r0, .L50+8
 969 0012 0368     		ldr	r3, [r0]
 970 0014 0B4C     		ldr	r4, .L50+12
 971 0016 44F82230 		str	r3, [r4, r2, lsl #2]
 164:Src/main.c    ****   bufferIndex = (++bufferIndex)%DMA_BUFFER_SIZE;
 972              		.loc 1 164 0
 973 001a 0533     		adds	r3, r3, #5
 974 001c 0360     		str	r3, [r0]
 165:Src/main.c    ****   // toggle pin
 975              		.loc 1 165 0
 976 001e 0132     		adds	r2, r2, #1
 977 0020 094B     		ldr	r3, .L50+16
 978 0022 A3FB0203 		umull	r0, r3, r3, r2
 979 0026 DB0B     		lsrs	r3, r3, #15
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 86


 980 0028 C3EB0313 		rsb	r3, r3, r3, lsl #4
 981 002c 1803     		lsls	r0, r3, #12
 982 002e 131A     		subs	r3, r2, r0
 983 0030 0B60     		str	r3, [r1]
 168:Src/main.c    **** 
 984              		.loc 1 168 0
 985 0032 5DF8044B 		ldr	r4, [sp], #4
 986              	.LCFI3:
 987              		.cfi_restore 4
 988              		.cfi_def_cfa_offset 0
 989 0036 7047     		bx	lr
 990              	.L51:
 991              		.align	2
 992              	.L50:
 993 0038 00100040 		.word	1073745920
 994 003c 00000000 		.word	.LANCHOR3
 995 0040 00000000 		.word	.LANCHOR4
 996 0044 00000000 		.word	buffer
 997 0048 89888888 		.word	-2004318071
 998              		.cfi_endproc
 999              	.LFE140:
 1001              		.section	.text.__io_putchar,"ax",%progbits
 1002              		.align	1
 1003              		.global	__io_putchar
 1004              		.syntax unified
 1005              		.thumb
 1006              		.thumb_func
 1007              		.fpu fpv5-d16
 1009              	__io_putchar:
 1010              	.LFB149:
 380:Src/main.c    ****   uint8_t c[1];
 1011              		.loc 1 380 0
 1012              		.cfi_startproc
 1013              		@ args = 0, pretend = 0, frame = 8
 1014              		@ frame_needed = 0, uses_anonymous_args = 0
 1015              	.LVL48:
 1016 0000 10B5     		push	{r4, lr}
 1017              	.LCFI4:
 1018              		.cfi_def_cfa_offset 8
 1019              		.cfi_offset 4, -8
 1020              		.cfi_offset 14, -4
 1021 0002 82B0     		sub	sp, sp, #8
 1022              	.LCFI5:
 1023              		.cfi_def_cfa_offset 16
 1024 0004 0446     		mov	r4, r0
 382:Src/main.c    ****   HAL_UART_Transmit(&huart3, &c[0], 1, 10);
 1025              		.loc 1 382 0
 1026 0006 02A9     		add	r1, sp, #8
 1027 0008 01F8040D 		strb	r0, [r1, #-4]!
 383:Src/main.c    ****   return ch;
 1028              		.loc 1 383 0
 1029 000c 0A23     		movs	r3, #10
 1030 000e 0122     		movs	r2, #1
 1031 0010 0248     		ldr	r0, .L54
 1032              	.LVL49:
 1033 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 1034              	.LVL50:
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 87


 385:Src/main.c    **** 
 1035              		.loc 1 385 0
 1036 0016 2046     		mov	r0, r4
 1037 0018 02B0     		add	sp, sp, #8
 1038              	.LCFI6:
 1039              		.cfi_def_cfa_offset 8
 1040              		@ sp needed
 1041 001a 10BD     		pop	{r4, pc}
 1042              	.LVL51:
 1043              	.L55:
 1044              		.align	2
 1045              	.L54:
 1046 001c 00000000 		.word	huart3
 1047              		.cfi_endproc
 1048              	.LFE149:
 1050              		.section	.text._write,"ax",%progbits
 1051              		.align	1
 1052              		.global	_write
 1053              		.syntax unified
 1054              		.thumb
 1055              		.thumb_func
 1056              		.fpu fpv5-d16
 1058              	_write:
 1059              	.LFB150:
 388:Src/main.c    ****   int DataIdx;
 1060              		.loc 1 388 0
 1061              		.cfi_startproc
 1062              		@ args = 0, pretend = 0, frame = 0
 1063              		@ frame_needed = 0, uses_anonymous_args = 0
 1064              	.LVL52:
 1065 0000 70B5     		push	{r4, r5, r6, lr}
 1066              	.LCFI7:
 1067              		.cfi_def_cfa_offset 16
 1068              		.cfi_offset 4, -16
 1069              		.cfi_offset 5, -12
 1070              		.cfi_offset 6, -8
 1071              		.cfi_offset 14, -4
 1072 0002 1646     		mov	r6, r2
 1073              	.LVL53:
 390:Src/main.c    ****   {
 1074              		.loc 1 390 0
 1075 0004 0024     		movs	r4, #0
 1076 0006 05E0     		b	.L57
 1077              	.LVL54:
 1078              	.L58:
 392:Src/main.c    ****   }
 1079              		.loc 1 392 0 discriminator 3
 1080 0008 4D1C     		adds	r5, r1, #1
 1081              	.LVL55:
 1082 000a 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 1083 000c FFF7FEFF 		bl	__io_putchar
 1084              	.LVL56:
 390:Src/main.c    ****   {
 1085              		.loc 1 390 0 discriminator 3
 1086 0010 0134     		adds	r4, r4, #1
 1087              	.LVL57:
 392:Src/main.c    ****   }
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 88


 1088              		.loc 1 392 0 discriminator 3
 1089 0012 2946     		mov	r1, r5
 1090              	.LVL58:
 1091              	.L57:
 390:Src/main.c    ****   {
 1092              		.loc 1 390 0 discriminator 1
 1093 0014 B442     		cmp	r4, r6
 1094 0016 F7DB     		blt	.L58
 395:Src/main.c    **** 
 1095              		.loc 1 395 0
 1096 0018 3046     		mov	r0, r6
 1097 001a 70BD     		pop	{r4, r5, r6, pc}
 1098              		.cfi_endproc
 1099              	.LFE150:
 1101              		.section	.text._Error_Handler,"ax",%progbits
 1102              		.align	1
 1103              		.global	_Error_Handler
 1104              		.syntax unified
 1105              		.thumb
 1106              		.thumb_func
 1107              		.fpu fpv5-d16
 1109              	_Error_Handler:
 1110              	.LFB151:
 406:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 1111              		.loc 1 406 0
 1112              		.cfi_startproc
 1113              		@ Volatile: function does not return.
 1114              		@ args = 0, pretend = 0, frame = 0
 1115              		@ frame_needed = 0, uses_anonymous_args = 0
 1116              		@ link register save eliminated.
 1117              	.LVL59:
 1118              	.L61:
 1119 0000 FEE7     		b	.L61
 1120              		.cfi_endproc
 1121              	.LFE151:
 1123              		.comm	usbDevice,4,4
 1124              		.global	transmissionFlag
 1125              		.global	string
 1126              		.global	flipFlag
 1127              		.global	dmaFlag
 1128              		.global	debugIndex
 1129              		.comm	debugBuffer,64,4
 1130              		.global	bufferValue
 1131              		.global	bufferIndex
 1132              		.global	buffer
 1133              		.comm	hUsbDeviceFS,548,4
 1134              		.section	.bss.bufferIndex,"aw",%nobits
 1135              		.align	2
 1136              		.set	.LANCHOR3,. + 0
 1139              	bufferIndex:
 1140 0000 00000000 		.space	4
 1141              		.section	.bss.bufferValue,"aw",%nobits
 1142              		.align	2
 1143              		.set	.LANCHOR4,. + 0
 1146              	bufferValue:
 1147 0000 00000000 		.space	4
 1148              		.section	.bss.debugIndex,"aw",%nobits
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 89


 1149              		.align	2
 1152              	debugIndex:
 1153 0000 00000000 		.space	4
 1154              		.section	.bss.dmaFlag,"aw",%nobits
 1155              		.align	2
 1156              		.set	.LANCHOR1,. + 0
 1159              	dmaFlag:
 1160 0000 00000000 		.space	4
 1161              		.section	.bss.flipFlag,"aw",%nobits
 1162              		.align	2
 1163              		.set	.LANCHOR2,. + 0
 1166              	flipFlag:
 1167 0000 00000000 		.space	4
 1168              		.section	.bss.transmissionFlag,"aw",%nobits
 1169              		.align	2
 1172              	transmissionFlag:
 1173 0000 00000000 		.space	4
 1174              		.section	.data.string,"aw",%progbits
 1175              		.align	2
 1176              		.set	.LANCHOR0,. + 0
 1179              	string:
 1180 0000 656E640D 		.ascii	"end\015\012\000"
 1180      0A00
 1181 0006 00000000 		.space	16
 1181      00000000 
 1181      00000000 
 1181      00000000 
 1182              		.section	.orbita_buffer,"aw",%progbits
 1183              		.align	2
 1186              	buffer:
 1187 0000 00000000 		.space	245760
 1187      00000000 
 1187      00000000 
 1187      00000000 
 1187      00000000 
 1188              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1189              		.align	2
 1190              	.LC0:
 1191 0000 77616974 		.ascii	"waiting\015\000"
 1191      696E670D 
 1191      00
 1192 0009 000000   		.space	3
 1193              	.LC1:
 1194 000c 73656E64 		.ascii	"send_data\000"
 1194      5F646174 
 1194      6100
 1195 0016 0000     		.space	2
 1196              	.LC2:
 1197 0018 73746172 		.ascii	"start \015\000"
 1197      74200D00 
 1198              		.text
 1199              	.Letext0:
 1200              		.file 4 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 1201              		.file 5 "c:\\gcc\\arm-none-eabi\\include\\machine\\_default_types.h"
 1202              		.file 6 "c:\\gcc\\arm-none-eabi\\include\\sys\\_stdint.h"
 1203              		.file 7 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 1204              		.file 8 "c:\\gcc\\arm-none-eabi\\include\\sys\\lock.h"
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 90


 1205              		.file 9 "c:\\gcc\\arm-none-eabi\\include\\sys\\_types.h"
 1206              		.file 10 "c:\\gcc\\lib\\gcc\\arm-none-eabi\\7.3.1\\include\\stddef.h"
 1207              		.file 11 "c:\\gcc\\arm-none-eabi\\include\\sys\\reent.h"
 1208              		.file 12 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 1209              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 1210              		.file 14 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_eth.h"
 1211              		.file 15 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 1212              		.file 16 "Inc/eth.h"
 1213              		.file 17 "Inc/usart.h"
 1214              		.file 18 "c:\\gcc\\arm-none-eabi\\include\\stdlib.h"
 1215              		.file 19 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 1216              		.file 20 "Inc/usb_device.h"
 1217              		.file 21 "Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc/usbd_cdc.h"
 1218              		.file 22 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 1219              		.file 23 "c:\\gcc\\arm-none-eabi\\include\\string.h"
 1220              		.file 24 "<built-in>"
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 91


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:17     .text.my_initGPIO:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:23     .text.my_initGPIO:00000000 my_initGPIO
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:169    .text.my_initGPIO:00000134 $d
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:178    .text.my_initTIM6:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:184    .text.my_initTIM6:00000000 my_initTIM6
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:236    .text.my_initTIM6:0000003c $d
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:243    .text.zeroArray:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:249    .text.zeroArray:00000000 zeroArray
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:279    .text.zeroArray:00000014 $d
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:1186   .orbita_buffer:00000000 buffer
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:284    .text.my_initClocks:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:290    .text.my_initClocks:00000000 my_initClocks
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:486    .text.my_initClocks:0000013c $d
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:496    .text.writeFile:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:502    .text.writeFile:00000000 writeFile
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:566    .text.writeFile:00000040 $d
                            *COM*:00000224 hUsbDeviceFS
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:573    .text.main:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:580    .text.main:00000000 main
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:856    .text.main:000000fc $d
                            *COM*:00000004 usbDevice
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:871    .text.TIM2_IRQHandler:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:878    .text.TIM2_IRQHandler:00000000 TIM2_IRQHandler
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:895    .text.DMA1_Stream0_IRQHandler:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:902    .text.DMA1_Stream0_IRQHandler:00000000 DMA1_Stream0_IRQHandler
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:934    .text.DMA1_Stream0_IRQHandler:00000028 $d
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:942    .text.TIM6_DAC_IRQHandler:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:949    .text.TIM6_DAC_IRQHandler:00000000 TIM6_DAC_IRQHandler
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:993    .text.TIM6_DAC_IRQHandler:00000038 $d
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:1002   .text.__io_putchar:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:1009   .text.__io_putchar:00000000 __io_putchar
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:1046   .text.__io_putchar:0000001c $d
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:1051   .text._write:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:1058   .text._write:00000000 _write
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:1102   .text._Error_Handler:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:1109   .text._Error_Handler:00000000 _Error_Handler
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:1172   .bss.transmissionFlag:00000000 transmissionFlag
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:1179   .data.string:00000000 string
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:1166   .bss.flipFlag:00000000 flipFlag
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:1159   .bss.dmaFlag:00000000 dmaFlag
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:1152   .bss.debugIndex:00000000 debugIndex
                            *COM*:00000040 debugBuffer
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:1146   .bss.bufferValue:00000000 bufferValue
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:1139   .bss.bufferIndex:00000000 bufferIndex
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:1135   .bss.bufferIndex:00000000 $d
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:1142   .bss.bufferValue:00000000 $d
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:1149   .bss.debugIndex:00000000 $d
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:1155   .bss.dmaFlag:00000000 $d
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:1162   .bss.flipFlag:00000000 $d
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:1169   .bss.transmissionFlag:00000000 $d
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:1175   .data.string:00000000 $d
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:1183   .orbita_buffer:00000000 $d
C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s:1189   .rodata.main.str1.4:00000000 $d

UNDEFINED SYMBOLS
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccHPUh43.s 			page 92


CDC_Transmit_FS
HAL_Init
MX_ETH_Init
MX_USART3_UART_Init
MX_USB_DEVICE_Init
HAL_Delay
puts
strcmp
HAL_UART_Transmit
huart3
