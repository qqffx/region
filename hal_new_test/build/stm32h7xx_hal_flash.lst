ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_hal_flash.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.FLASH_SetErrorCode,"ax",%progbits
  17              		.align	1
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu fpv5-d16
  23              	FLASH_SetErrorCode:
  24              	.LFB150:
  25              		.file 1 "Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c"
   1:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
   2:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   ******************************************************************************
   3:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @file    stm32h7xx_hal_flash.c
   4:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @author  MCD Application Team
   5:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief   FLASH HAL module driver.
   6:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *          functionalities of the internal FLASH memory:
   8:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *           + Program operations functions
   9:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *           + Memory Control functions 
  10:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *           + Peripheral Errors functions
  11:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *  
  12:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  @verbatim    
  13:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   ==============================================================================
  14:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                         ##### FLASH peripheral features #####
  15:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   ==============================================================================
  16:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****            
  17:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   [..] The Flash memory interface manages CPU AXI I-Code and D-Code accesses 
  18:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****        to the Flash memory. It implements the erase and program Flash memory operations 
  19:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****        and the read and write protection mechanisms.
  20:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       
  21:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   
  22:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  23:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   [..] The FLASH main features are:
  24:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       (+) Flash memory read operations
  25:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       (+) Flash memory program/erase operations
  26:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       (+) Read / write protections
  27:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       (+) Option bytes programming      
  28:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       (+) Error code correction (ECC) : Data in flash are 266-bits word
  29:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****           (10 bits added per double word)
  30:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       
  31:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       
  32:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                         ##### How to use this driver #####
  33:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  ==============================================================================
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 2


  34:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     [..]                             
  35:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       This driver provides functions and macros to configure and program the FLASH
  36:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       memory of all STM32H7xx devices.
  37:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****    
  38:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       (#) FLASH Memory IO Programming functions:
  39:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****            (++) Lock and Unlock the FLASH interface using HAL_FLASH_Unlock() and
  40:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                 HAL_FLASH_Lock() functions
  41:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****            (++) Program functions: double word only
  42:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****            (++) There Two modes of programming :
  43:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****             (+++) Polling mode using HAL_FLASH_Program() function
  44:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****             (+++) Interrupt mode using HAL_FLASH_Program_IT() function
  45:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     
  46:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       (#) Interrupts and flags management functions : 
  47:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****            (++) Handle FLASH interrupts by calling HAL_FLASH_IRQHandler()
  48:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****            (++) Callback functions are called when the flash operations are finished :
  49:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                 HAL_FLASH_EndOfOperationCallback() when everything is ok, otherwise
  50:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                 HAL_FLASH_OperationErrorCallback()
  51:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****            (++) Get error flag status by calling HAL_FLASH_GetError()
  52:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       
  53:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       (#) Option bytes management functions :
  54:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****            (++) Lock and Unlock the option bytes using HAL_FLASH_OB_Unlock() and
  55:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                 HAL_FLASH_OB_Lock() functions
  56:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****            (++) Launch the reload of the option bytes using HAL_FLASH_Launch() function.
  57:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                 In this case, a reset is generated
  58:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     [..] 
  59:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       In addition to these functions, this driver includes a set of macros allowing
  60:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       to handle the following operations:
  61:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****        (+) Set the latency
  62:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****        (+) Enable/Disable the FLASH interrupts
  63:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****        (+) Monitor the FLASH flags status
  64:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****      [..]
  65:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     (@) For any Flash memory program operation (erase or program), the CPU clock frequency
  66:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         (HCLK) must be at least 1MHz. 
  67:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     (@) The contents of the Flash memory are not guaranteed if a device reset occurs during 
  68:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         a Flash memory operation.
  69:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     (@) Any attempt to read the Flash memory while it is being written or erased, causes the 
  70:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         bus to stall. Read operations are processed correctly once the program operation has 
  71:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         completed. This means that code or data fetches cannot be performed while a write/erase 
  72:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         operation is ongoing
  73:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     
  74:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  @endverbatim                      
  75:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   ******************************************************************************
  76:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @attention
  77:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *
  78:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  79:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *
  80:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * Redistribution and use in source and binary forms, with or without modification,
  81:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * are permitted provided that the following conditions are met:
  82:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  83:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *      this list of conditions and the following disclaimer.
  84:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  85:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *      this list of conditions and the following disclaimer in the documentation
  86:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *      and/or other materials provided with the distribution.
  87:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  88:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *      may be used to endorse or promote products derived from this software
  89:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *      without specific prior written permission.
  90:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 3


  91:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  92:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  93:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  94:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  95:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  96:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  97:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  98:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  99:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *
 102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   ******************************************************************************
 103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /* Includes ------------------------------------------------------------------*/
 106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #include "stm32h7xx_hal.h"
 107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /** @addtogroup STM32H7xx_HAL_Driver
 109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @{
 110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /** @defgroup FLASH FLASH
 113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief FLASH HAL module driver
 114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @{
 115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #ifdef HAL_FLASH_MODULE_ENABLED
 118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /* Private typedef -----------------------------------------------------------*/
 120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /* Private define ------------------------------------------------------------*/ 
 121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /** @addtogroup FLASH_Private_Constants
 122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @{
 123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #define FLASH_TIMEOUT_VALUE       ((uint32_t)50000U)/* 50 s */
 125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @}
 127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */         
 128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /* Private macro -------------------------------------------------------------*/
 129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /* Private variables ---------------------------------------------------------*/
 130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** FLASH_ProcessTypeDef pFlash;
 131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /* Private function prototypes -----------------------------------------------*/
 132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** static void FLASH_SetErrorCode(uint32_t Bank);
 133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /* Private functions ---------------------------------------------------------*/
 134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /** @defgroup FLASH_Private_Functions FLASH Private functions
 136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @{
 137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /** @defgroup FLASH_Group1 Programming operation functions 
 140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  *  @brief   Programming operation functions 
 141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  *
 142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** @verbatim   
 143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  ===============================================================================
 144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                   ##### Programming operation functions #####
 145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  ===============================================================================
 146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     [..]
 147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     This subsection provides a set of functions allowing to manage the FLASH 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 4


 148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     program operations.
 149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  
 150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** @endverbatim
 151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @{
 152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  
 154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Program flash word of 256 bits at a specified address
 156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  TypeProgram Indicate the way to program at a specified address.
 157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *                      This parameter can be a value of @ref FLASH_Type_Program
 158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  FlashAddress specifies the address to be programmed.
 159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  DataAddress specifies the address of data (256 bits) to be programmed
 160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * 
 161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL_StatusTypeDef HAL Status
 162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Program(uint32_t TypeProgram, uint32_t FlashAddress, uint64_t DataAddre
 164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __IO uint64_t *dest_addr = (__IO uint64_t *)FlashAddress;
 167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __IO uint64_t *src_addr = (__IO uint64_t*)((uint32_t)DataAddress);
 168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t bank;
 169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint8_t row_index = 4;
 170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   
 171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Process Locked */
 172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __HAL_LOCK(&pFlash);
 173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Check the parameters */
 175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   assert_param(IS_FLASH_TYPEPROGRAM(TypeProgram));
 176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   assert_param(IS_FLASH_PROGRAM_ADDRESS(FlashAddress));
 177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(IS_FLASH_PROGRAM_ADDRESS_BANK1(FlashAddress))
 179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     bank = FLASH_BANK_1;
 181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else
 183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     bank = FLASH_BANK_2;    
 185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   
 187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Wait for last operation to be completed */
 188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE, bank);
 189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   
 190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(status == HAL_OK)
 191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(bank == FLASH_BANK_1)
 193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Clear bank 1 pending flags (if any) */ 
 195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       __HAL_FLASH_CLEAR_FLAG_BANK1(FLASH_FLAG_EOP_BANK1 | FLASH_FLAG_QW_BANK1 | FLASH_FLAG_WBNE_BAN
 196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   
 197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Set PG bit */
 198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       SET_BIT(FLASH->CR1, FLASH_CR_PG);
 199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else
 201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Clear bank 2 pending flags (if any) */ 
 203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       __HAL_FLASH_CLEAR_FLAG_BANK2(FLASH_FLAG_EOP_BANK2 | FLASH_FLAG_QW_BANK2 | FLASH_FLAG_WBNE_BAN
 204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 5


 205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Set PG bit */
 206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       SET_BIT(FLASH->CR2, FLASH_CR_PG);  
 207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   
 209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Program the 256 bits flash word */
 210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     do
 211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       *dest_addr++ = *src_addr++;
 213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     } while (--row_index != 0);
 214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __DSB();
 216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     
 217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Wait for last operation to be completed */
 218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE, bank);
 219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     
 220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(bank == FLASH_BANK_1)
 221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Check FLASH End of Operation flag  */
 223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if (__HAL_FLASH_GET_FLAG_BANK1(FLASH_FLAG_EOP_BANK1))
 224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Clear FLASH End of Operation pending bit */
 226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         __HAL_FLASH_CLEAR_FLAG_BANK1(FLASH_FLAG_EOP_BANK1);
 227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     
 229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* If the program operation is completed, disable the PG*/
 230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       CLEAR_BIT(FLASH->CR1, FLASH_CR_PG);
 231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else
 233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Check FLASH End of Operation flag  */
 235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if (__HAL_FLASH_GET_FLAG_BANK2(FLASH_FLAG_EOP_BANK2))
 236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Clear FLASH End of Operation pending bit */
 238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         __HAL_FLASH_CLEAR_FLAG_BANK2(FLASH_FLAG_EOP_BANK2);
 239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     
 241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* If the program operation is completed, disable the PG */
 242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       CLEAR_BIT(FLASH->CR2, FLASH_CR_PG);
 243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Process Unlocked */
 247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __HAL_UNLOCK(&pFlash);
 248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return status;  
 250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Program flash words of 256 bits at a specified address with interrupt enabled.
 254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  TypeProgram Indicate the way to program at a specified address.
 255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *                      This parameter can be a value of @ref FLASH_Type_Program
 256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  FlashAddress specifies the address to be programmed.
 257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  DataAddress specifies the address of data (256 bits) to be programmed
 258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * 
 259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL Status
 260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Program_IT(uint32_t TypeProgram, uint32_t FlashAddress, uint64_t DataAd
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 6


 262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_OK;
 264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __IO uint64_t *dest_addr = (__IO uint64_t*)FlashAddress;
 265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __IO uint64_t *src_addr = (__IO uint64_t*)((uint32_t)DataAddress);
 266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t bank;
 267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint8_t row_index = 4;
 268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Process Locked */
 270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __HAL_LOCK(&pFlash);
 271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   
 272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Check the parameters */
 273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   assert_param(IS_FLASH_TYPEPROGRAM(TypeProgram));
 274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   assert_param(IS_FLASH_PROGRAM_ADDRESS(FlashAddress));  
 275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(IS_FLASH_PROGRAM_ADDRESS_BANK1(FlashAddress))
 277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     bank = FLASH_BANK_1;
 279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     pFlash.ProcedureOnGoing = FLASH_PROC_PROGRAM_BANK1;
 280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else
 282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     bank = FLASH_BANK_2;
 284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     pFlash.ProcedureOnGoing = FLASH_PROC_PROGRAM_BANK2;    
 285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }  
 286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Set internal variables used by the IRQ handler */
 288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   pFlash.Address = FlashAddress;
 289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     
 290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(bank == FLASH_BANK_1)
 291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Clear bank 1 pending flags (if any) */ 
 293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_FLASH_CLEAR_FLAG_BANK1(FLASH_FLAG_EOP_BANK1 | FLASH_FLAG_ALL_ERRORS_BANK1); 
 294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   
 295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Set PG bit */
 296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     SET_BIT(FLASH->CR1, FLASH_CR_PG);
 297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   
 298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Enable End of Operation and Error interrupts for Bank 1 */
 299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_FLASH_ENABLE_IT_BANK1(FLASH_IT_EOP_BANK1    | FLASH_IT_WRPERR_BANK1 | FLASH_IT_PGSERR_BAN
 300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                 FLASH_IT_STRBERR_BANK1 | FLASH_IT_INCERR_BANK1 | FLASH_IT_OPERR_BAN
 301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else
 303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Clear bank 2 pending flags (if any) */ 
 305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_FLASH_CLEAR_FLAG_BANK2(FLASH_FLAG_EOP_BANK2 | FLASH_FLAG_ALL_ERRORS_BANK2); 
 306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   
 307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Set PG bit */
 308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     SET_BIT(FLASH->CR2, FLASH_CR_PG);
 309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     
 310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Enable End of Operation and Error interrupts for Bank2*/
 311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_FLASH_ENABLE_IT_BANK2(FLASH_IT_EOP_BANK2    | FLASH_IT_WRPERR_BANK2 | FLASH_IT_PGSERR_BAN
 312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                 FLASH_IT_STRBERR_BANK2 | FLASH_IT_INCERR_BANK2 | FLASH_IT_OPERR_BAN
 313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Program the 256 bits flash word */
 316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   do
 317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     *dest_addr++ = *src_addr++;
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 7


 319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   } while (--row_index != 0);
 320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return status;  
 322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief This function handles FLASH interrupt request.
 326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval None
 327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** void HAL_FLASH_IRQHandler(void)
 329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t temp;
 331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Check FLASH Bank1 End of Operation flag  */
 333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(__HAL_FLASH_GET_FLAG_BANK1(FLASH_SR_EOP) != RESET)
 334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(pFlash.ProcedureOnGoing == FLASH_PROC_SECTERASE_BANK1)
 336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /*Nb of sector to erased can be decreased*/
 338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.NbSectorsToErase--;
 339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Check if there are still sectors to erase*/
 341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if(pFlash.NbSectorsToErase != 0)
 342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         temp = pFlash.Sector;
 344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /*Indicate user which sector has been erased*/
 345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(temp);
 346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Clear pending flags (if any) */  
 348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Clear bank 1 pending flags (if any) */ 
 349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         __HAL_FLASH_CLEAR_FLAG_BANK1(FLASH_FLAG_EOP_BANK1 | FLASH_FLAG_ALL_ERRORS_BANK1);  
 350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /*Increment sector number*/
 352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         temp = ++pFlash.Sector;
 353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         FLASH_Erase_Sector(temp, FLASH_BANK_1/*pFlash.Bank*/, pFlash.VoltageForErase);
 354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       else
 356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /*No more sectors to Erase, user callback can be called.*/
 358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /*Reset Sector and stop Erase sectors procedure*/
 359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.Sector = temp = 0xFFFFFFFF;
 360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* FLASH EOP interrupt user callback */
 362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(temp);
 363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Clear FLASH End of Operation pending bit */
 364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         __HAL_FLASH_CLEAR_FLAG_BANK1(FLASH_FLAG_EOP_BANK1);
 365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else 
 368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if((pFlash.ProcedureOnGoing == FLASH_PROC_MASSERASE_BANK1) || (pFlash.ProcedureOnGoing == FLA
 370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /*MassErase ended. Return the selected bank*/
 372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* FLASH EOP interrupt user callback */
 373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(FLASH_BANK_1);
 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       else if(pFlash.ProcedureOnGoing == FLASH_PROC_PROGRAM_BANK1)
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 8


 376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /*Program ended. Return the selected address*/
 378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* FLASH EOP interrupt user callback */
 379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(pFlash.Address);
 380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       
 382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if((pFlash.ProcedureOnGoing != FLASH_PROC_SECTERASE_BANK2) && \
 383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****          (pFlash.ProcedureOnGoing != FLASH_PROC_MASSERASE_BANK2)&& \
 384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****          (pFlash.ProcedureOnGoing != FLASH_PROC_PROGRAM_BANK2))
 385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Clear FLASH End of Operation pending bit */
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         __HAL_FLASH_CLEAR_FLAG_BANK1(FLASH_FLAG_EOP_BANK1);
 389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  /* Check FLASH Bank2 End of Operation flag  */
 394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(__HAL_FLASH_GET_FLAG_BANK2(FLASH_SR_EOP) != RESET)
 395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(pFlash.ProcedureOnGoing == FLASH_PROC_SECTERASE_BANK2)
 397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /*Nb of sector to erased can be decreased*/
 399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.NbSectorsToErase--;
 400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Check if there are still sectors to erase*/
 402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if(pFlash.NbSectorsToErase != 0)
 403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         temp = pFlash.Sector;
 405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /*Indicate user which sector has been erased*/
 406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(temp);
 407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Clear pending flags (if any) */  
 409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Clear bank 2 pending flags (if any) */ 
 410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         __HAL_FLASH_CLEAR_FLAG_BANK2(FLASH_FLAG_EOP_BANK2 | FLASH_FLAG_ALL_ERRORS_BANK2);  
 411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /*Increment sector number*/
 413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         temp = ++pFlash.Sector;
 414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         FLASH_Erase_Sector(temp, FLASH_BANK_2 /*pFlash.Bank*/, pFlash.VoltageForErase);
 415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       else
 417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /*No more sectors to Erase, user callback can be called.*/
 419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /*Reset Sector and stop Erase sectors procedure*/
 420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.Sector = temp = 0xFFFFFFFF;
 421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* FLASH EOP interrupt user callback */
 423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(temp);
 424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Clear FLASH End of Operation pending bit */
 425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         __HAL_FLASH_CLEAR_FLAG_BANK2(FLASH_FLAG_EOP_BANK2);
 426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else 
 429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if((pFlash.ProcedureOnGoing == FLASH_PROC_MASSERASE_BANK2) || (pFlash.ProcedureOnGoing == FLA
 431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /*MassErase ended. Return the selected bank*/
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 9


 433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* FLASH EOP interrupt user callback */
 434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(FLASH_BANK_2);
 435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       else
 437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /*Program ended. Return the selected address*/
 439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* FLASH EOP interrupt user callback */
 440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(pFlash.Address);
 441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if((pFlash.ProcedureOnGoing != FLASH_PROC_SECTERASE_BANK1) && \
 444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****           (pFlash.ProcedureOnGoing != FLASH_PROC_MASSERASE_BANK1)&& \
 445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****           (pFlash.ProcedureOnGoing != FLASH_PROC_PROGRAM_BANK1))
 446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Clear FLASH End of Operation pending bit */
 449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         __HAL_FLASH_CLEAR_FLAG_BANK2(FLASH_FLAG_EOP_BANK2);
 450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   
 454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Check FLASH Bank1 operation error flags */
 455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(__HAL_FLASH_GET_FLAG_BANK1((FLASH_FLAG_EOP_BANK1    | FLASH_FLAG_WRPERR_BANK1 | FLASH_FLAG_PGS
 456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                  FLASH_FLAG_STRBER_BANK1R | FLASH_FLAG_INCERR_BANK1 | FLASH_FLAG_OP
 457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(pFlash.ProcedureOnGoing == FLASH_PROC_SECTERASE_BANK1)
 459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /*return the faulty sector*/
 461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       temp = pFlash.Sector;
 462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.Sector = 0xFFFFFFFF;
 463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else if((pFlash.ProcedureOnGoing == FLASH_PROC_MASSERASE_BANK1) || (pFlash.ProcedureOnGoing == 
 465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /*return the faulty bank*/
 467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       temp = FLASH_BANK_1;
 468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else
 470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /*return the faulty address*/
 472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       temp = pFlash.Address;
 473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     
 475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /*Save the Error code*/
 476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     FLASH_SetErrorCode(FLASH_BANK_1);
 477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* FLASH error interrupt user callback */
 479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     HAL_FLASH_OperationErrorCallback(temp);
 480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Clear FLASH error pending bits */
 481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_FLASH_CLEAR_FLAG_BANK1((FLASH_FLAG_EOP_BANK1    | FLASH_FLAG_WRPERR_BANK1 | FLASH_FLAG_PG
 482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                   FLASH_FLAG_STRBER_BANK1R | FLASH_FLAG_INCERR_BANK1 | FLASH_FLAG_O
 483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /*Stop the procedure ongoing*/
 485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   
 488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  /* Check FLASH Bank2 operation error flags */
 489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(__HAL_FLASH_GET_FLAG_BANK2((FLASH_FLAG_EOP_BANK2    | FLASH_FLAG_WRPERR_BANK2 | FLASH_FLAG_PGS
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 10


 490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                  FLASH_FLAG_STRBER_BANK2R | FLASH_FLAG_INCERR_BANK2 | FLASH_FLAG_OP
 491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                  
 492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(pFlash.ProcedureOnGoing == FLASH_PROC_SECTERASE_BANK2)
 494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /*return the faulty sector*/
 496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       temp = pFlash.Sector;
 497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.Sector = 0xFFFFFFFF;
 498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else if((pFlash.ProcedureOnGoing == FLASH_PROC_MASSERASE_BANK2) || (pFlash.ProcedureOnGoing == 
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /*return the faulty bank*/
 502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       temp = FLASH_BANK_2;
 503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else
 505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /*return the faulty address*/
 507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       temp = pFlash.Address;
 508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     
 510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /*Save the Error code*/
 511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     FLASH_SetErrorCode(FLASH_BANK_2);
 512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* FLASH error interrupt user callback */
 514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     HAL_FLASH_OperationErrorCallback(temp);
 515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Clear FLASH error pending bits */
 516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_FLASH_CLEAR_FLAG_BANK2((FLASH_FLAG_EOP_BANK2    | FLASH_FLAG_WRPERR_BANK2 | FLASH_FLAG_PG
 517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                   FLASH_FLAG_STRBER_BANK2R | FLASH_FLAG_INCERR_BANK2 |   FLASH_FLAG
 518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /*Stop the procedure ongoing*/
 520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }  
 522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   
 523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(pFlash.ProcedureOnGoing == FLASH_PROC_NONE)
 524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Disable Bank1 Operation and Error source interrupt */
 526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_FLASH_DISABLE_IT_BANK1(FLASH_IT_EOP_BANK1    | FLASH_IT_WRPERR_BANK1 | FLASH_IT_PGSERR_BA
 527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                  FLASH_IT_STRBERR_BANK1 | FLASH_IT_INCERR_BANK1 | FLASH_IT_OPERR_BA
 528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                 
 529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Disable Bank2 Operation and Error source interrupt */
 530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_FLASH_DISABLE_IT_BANK2(FLASH_IT_EOP_BANK2    | FLASH_IT_WRPERR_BANK2 | FLASH_IT_PGSERR_BA
 531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                  FLASH_IT_STRBERR_BANK2 | FLASH_IT_INCERR_BANK2 | FLASH_IT_OPERR_BA
 532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Process Unlocked */
 534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_UNLOCK(&pFlash);
 535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   
 537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  FLASH end of operation interrupt callback
 541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  ReturnValue The value saved in this parameter depends on the ongoing procedure
 542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *                  Mass Erase Bank number which has been requested to erase
 543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *                  Sectors Erase: Sector which has been erased 
 544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *                    (if 0xFFFFFFFF, it means that all the selected sectors have been erased)
 545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *                  Program Address which was selected for data program
 546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval None
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 11


 547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** __weak void HAL_FLASH_EndOfOperationCallback(uint32_t ReturnValue)
 549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****             the HAL_FLASH_EndOfOperationCallback could be implemented in the user file
 552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****    */ 
 553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  FLASH operation error interrupt callback
 557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  ReturnValue The value saved in this parameter depends on the ongoing procedure
 558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *                 Mass Erase: Bank number which has been requested to erase
 559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *                 Sectors Erase: Sector number which returned an error
 560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *                 Program: Address which was selected for data program
 561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval None
 562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** __weak void HAL_FLASH_OperationErrorCallback(uint32_t ReturnValue)
 564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****             the HAL_FLASH_OperationErrorCallback could be implemented in the user file
 567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****    */ 
 568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @}
 572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */ 
 573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /** @defgroup FLASH_Group2 Peripheral Control functions 
 575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  *  @brief   management functions 
 576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  *
 577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** @verbatim   
 578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  ===============================================================================
 579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                       ##### Peripheral Control functions #####
 580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  ===============================================================================  
 581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     [..]
 582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     This subsection provides a set of functions allowing to control the FLASH 
 583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     memory operations.
 584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** @endverbatim
 586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @{
 587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Unlock the FLASH control registers access
 591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL Status
 592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Unlock(void)
 594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if((READ_BIT(FLASH->CR1, FLASH_CR_LOCK) != RESET) && (READ_BIT(FLASH->CR2, FLASH_CR_LOCK) != RESE
 596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Authorize the FLASH A Registers access */
 598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     WRITE_REG(FLASH->KEYR1, FLASH_KEY1);
 599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     WRITE_REG(FLASH->KEYR1, FLASH_KEY2);
 600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   
 601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Authorize the FLASH B Registers access */
 602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     WRITE_REG(FLASH->KEYR2, FLASH_KEY1);
 603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     WRITE_REG(FLASH->KEYR2, FLASH_KEY2);
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 12


 604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else
 606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     return HAL_ERROR;
 608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   
 610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return HAL_OK;
 611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Locks the FLASH control registers access
 615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL Status
 616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Lock(void)
 618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Set the LOCK Bit to lock the FLASH A Registers access */
 620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   SET_BIT(FLASH->CR1, FLASH_CR_LOCK);
 621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   
 622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Set the LOCK Bit to lock the FLASH B Registers access */
 623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   SET_BIT(FLASH->CR2, FLASH_CR_LOCK);
 624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   
 625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return HAL_OK;  
 626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Unlock the FLASH Option Control Registers access.
 630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL Status
 631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_OB_Unlock(void)
 633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(READ_BIT(FLASH->OPTCR, FLASH_OPTCR_OPTLOCK) != RESET)
 635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Authorizes the Option Byte register programming */
 637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     WRITE_REG(FLASH->OPTKEYR, FLASH_OPT_KEY1);
 638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     WRITE_REG(FLASH->OPTKEYR, FLASH_OPT_KEY2);
 639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else
 641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     return HAL_ERROR;
 643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }  
 644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   
 645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return HAL_OK;  
 646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Lock the FLASH Option Control Registers access.
 650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL Status 
 651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_OB_Lock(void)
 653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Set the OPTLOCK Bit to lock the FLASH A and B Option Byte Registers access */
 655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   SET_BIT(FLASH->OPTCR, FLASH_OPTCR_OPTLOCK);
 656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   
 657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return HAL_OK;  
 658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 13


 661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Launch the option byte loading.
 662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL Status
 663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_OB_Launch(void)
 665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Set OPTSTRT Bit */
 669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   SET_BIT(FLASH->OPTCR, FLASH_OPTCR_OPTSTART);  
 670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Wait for OB change operation to be completed */
 672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   status = FLASH_OB_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return status; 
 675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @}
 679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /** @defgroup FLASH_Group3 Peripheral State and Errors functions 
 682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  *  @brief   Peripheral Errors functions 
 683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  *
 684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** @verbatim   
 685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  ===============================================================================
 686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                 ##### Peripheral Errors functions #####
 687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  ===============================================================================  
 688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     [..]
 689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     This subsection permits to get in run-time Errors of the FLASH peripheral.
 690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** @endverbatim
 692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @{
 693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Get the specific FLASH error flag.
 697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL_FLASH_ERRORCode The returned value can be:
 698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_NONE: No error set 
 699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *
 700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_WRP_BANK1: Write Protection Error on Bank 1
 701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_PGS_BANK1  : Program Sequence Error on Bank 1
 702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_STRB_BANK1 : Strobe Error on Bank 1
 703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_INC_BANK1  : Inconsistency Error on Bank 1
 704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_OPE_BANK1  : Operation Error on Bank 1
 705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_RDP_BANK1  : Read Protection Error on Bank 1
 706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_RDS_BANK1  : Read Secured Error on Bank 1 
 707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_SNECC_BANK1: SNECC Error on Bank 1 
 708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_DBECC_BANK1: Double Detection ECC on Bank 1
 709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *
 710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_WRP_BANK2  : Write Protection Error on Bank 2
 711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_PGS_BANK2  : Program Sequence Error on Bank 2
 712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_STRB_BANK2 : Strobe Error on Bank 2
 713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_INC_BANK2  : Inconsistency Error on Bank 2
 714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_OPE_BANK2  : Operation Error on Bank 2
 715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_RDP_BANK2  : Read Protection Error on Bank 2
 716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_RDS_BANK2  : Read Secured Error on Bank 2 
 717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_SNECC_BANK2: SNECC Error on Bank 2 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 14


 718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_DBECC_BANK2: Double Detection ECC on Bank 2  
 719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** */
 720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** uint32_t HAL_FLASH_GetError(void)
 722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** { 
 723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****    return pFlash.ErrorCode;
 724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @}
 728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */ 
 729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @}
 732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Wait for a FLASH operation to complete.
 736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  Timeout maximum flash operation timeout
 737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  Bank flash FLASH_BANK_1 or FLASH_BANK_2
 738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL_StatusTypeDef HAL Status
 739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef FLASH_WaitForLastOperation(uint32_t Timeout, uint32_t Bank)
 741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Wait for the FLASH operation to complete by polling on BUSY flag to be reset.
 743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****      Even if the FLASH operation fails, the BUSY flag will be reset and an error
 744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****      flag will be set */
 745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     
 746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t bsyflag, errorflag = 0;  
 747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t timeout = HAL_GetTick() + Timeout;
 748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   
 749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   assert_param(IS_FLASH_BANK_EXCLUSIVE(Bank));
 750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   
 751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(Bank == FLASH_BANK_1)
 752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     bsyflag = FLASH_FLAG_BSY_BANK1 | FLASH_FLAG_QW_BANK1;
 754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if((FLASH->OPTCR & FLASH_OPTCR_SWAP_BANK) == 0)
 756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       bsyflag |= FLASH_FLAG_WBNE_BANK1;
 758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else
 760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       bsyflag |= FLASH_FLAG_WBNE_BANK2;
 762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }      
 763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else
 765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     bsyflag = FLASH_FLAG_BSY_BANK2 | FLASH_FLAG_QW_BANK2;
 767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if((FLASH->OPTCR & FLASH_OPTCR_SWAP_BANK) == 0)
 769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       bsyflag |= FLASH_FLAG_WBNE_BANK2;
 771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else
 773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       bsyflag |= FLASH_FLAG_WBNE_BANK1;
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 15


 775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }    
 776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****      
 778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   while(__HAL_FLASH_GET_FLAG(bsyflag)) 
 779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   { 
 780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(Timeout != HAL_MAX_DELAY)
 781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if(HAL_GetTick() >= timeout)
 783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         return HAL_TIMEOUT;
 785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     } 
 787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   
 789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if((Bank == FLASH_BANK_1) && ((FLASH->SR1 & FLASH_FLAG_ALL_ERRORS_BANK1) != RESET))
 790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     errorflag = FLASH_FLAG_ALL_ERRORS_BANK1;
 792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else if((Bank == FLASH_BANK_2) && ((FLASH->SR2 & FLASH_FLAG_ALL_ERRORS_BANK2 & 0x7FFFFFFF) != RES
 794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     errorflag = FLASH_FLAG_ALL_ERRORS_BANK2;
 796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(errorflag != 0)
 799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /*Save the error code*/
 801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     FLASH_SetErrorCode(Bank);
 802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     
 803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Clear error programming flags */
 804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_FLASH_CLEAR_FLAG(errorflag);
 805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     return HAL_ERROR;
 807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* If there is an error flag set */
 810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return HAL_OK;  
 811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Wait for a FLASH Option Bytes change operation to complete.
 815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  Timeout maximum flash operation timeout
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL_StatusTypeDef HAL Status
 817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef FLASH_OB_WaitForLastOperation(uint32_t Timeout)
 819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t timeout = HAL_GetTick() + Timeout;
 821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   
 822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Wait for the FLASH Option Bytes change operation to complete by polling on OPT_BUSY flag to be
 823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   while(FLASH->OPTSR_CUR & FLASH_OPTSR_OPT_BUSY) 
 824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   { 
 825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(Timeout != HAL_MAX_DELAY)
 826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if(HAL_GetTick() >= timeout)
 828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         return HAL_TIMEOUT;
 830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     } 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 16


 832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(FLASH->OPTSR_CUR & FLASH_OPTSR_OPTCHANGEERR)
 834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /*Save the error code*/
 836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     pFlash.ErrorCode |= HAL_FLASH_ERROR_OB_CHANGE;
 837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     
 838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /*Clear the OB error flag*/
 839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     FLASH->OPTCCR |= FLASH_OPTCCR_CLR_OPTCHANGEERR;
 840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     
 841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     return HAL_ERROR;    
 842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* If there is an error flag set */
 845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return HAL_OK;  
 846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Set the specific FLASH error flag.
 850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval None
 851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** static void FLASH_SetErrorCode(uint32_t Bank)
 853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {  
  26              		.loc 1 853 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
 854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
  32              		.loc 1 854 0
  33 0000 664B     		ldr	r3, .L25
  34 0002 0022     		movs	r2, #0
  35 0004 9A61     		str	r2, [r3, #24]
 855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   
 856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(Bank == FLASH_BANK_1)
  36              		.loc 1 856 0
  37 0006 0128     		cmp	r0, #1
  38 0008 02D0     		beq	.L20
 857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(__HAL_FLASH_GET_FLAG_BANK1(FLASH_FLAG_WRPERR_BANK1))
 859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP_BANK1;
 861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(__HAL_FLASH_GET_FLAG_BANK1(FLASH_FLAG_PGSERR_BANK1))
 863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.ErrorCode |= HAL_FLASH_ERROR_PGS_BANK1;
 865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(__HAL_FLASH_GET_FLAG_BANK1(FLASH_FLAG_STRBER_BANK1R))
 867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.ErrorCode |= HAL_FLASH_ERROR_STRB_BANK1;
 869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(__HAL_FLASH_GET_FLAG_BANK1(FLASH_FLAG_INCERR_BANK1))
 871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.ErrorCode |= HAL_FLASH_ERROR_INC_BANK1;
 873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(__HAL_FLASH_GET_FLAG_BANK1(FLASH_FLAG_OPERR_BANK1))
 875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 17


 876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.ErrorCode |= HAL_FLASH_ERROR_OPE_BANK1;
 877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(__HAL_FLASH_GET_FLAG_BANK1(FLASH_FLAG_RDPERR_BANK1))
 879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.ErrorCode |= HAL_FLASH_ERROR_RDP_BANK1;
 881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(__HAL_FLASH_GET_FLAG_BANK1(FLASH_FLAG_RDSERR_BANK1))
 883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.ErrorCode |= HAL_FLASH_ERROR_RDS_BANK1;
 885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(__HAL_FLASH_GET_FLAG_BANK1(FLASH_FLAG_SNECCE_BANK1RR))
 887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.ErrorCode |= HAL_FLASH_ERROR_SNECC_BANK1;
 889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(__HAL_FLASH_GET_FLAG_BANK1(FLASH_FLAG_DBECCE_BANK1RR))
 891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.ErrorCode |= HAL_FLASH_ERROR_DBECC_BANK1;
 893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }  
 894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else if(Bank == FLASH_BANK_2)
  39              		.loc 1 895 0
  40 000a 0228     		cmp	r0, #2
  41 000c 5BD0     		beq	.L21
  42              	.L1:
 896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(__HAL_FLASH_GET_FLAG_BANK2(FLASH_FLAG_WRPERR_BANK2))
 898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP_BANK2;
 900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(__HAL_FLASH_GET_FLAG_BANK2(FLASH_FLAG_PGSERR_BANK2))
 902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.ErrorCode |= HAL_FLASH_ERROR_PGS_BANK2;
 904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(__HAL_FLASH_GET_FLAG_BANK2(FLASH_FLAG_STRBER_BANK2R))
 906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.ErrorCode |= HAL_FLASH_ERROR_STRB_BANK2;
 908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(__HAL_FLASH_GET_FLAG_BANK2(FLASH_FLAG_INCERR_BANK2))
 910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.ErrorCode |= HAL_FLASH_ERROR_INC_BANK2;
 912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(__HAL_FLASH_GET_FLAG_BANK2(FLASH_FLAG_OPERR_BANK2))
 914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.ErrorCode |= HAL_FLASH_ERROR_OPE_BANK2;
 916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(__HAL_FLASH_GET_FLAG_BANK1(FLASH_FLAG_RDPERR_BANK2))
 918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.ErrorCode |= HAL_FLASH_ERROR_RDP_BANK2;
 920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(__HAL_FLASH_GET_FLAG_BANK1(FLASH_FLAG_RDSERR_BANK2))
 922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.ErrorCode |= HAL_FLASH_ERROR_RDS_BANK2;
 924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(__HAL_FLASH_GET_FLAG_BANK1(FLASH_FLAG_SNECCE_BANK2RR))
 926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.ErrorCode |= HAL_FLASH_ERROR_SNECC_BANK2;
 928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 18


 929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(__HAL_FLASH_GET_FLAG_BANK2(FLASH_FLAG_DBECCE_BANK2RR))
 930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.ErrorCode |= HAL_FLASH_ERROR_DBECC_BANK2;
 932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }  
 933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** } 
  43              		.loc 1 934 0
  44 000e 7047     		bx	lr
  45              	.L20:
 858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
  46              		.loc 1 858 0
  47 0010 634B     		ldr	r3, .L25+4
  48 0012 1B69     		ldr	r3, [r3, #16]
  49 0014 13F4003F 		tst	r3, #131072
  50 0018 04D0     		beq	.L3
 860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
  51              		.loc 1 860 0
  52 001a 604A     		ldr	r2, .L25
  53 001c 9369     		ldr	r3, [r2, #24]
  54 001e 43F00103 		orr	r3, r3, #1
  55 0022 9361     		str	r3, [r2, #24]
  56              	.L3:
 862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
  57              		.loc 1 862 0
  58 0024 5E4B     		ldr	r3, .L25+4
  59 0026 1B69     		ldr	r3, [r3, #16]
  60 0028 13F4802F 		tst	r3, #262144
  61 002c 04D0     		beq	.L4
 864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
  62              		.loc 1 864 0
  63 002e 5B4A     		ldr	r2, .L25
  64 0030 9369     		ldr	r3, [r2, #24]
  65 0032 43F00203 		orr	r3, r3, #2
  66 0036 9361     		str	r3, [r2, #24]
  67              	.L4:
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
  68              		.loc 1 866 0
  69 0038 594B     		ldr	r3, .L25+4
  70 003a 1B69     		ldr	r3, [r3, #16]
  71 003c 13F4002F 		tst	r3, #524288
  72 0040 04D0     		beq	.L5
 868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
  73              		.loc 1 868 0
  74 0042 564A     		ldr	r2, .L25
  75 0044 9369     		ldr	r3, [r2, #24]
  76 0046 43F00403 		orr	r3, r3, #4
  77 004a 9361     		str	r3, [r2, #24]
  78              	.L5:
 870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
  79              		.loc 1 870 0
  80 004c 544B     		ldr	r3, .L25+4
  81 004e 1B69     		ldr	r3, [r3, #16]
  82 0050 13F4001F 		tst	r3, #2097152
  83 0054 04D0     		beq	.L6
 872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
  84              		.loc 1 872 0
  85 0056 514A     		ldr	r2, .L25
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 19


  86 0058 9369     		ldr	r3, [r2, #24]
  87 005a 43F00803 		orr	r3, r3, #8
  88 005e 9361     		str	r3, [r2, #24]
  89              	.L6:
 874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
  90              		.loc 1 874 0
  91 0060 4F4B     		ldr	r3, .L25+4
  92 0062 1B69     		ldr	r3, [r3, #16]
  93 0064 13F4800F 		tst	r3, #4194304
  94 0068 04D0     		beq	.L7
 876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
  95              		.loc 1 876 0
  96 006a 4C4A     		ldr	r2, .L25
  97 006c 9369     		ldr	r3, [r2, #24]
  98 006e 43F01003 		orr	r3, r3, #16
  99 0072 9361     		str	r3, [r2, #24]
 100              	.L7:
 878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 101              		.loc 1 878 0
 102 0074 4A4B     		ldr	r3, .L25+4
 103 0076 1B69     		ldr	r3, [r3, #16]
 104 0078 13F4000F 		tst	r3, #8388608
 105 007c 04D0     		beq	.L8
 880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 106              		.loc 1 880 0
 107 007e 474A     		ldr	r2, .L25
 108 0080 9369     		ldr	r3, [r2, #24]
 109 0082 43F02003 		orr	r3, r3, #32
 110 0086 9361     		str	r3, [r2, #24]
 111              	.L8:
 882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 112              		.loc 1 882 0
 113 0088 454B     		ldr	r3, .L25+4
 114 008a 1B69     		ldr	r3, [r3, #16]
 115 008c 13F0807F 		tst	r3, #16777216
 116 0090 04D0     		beq	.L9
 884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 117              		.loc 1 884 0
 118 0092 424A     		ldr	r2, .L25
 119 0094 9369     		ldr	r3, [r2, #24]
 120 0096 43F04003 		orr	r3, r3, #64
 121 009a 9361     		str	r3, [r2, #24]
 122              	.L9:
 886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 123              		.loc 1 886 0
 124 009c 404B     		ldr	r3, .L25+4
 125 009e 1B69     		ldr	r3, [r3, #16]
 126 00a0 13F0007F 		tst	r3, #33554432
 127 00a4 04D0     		beq	.L10
 888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 128              		.loc 1 888 0
 129 00a6 3D4A     		ldr	r2, .L25
 130 00a8 9369     		ldr	r3, [r2, #24]
 131 00aa 43F08003 		orr	r3, r3, #128
 132 00ae 9361     		str	r3, [r2, #24]
 133              	.L10:
 890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 20


 134              		.loc 1 890 0
 135 00b0 3B4B     		ldr	r3, .L25+4
 136 00b2 1B69     		ldr	r3, [r3, #16]
 137 00b4 13F0806F 		tst	r3, #67108864
 138 00b8 A9D0     		beq	.L1
 892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }  
 139              		.loc 1 892 0
 140 00ba 384A     		ldr	r2, .L25
 141 00bc 9369     		ldr	r3, [r2, #24]
 142 00be 43F48073 		orr	r3, r3, #256
 143 00c2 9361     		str	r3, [r2, #24]
 144 00c4 7047     		bx	lr
 145              	.L21:
 897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 146              		.loc 1 897 0
 147 00c6 364B     		ldr	r3, .L25+4
 148 00c8 D3F81031 		ldr	r3, [r3, #272]
 149 00cc 13F4003F 		tst	r3, #131072
 150 00d0 04D0     		beq	.L12
 899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 151              		.loc 1 899 0
 152 00d2 324A     		ldr	r2, .L25
 153 00d4 9369     		ldr	r3, [r2, #24]
 154 00d6 43F48053 		orr	r3, r3, #4096
 155 00da 9361     		str	r3, [r2, #24]
 156              	.L12:
 901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 157              		.loc 1 901 0
 158 00dc 304B     		ldr	r3, .L25+4
 159 00de D3F81031 		ldr	r3, [r3, #272]
 160 00e2 13F4802F 		tst	r3, #262144
 161 00e6 04D0     		beq	.L13
 903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 162              		.loc 1 903 0
 163 00e8 2C4A     		ldr	r2, .L25
 164 00ea 9369     		ldr	r3, [r2, #24]
 165 00ec 43F40053 		orr	r3, r3, #8192
 166 00f0 9361     		str	r3, [r2, #24]
 167              	.L13:
 905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 168              		.loc 1 905 0
 169 00f2 2B4B     		ldr	r3, .L25+4
 170 00f4 D3F81031 		ldr	r3, [r3, #272]
 171 00f8 13F4002F 		tst	r3, #524288
 172 00fc 04D0     		beq	.L14
 907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 173              		.loc 1 907 0
 174 00fe 274A     		ldr	r2, .L25
 175 0100 9369     		ldr	r3, [r2, #24]
 176 0102 43F48043 		orr	r3, r3, #16384
 177 0106 9361     		str	r3, [r2, #24]
 178              	.L14:
 909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 179              		.loc 1 909 0
 180 0108 254B     		ldr	r3, .L25+4
 181 010a D3F81031 		ldr	r3, [r3, #272]
 182 010e 13F4001F 		tst	r3, #2097152
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 21


 183 0112 04D0     		beq	.L15
 911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 184              		.loc 1 911 0
 185 0114 214A     		ldr	r2, .L25
 186 0116 9369     		ldr	r3, [r2, #24]
 187 0118 43F40043 		orr	r3, r3, #32768
 188 011c 9361     		str	r3, [r2, #24]
 189              	.L15:
 913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 190              		.loc 1 913 0
 191 011e 204B     		ldr	r3, .L25+4
 192 0120 D3F81031 		ldr	r3, [r3, #272]
 193 0124 13F4800F 		tst	r3, #4194304
 194 0128 04D0     		beq	.L16
 915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 195              		.loc 1 915 0
 196 012a 1C4A     		ldr	r2, .L25
 197 012c 9369     		ldr	r3, [r2, #24]
 198 012e 43F48033 		orr	r3, r3, #65536
 199 0132 9361     		str	r3, [r2, #24]
 200              	.L16:
 917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 201              		.loc 1 917 0
 202 0134 1A4B     		ldr	r3, .L25+4
 203 0136 1A69     		ldr	r2, [r3, #16]
 204 0138 1A4B     		ldr	r3, .L25+8
 205 013a 1340     		ands	r3, r3, r2
 206 013c 13F1FF4F 		cmn	r3, #2139095040
 207 0140 1AD0     		beq	.L22
 208              	.L17:
 921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 209              		.loc 1 921 0
 210 0142 174B     		ldr	r3, .L25+4
 211 0144 1B69     		ldr	r3, [r3, #16]
 212 0146 03F00143 		and	r3, r3, #-2130706432
 213 014a B3F1014F 		cmp	r3, #-2130706432
 214 014e 19D0     		beq	.L23
 215              	.L18:
 925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 216              		.loc 1 925 0
 217 0150 134B     		ldr	r3, .L25+4
 218 0152 1B69     		ldr	r3, [r3, #16]
 219 0154 03F00243 		and	r3, r3, #-2113929216
 220 0158 B3F1024F 		cmp	r3, #-2113929216
 221 015c 18D0     		beq	.L24
 222              	.L19:
 929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 223              		.loc 1 929 0
 224 015e 104B     		ldr	r3, .L25+4
 225 0160 D3F81031 		ldr	r3, [r3, #272]
 226 0164 13F0806F 		tst	r3, #67108864
 227 0168 3FF451AF 		beq	.L1
 931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }  
 228              		.loc 1 931 0
 229 016c 0B4A     		ldr	r2, .L25
 230 016e 9369     		ldr	r3, [r2, #24]
 231 0170 43F48013 		orr	r3, r3, #1048576
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 22


 232 0174 9361     		str	r3, [r2, #24]
 233              		.loc 1 934 0
 234 0176 4AE7     		b	.L1
 235              	.L22:
 919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 236              		.loc 1 919 0
 237 0178 084A     		ldr	r2, .L25
 238 017a 9369     		ldr	r3, [r2, #24]
 239 017c 43F40033 		orr	r3, r3, #131072
 240 0180 9361     		str	r3, [r2, #24]
 241 0182 DEE7     		b	.L17
 242              	.L23:
 923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 243              		.loc 1 923 0
 244 0184 054A     		ldr	r2, .L25
 245 0186 9369     		ldr	r3, [r2, #24]
 246 0188 43F48023 		orr	r3, r3, #262144
 247 018c 9361     		str	r3, [r2, #24]
 248 018e DFE7     		b	.L18
 249              	.L24:
 927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 250              		.loc 1 927 0
 251 0190 024A     		ldr	r2, .L25
 252 0192 9369     		ldr	r3, [r2, #24]
 253 0194 43F40023 		orr	r3, r3, #524288
 254 0198 9361     		str	r3, [r2, #24]
 255 019a E0E7     		b	.L19
 256              	.L26:
 257              		.align	2
 258              	.L25:
 259 019c 00000000 		.word	pFlash
 260 01a0 00200052 		.word	1375739904
 261 01a4 00008080 		.word	-2139095040
 262              		.cfi_endproc
 263              	.LFE150:
 265              		.section	.text.HAL_FLASH_Program_IT,"ax",%progbits
 266              		.align	1
 267              		.global	HAL_FLASH_Program_IT
 268              		.syntax unified
 269              		.thumb
 270              		.thumb_func
 271              		.fpu fpv5-d16
 273              	HAL_FLASH_Program_IT:
 274              	.LFB138:
 262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_OK;
 275              		.loc 1 262 0
 276              		.cfi_startproc
 277              		@ args = 0, pretend = 0, frame = 0
 278              		@ frame_needed = 0, uses_anonymous_args = 0
 279              		@ link register save eliminated.
 280              	.LVL1:
 270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   
 281              		.loc 1 270 0
 282 0000 204B     		ldr	r3, .L37
 283 0002 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 284 0004 012B     		cmp	r3, #1
 285 0006 3BD0     		beq	.L32
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 23


 262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_OK;
 286              		.loc 1 262 0 discriminator 2
 287 0008 30B4     		push	{r4, r5}
 288              	.LCFI0:
 289              		.cfi_def_cfa_offset 8
 290              		.cfi_offset 4, -8
 291              		.cfi_offset 5, -4
 292 000a 0846     		mov	r0, r1
 293              	.LVL2:
 270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   
 294              		.loc 1 270 0 discriminator 2
 295 000c 1D4B     		ldr	r3, .L37
 296 000e 0124     		movs	r4, #1
 297 0010 1C75     		strb	r4, [r3, #20]
 276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 298              		.loc 1 276 0 discriminator 2
 299 0012 01F17843 		add	r3, r1, #-134217728
 300 0016 B3F5801F 		cmp	r3, #1048576
 301 001a 1CD2     		bcs	.L29
 302              	.LVL3:
 279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 303              		.loc 1 279 0
 304 001c 194B     		ldr	r3, .L37
 305 001e 0324     		movs	r4, #3
 306 0020 1C70     		strb	r4, [r3]
 288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     
 307              		.loc 1 288 0
 308 0022 1961     		str	r1, [r3, #16]
 293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   
 309              		.loc 1 293 0
 310 0024 184B     		ldr	r3, .L37+4
 311 0026 1949     		ldr	r1, .L37+8
 312              	.LVL4:
 313 0028 5961     		str	r1, [r3, #20]
 296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   
 314              		.loc 1 296 0
 315 002a D968     		ldr	r1, [r3, #12]
 316 002c 41F00201 		orr	r1, r1, #2
 317 0030 D960     		str	r1, [r3, #12]
 299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                 FLASH_IT_STRBERR_BANK1 | FLASH_IT_INCERR_BANK1 | FLASH_IT_OPERR_BAN
 318              		.loc 1 299 0
 319 0032 D968     		ldr	r1, [r3, #12]
 320 0034 41F4DE01 		orr	r1, r1, #7274496
 321 0038 D960     		str	r1, [r3, #12]
 322              	.LVL5:
 323              	.L30:
 262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_OK;
 324              		.loc 1 262 0 discriminator 1
 325 003a 0423     		movs	r3, #4
 326              	.LVL6:
 327              	.L31:
 318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   } while (--row_index != 0);
 328              		.loc 1 318 0 discriminator 1
 329 003c D2E90045 		ldrd	r4, [r2]
 330 0040 C0E90045 		strd	r4, [r0]
 319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 331              		.loc 1 319 0 discriminator 1
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 24


 332 0044 013B     		subs	r3, r3, #1
 333              	.LVL7:
 318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   } while (--row_index != 0);
 334              		.loc 1 318 0 discriminator 1
 335 0046 0830     		adds	r0, r0, #8
 336              	.LVL8:
 337 0048 0832     		adds	r2, r2, #8
 338              	.LVL9:
 319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 339              		.loc 1 319 0 discriminator 1
 340 004a 13F0FF03 		ands	r3, r3, #255
 341              	.LVL10:
 342 004e F5D1     		bne	.L31
 321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 343              		.loc 1 321 0
 344 0050 0020     		movs	r0, #0
 345              	.LVL11:
 322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 346              		.loc 1 322 0
 347 0052 30BC     		pop	{r4, r5}
 348              	.LCFI1:
 349              		.cfi_remember_state
 350              		.cfi_restore 5
 351              		.cfi_restore 4
 352              		.cfi_def_cfa_offset 0
 353 0054 7047     		bx	lr
 354              	.LVL12:
 355              	.L29:
 356              	.LCFI2:
 357              		.cfi_restore_state
 284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }  
 358              		.loc 1 284 0
 359 0056 0B4B     		ldr	r3, .L37
 360 0058 0624     		movs	r4, #6
 361 005a 1C70     		strb	r4, [r3]
 288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     
 362              		.loc 1 288 0
 363 005c 1961     		str	r1, [r3, #16]
 305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   
 364              		.loc 1 305 0
 365 005e 0A4B     		ldr	r3, .L37+4
 366 0060 0A49     		ldr	r1, .L37+8
 367 0062 C3F81411 		str	r1, [r3, #276]
 308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     
 368              		.loc 1 308 0
 369 0066 D3F80C11 		ldr	r1, [r3, #268]
 370 006a 41F00201 		orr	r1, r1, #2
 371 006e C3F80C11 		str	r1, [r3, #268]
 311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                 FLASH_IT_STRBERR_BANK2 | FLASH_IT_INCERR_BANK2 | FLASH_IT_OPERR_BAN
 372              		.loc 1 311 0
 373 0072 D3F80C11 		ldr	r1, [r3, #268]
 374 0076 41F4DE01 		orr	r1, r1, #7274496
 375 007a C3F80C11 		str	r1, [r3, #268]
 376 007e DCE7     		b	.L30
 377              	.LVL13:
 378              	.L32:
 379              	.LCFI3:
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 25


 380              		.cfi_def_cfa_offset 0
 381              		.cfi_restore 4
 382              		.cfi_restore 5
 270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   
 383              		.loc 1 270 0
 384 0080 0220     		movs	r0, #2
 385              	.LVL14:
 322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 386              		.loc 1 322 0
 387 0082 7047     		bx	lr
 388              	.L38:
 389              		.align	2
 390              	.L37:
 391 0084 00000000 		.word	pFlash
 392 0088 00200052 		.word	1375739904
 393 008c 0000EF07 		.word	133103616
 394              		.cfi_endproc
 395              	.LFE138:
 397              		.section	.text.HAL_FLASH_EndOfOperationCallback,"ax",%progbits
 398              		.align	1
 399              		.weak	HAL_FLASH_EndOfOperationCallback
 400              		.syntax unified
 401              		.thumb
 402              		.thumb_func
 403              		.fpu fpv5-d16
 405              	HAL_FLASH_EndOfOperationCallback:
 406              	.LFB140:
 549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 407              		.loc 1 549 0
 408              		.cfi_startproc
 409              		@ args = 0, pretend = 0, frame = 0
 410              		@ frame_needed = 0, uses_anonymous_args = 0
 411              		@ link register save eliminated.
 412              	.LVL15:
 553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 413              		.loc 1 553 0
 414 0000 7047     		bx	lr
 415              		.cfi_endproc
 416              	.LFE140:
 418              		.section	.text.HAL_FLASH_OperationErrorCallback,"ax",%progbits
 419              		.align	1
 420              		.weak	HAL_FLASH_OperationErrorCallback
 421              		.syntax unified
 422              		.thumb
 423              		.thumb_func
 424              		.fpu fpv5-d16
 426              	HAL_FLASH_OperationErrorCallback:
 427              	.LFB141:
 564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 428              		.loc 1 564 0
 429              		.cfi_startproc
 430              		@ args = 0, pretend = 0, frame = 0
 431              		@ frame_needed = 0, uses_anonymous_args = 0
 432              		@ link register save eliminated.
 433              	.LVL16:
 568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 434              		.loc 1 568 0
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 26


 435 0000 7047     		bx	lr
 436              		.cfi_endproc
 437              	.LFE141:
 439              		.section	.text.HAL_FLASH_IRQHandler,"ax",%progbits
 440              		.align	1
 441              		.global	HAL_FLASH_IRQHandler
 442              		.syntax unified
 443              		.thumb
 444              		.thumb_func
 445              		.fpu fpv5-d16
 447              	HAL_FLASH_IRQHandler:
 448              	.LFB139:
 329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t temp;
 449              		.loc 1 329 0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 0
 452              		@ frame_needed = 0, uses_anonymous_args = 0
 453 0000 10B5     		push	{r4, lr}
 454              	.LCFI4:
 455              		.cfi_def_cfa_offset 8
 456              		.cfi_offset 4, -8
 457              		.cfi_offset 14, -4
 333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 458              		.loc 1 333 0
 459 0002 924B     		ldr	r3, .L72
 460 0004 1B69     		ldr	r3, [r3, #16]
 461 0006 13F4803F 		tst	r3, #65536
 462 000a 53D0     		beq	.L42
 335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 463              		.loc 1 335 0
 464 000c 904B     		ldr	r3, .L72+4
 465 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 466 0010 DBB2     		uxtb	r3, r3
 467 0012 012B     		cmp	r3, #1
 468 0014 13D0     		beq	.L66
 369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 469              		.loc 1 369 0
 470 0016 8E4B     		ldr	r3, .L72+4
 471 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 472 001a DBB2     		uxtb	r3, r3
 473 001c 022B     		cmp	r3, #2
 474 001e 30D0     		beq	.L45
 369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 475              		.loc 1 369 0 is_stmt 0 discriminator 1
 476 0020 8B4B     		ldr	r3, .L72+4
 477 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 478 0024 DBB2     		uxtb	r3, r3
 479 0026 072B     		cmp	r3, #7
 480 0028 2BD0     		beq	.L45
 375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 481              		.loc 1 375 0 is_stmt 1
 482 002a 894B     		ldr	r3, .L72+4
 483 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 484 002e DBB2     		uxtb	r3, r3
 485 0030 032B     		cmp	r3, #3
 486 0032 29D1     		bne	.L47
 379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 27


 487              		.loc 1 379 0
 488 0034 864B     		ldr	r3, .L72+4
 489 0036 1869     		ldr	r0, [r3, #16]
 490 0038 FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 491              	.LVL17:
 492 003c 24E0     		b	.L47
 493              	.L66:
 338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 494              		.loc 1 338 0
 495 003e 844B     		ldr	r3, .L72+4
 496 0040 5A68     		ldr	r2, [r3, #4]
 497 0042 013A     		subs	r2, r2, #1
 498 0044 5A60     		str	r2, [r3, #4]
 341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 499              		.loc 1 341 0
 500 0046 5B68     		ldr	r3, [r3, #4]
 501 0048 73B1     		cbz	r3, .L44
 343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /*Indicate user which sector has been erased*/
 502              		.loc 1 343 0
 503 004a 814C     		ldr	r4, .L72+4
 504 004c E068     		ldr	r0, [r4, #12]
 505              	.LVL18:
 345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 506              		.loc 1 345 0
 507 004e FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 508              	.LVL19:
 349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 509              		.loc 1 349 0
 510 0052 7E4B     		ldr	r3, .L72
 511 0054 7F4A     		ldr	r2, .L72+8
 512 0056 5A61     		str	r2, [r3, #20]
 352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         FLASH_Erase_Sector(temp, FLASH_BANK_1/*pFlash.Bank*/, pFlash.VoltageForErase);
 513              		.loc 1 352 0
 514 0058 E068     		ldr	r0, [r4, #12]
 515 005a 0130     		adds	r0, r0, #1
 516 005c E060     		str	r0, [r4, #12]
 517              	.LVL20:
 353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 518              		.loc 1 353 0
 519 005e 227A     		ldrb	r2, [r4, #8]	@ zero_extendqisi2
 520 0060 0121     		movs	r1, #1
 521 0062 FFF7FEFF 		bl	FLASH_Erase_Sector
 522              	.LVL21:
 523 0066 25E0     		b	.L42
 524              	.L44:
 525              	.LVL22:
 359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 526              		.loc 1 359 0
 527 0068 794B     		ldr	r3, .L72+4
 528 006a 4FF0FF30 		mov	r0, #-1
 529 006e D860     		str	r0, [r3, #12]
 360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* FLASH EOP interrupt user callback */
 530              		.loc 1 360 0
 531 0070 0022     		movs	r2, #0
 532 0072 1A70     		strb	r2, [r3]
 362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Clear FLASH End of Operation pending bit */
 533              		.loc 1 362 0
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 28


 534 0074 FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 535              	.LVL23:
 364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 536              		.loc 1 364 0
 537 0078 744B     		ldr	r3, .L72
 538 007a 4FF48032 		mov	r2, #65536
 539 007e 5A61     		str	r2, [r3, #20]
 540 0080 18E0     		b	.L42
 541              	.LVL24:
 542              	.L45:
 373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 543              		.loc 1 373 0
 544 0082 0120     		movs	r0, #1
 545 0084 FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 546              	.LVL25:
 547              	.L47:
 382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****          (pFlash.ProcedureOnGoing != FLASH_PROC_MASSERASE_BANK2)&& \
 548              		.loc 1 382 0
 549 0088 714B     		ldr	r3, .L72+4
 550 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 551 008c DBB2     		uxtb	r3, r3
 552 008e 042B     		cmp	r3, #4
 553 0090 10D0     		beq	.L42
 383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****          (pFlash.ProcedureOnGoing != FLASH_PROC_PROGRAM_BANK2))
 554              		.loc 1 383 0 discriminator 1
 555 0092 6F4B     		ldr	r3, .L72+4
 556 0094 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 557 0096 DBB2     		uxtb	r3, r3
 382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****          (pFlash.ProcedureOnGoing != FLASH_PROC_MASSERASE_BANK2)&& \
 558              		.loc 1 382 0 discriminator 1
 559 0098 052B     		cmp	r3, #5
 560 009a 0BD0     		beq	.L42
 384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 561              		.loc 1 384 0
 562 009c 6C4B     		ldr	r3, .L72+4
 563 009e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 564 00a0 DBB2     		uxtb	r3, r3
 383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****          (pFlash.ProcedureOnGoing != FLASH_PROC_PROGRAM_BANK2))
 565              		.loc 1 383 0
 566 00a2 062B     		cmp	r3, #6
 567 00a4 06D0     		beq	.L42
 386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Clear FLASH End of Operation pending bit */
 568              		.loc 1 386 0
 569 00a6 6A4B     		ldr	r3, .L72+4
 570 00a8 0022     		movs	r2, #0
 571 00aa 1A70     		strb	r2, [r3]
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 572              		.loc 1 388 0
 573 00ac 674B     		ldr	r3, .L72
 574 00ae 4FF48032 		mov	r2, #65536
 575 00b2 5A61     		str	r2, [r3, #20]
 576              	.L42:
 394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 577              		.loc 1 394 0
 578 00b4 654B     		ldr	r3, .L72
 579 00b6 D3F81031 		ldr	r3, [r3, #272]
 580 00ba 13F4803F 		tst	r3, #65536
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 29


 581 00be 28D0     		beq	.L48
 396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 582              		.loc 1 396 0
 583 00c0 634B     		ldr	r3, .L72+4
 584 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 585 00c4 DBB2     		uxtb	r3, r3
 586 00c6 042B     		cmp	r3, #4
 587 00c8 44D0     		beq	.L67
 430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 588              		.loc 1 430 0
 589 00ca 614B     		ldr	r3, .L72+4
 590 00cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 591 00ce DBB2     		uxtb	r3, r3
 592 00d0 052B     		cmp	r3, #5
 593 00d2 04D0     		beq	.L51
 430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 594              		.loc 1 430 0 is_stmt 0 discriminator 1
 595 00d4 5E4B     		ldr	r3, .L72+4
 596 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 597 00d8 DBB2     		uxtb	r3, r3
 598 00da 072B     		cmp	r3, #7
 599 00dc 5ED1     		bne	.L52
 600              	.L51:
 434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 601              		.loc 1 434 0 is_stmt 1
 602 00de 0220     		movs	r0, #2
 603 00e0 FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 604              	.LVL26:
 605              	.L53:
 443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****           (pFlash.ProcedureOnGoing != FLASH_PROC_MASSERASE_BANK1)&& \
 606              		.loc 1 443 0
 607 00e4 5A4B     		ldr	r3, .L72+4
 608 00e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 609 00e8 DBB2     		uxtb	r3, r3
 610 00ea 012B     		cmp	r3, #1
 611 00ec 11D0     		beq	.L48
 444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****           (pFlash.ProcedureOnGoing != FLASH_PROC_PROGRAM_BANK1))
 612              		.loc 1 444 0 discriminator 1
 613 00ee 584B     		ldr	r3, .L72+4
 614 00f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 615 00f2 DBB2     		uxtb	r3, r3
 443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****           (pFlash.ProcedureOnGoing != FLASH_PROC_MASSERASE_BANK1)&& \
 616              		.loc 1 443 0 discriminator 1
 617 00f4 022B     		cmp	r3, #2
 618 00f6 0CD0     		beq	.L48
 445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 619              		.loc 1 445 0
 620 00f8 554B     		ldr	r3, .L72+4
 621 00fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 622 00fc DBB2     		uxtb	r3, r3
 444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****           (pFlash.ProcedureOnGoing != FLASH_PROC_PROGRAM_BANK1))
 623              		.loc 1 444 0
 624 00fe 032B     		cmp	r3, #3
 625 0100 07D0     		beq	.L48
 447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Clear FLASH End of Operation pending bit */
 626              		.loc 1 447 0
 627 0102 534B     		ldr	r3, .L72+4
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 30


 628 0104 0022     		movs	r2, #0
 629 0106 1A70     		strb	r2, [r3]
 449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 630              		.loc 1 449 0
 631 0108 504B     		ldr	r3, .L72
 632 010a 4FF48032 		mov	r2, #65536
 633 010e C3F81421 		str	r2, [r3, #276]
 634              	.L48:
 455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                  FLASH_FLAG_STRBER_BANK1R | FLASH_FLAG_INCERR_BANK1 | FLASH_FLAG_OP
 635              		.loc 1 455 0
 636 0112 4E4B     		ldr	r3, .L72
 637 0114 1B69     		ldr	r3, [r3, #16]
 638 0116 03F4DE03 		and	r3, r3, #7274496
 639 011a B3F5DE0F 		cmp	r3, #7274496
 640 011e 42D0     		beq	.L68
 641              	.L54:
 489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                  FLASH_FLAG_STRBER_BANK2R | FLASH_FLAG_INCERR_BANK2 | FLASH_FLAG_OP
 642              		.loc 1 489 0
 643 0120 4A4B     		ldr	r3, .L72
 644 0122 D3F81031 		ldr	r3, [r3, #272]
 645 0126 03F4DE03 		and	r3, r3, #7274496
 646 012a B3F5DE0F 		cmp	r3, #7274496
 647 012e 63D0     		beq	.L69
 648              	.L57:
 523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 649              		.loc 1 523 0
 650 0130 474B     		ldr	r3, .L72+4
 651 0132 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 652 0134 6BB9     		cbnz	r3, .L41
 526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                  FLASH_IT_STRBERR_BANK1 | FLASH_IT_INCERR_BANK1 | FLASH_IT_OPERR_BA
 653              		.loc 1 526 0
 654 0136 454B     		ldr	r3, .L72
 655 0138 DA68     		ldr	r2, [r3, #12]
 656 013a 22F4DE02 		bic	r2, r2, #7274496
 657 013e DA60     		str	r2, [r3, #12]
 530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                  FLASH_IT_STRBERR_BANK2 | FLASH_IT_INCERR_BANK2 | FLASH_IT_OPERR_BA
 658              		.loc 1 530 0
 659 0140 D3F80C21 		ldr	r2, [r3, #268]
 660 0144 22F4DE02 		bic	r2, r2, #7274496
 661 0148 C3F80C21 		str	r2, [r3, #268]
 534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 662              		.loc 1 534 0
 663 014c 404B     		ldr	r3, .L72+4
 664 014e 0022     		movs	r2, #0
 665 0150 1A75     		strb	r2, [r3, #20]
 666              	.L41:
 537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 667              		.loc 1 537 0
 668 0152 10BD     		pop	{r4, pc}
 669              	.L67:
 399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 670              		.loc 1 399 0
 671 0154 3E4B     		ldr	r3, .L72+4
 672 0156 5A68     		ldr	r2, [r3, #4]
 673 0158 013A     		subs	r2, r2, #1
 674 015a 5A60     		str	r2, [r3, #4]
 402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 31


 675              		.loc 1 402 0
 676 015c 5B68     		ldr	r3, [r3, #4]
 677 015e 7BB1     		cbz	r3, .L50
 404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /*Indicate user which sector has been erased*/
 678              		.loc 1 404 0
 679 0160 3B4C     		ldr	r4, .L72+4
 680 0162 E068     		ldr	r0, [r4, #12]
 681              	.LVL27:
 406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 682              		.loc 1 406 0
 683 0164 FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 684              	.LVL28:
 410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 685              		.loc 1 410 0
 686 0168 384B     		ldr	r3, .L72
 687 016a 3A4A     		ldr	r2, .L72+8
 688 016c C3F81421 		str	r2, [r3, #276]
 413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         FLASH_Erase_Sector(temp, FLASH_BANK_2 /*pFlash.Bank*/, pFlash.VoltageForErase);
 689              		.loc 1 413 0
 690 0170 E068     		ldr	r0, [r4, #12]
 691 0172 0130     		adds	r0, r0, #1
 692 0174 E060     		str	r0, [r4, #12]
 693              	.LVL29:
 414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 694              		.loc 1 414 0
 695 0176 227A     		ldrb	r2, [r4, #8]	@ zero_extendqisi2
 696 0178 0221     		movs	r1, #2
 697 017a FFF7FEFF 		bl	FLASH_Erase_Sector
 698              	.LVL30:
 699 017e C8E7     		b	.L48
 700              	.L50:
 701              	.LVL31:
 420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 702              		.loc 1 420 0
 703 0180 334B     		ldr	r3, .L72+4
 704 0182 4FF0FF30 		mov	r0, #-1
 705 0186 D860     		str	r0, [r3, #12]
 421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* FLASH EOP interrupt user callback */
 706              		.loc 1 421 0
 707 0188 0022     		movs	r2, #0
 708 018a 1A70     		strb	r2, [r3]
 423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Clear FLASH End of Operation pending bit */
 709              		.loc 1 423 0
 710 018c FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 711              	.LVL32:
 425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 712              		.loc 1 425 0
 713 0190 2E4B     		ldr	r3, .L72
 714 0192 4FF48032 		mov	r2, #65536
 715 0196 C3F81421 		str	r2, [r3, #276]
 716 019a BAE7     		b	.L48
 717              	.LVL33:
 718              	.L52:
 440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 719              		.loc 1 440 0
 720 019c 2C4B     		ldr	r3, .L72+4
 721 019e 1869     		ldr	r0, [r3, #16]
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 32


 722 01a0 FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 723              	.LVL34:
 724 01a4 9EE7     		b	.L53
 725              	.L68:
 458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 726              		.loc 1 458 0
 727 01a6 2A4B     		ldr	r3, .L72+4
 728 01a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 729 01aa DBB2     		uxtb	r3, r3
 730 01ac 012B     		cmp	r3, #1
 731 01ae 0CD0     		beq	.L70
 464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 732              		.loc 1 464 0
 733 01b0 274B     		ldr	r3, .L72+4
 734 01b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 735 01b4 DBB2     		uxtb	r3, r3
 736 01b6 022B     		cmp	r3, #2
 737 01b8 1AD0     		beq	.L61
 464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 738              		.loc 1 464 0 is_stmt 0 discriminator 1
 739 01ba 254B     		ldr	r3, .L72+4
 740 01bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 741 01be DBB2     		uxtb	r3, r3
 742 01c0 072B     		cmp	r3, #7
 743 01c2 17D0     		beq	.L62
 472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 744              		.loc 1 472 0 is_stmt 1
 745 01c4 224B     		ldr	r3, .L72+4
 746 01c6 1C69     		ldr	r4, [r3, #16]
 747              	.LVL35:
 748 01c8 04E0     		b	.L56
 749              	.LVL36:
 750              	.L70:
 461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.Sector = 0xFFFFFFFF;
 751              		.loc 1 461 0
 752 01ca 214B     		ldr	r3, .L72+4
 753 01cc DC68     		ldr	r4, [r3, #12]
 754              	.LVL37:
 462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 755              		.loc 1 462 0
 756 01ce 4FF0FF32 		mov	r2, #-1
 757 01d2 DA60     		str	r2, [r3, #12]
 758              	.LVL38:
 759              	.L56:
 476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 760              		.loc 1 476 0
 761 01d4 0120     		movs	r0, #1
 762 01d6 FFF7FEFF 		bl	FLASH_SetErrorCode
 763              	.LVL39:
 479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Clear FLASH error pending bits */
 764              		.loc 1 479 0
 765 01da 2046     		mov	r0, r4
 766 01dc FFF7FEFF 		bl	HAL_FLASH_OperationErrorCallback
 767              	.LVL40:
 481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                   FLASH_FLAG_STRBER_BANK1R | FLASH_FLAG_INCERR_BANK1 | FLASH_FLAG_O
 768              		.loc 1 481 0
 769 01e0 1A4B     		ldr	r3, .L72
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 33


 770 01e2 4FF4DE02 		mov	r2, #7274496
 771 01e6 5A61     		str	r2, [r3, #20]
 485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 772              		.loc 1 485 0
 773 01e8 194B     		ldr	r3, .L72+4
 774 01ea 0022     		movs	r2, #0
 775 01ec 1A70     		strb	r2, [r3]
 776 01ee 97E7     		b	.L54
 777              	.LVL41:
 778              	.L61:
 467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 779              		.loc 1 467 0
 780 01f0 0124     		movs	r4, #1
 781 01f2 EFE7     		b	.L56
 782              	.L62:
 783 01f4 0124     		movs	r4, #1
 784 01f6 EDE7     		b	.L56
 785              	.L69:
 493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 786              		.loc 1 493 0
 787 01f8 154B     		ldr	r3, .L72+4
 788 01fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 789 01fc DBB2     		uxtb	r3, r3
 790 01fe 042B     		cmp	r3, #4
 791 0200 0CD0     		beq	.L71
 499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 792              		.loc 1 499 0
 793 0202 134B     		ldr	r3, .L72+4
 794 0204 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 795 0206 DBB2     		uxtb	r3, r3
 796 0208 052B     		cmp	r3, #5
 797 020a 1BD0     		beq	.L63
 499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 798              		.loc 1 499 0 is_stmt 0 discriminator 1
 799 020c 104B     		ldr	r3, .L72+4
 800 020e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 801 0210 DBB2     		uxtb	r3, r3
 802 0212 072B     		cmp	r3, #7
 803 0214 18D0     		beq	.L64
 507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 804              		.loc 1 507 0 is_stmt 1
 805 0216 0E4B     		ldr	r3, .L72+4
 806 0218 1C69     		ldr	r4, [r3, #16]
 807              	.LVL42:
 808 021a 04E0     		b	.L59
 809              	.LVL43:
 810              	.L71:
 496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.Sector = 0xFFFFFFFF;
 811              		.loc 1 496 0
 812 021c 0C4B     		ldr	r3, .L72+4
 813 021e DC68     		ldr	r4, [r3, #12]
 814              	.LVL44:
 497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 815              		.loc 1 497 0
 816 0220 4FF0FF32 		mov	r2, #-1
 817 0224 DA60     		str	r2, [r3, #12]
 818              	.LVL45:
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 34


 819              	.L59:
 511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 820              		.loc 1 511 0
 821 0226 0220     		movs	r0, #2
 822 0228 FFF7FEFF 		bl	FLASH_SetErrorCode
 823              	.LVL46:
 514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Clear FLASH error pending bits */
 824              		.loc 1 514 0
 825 022c 2046     		mov	r0, r4
 826 022e FFF7FEFF 		bl	HAL_FLASH_OperationErrorCallback
 827              	.LVL47:
 516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                   FLASH_FLAG_STRBER_BANK2R | FLASH_FLAG_INCERR_BANK2 |   FLASH_FLAG
 828              		.loc 1 516 0
 829 0232 064B     		ldr	r3, .L72
 830 0234 4FF4DE02 		mov	r2, #7274496
 831 0238 C3F81421 		str	r2, [r3, #276]
 520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }  
 832              		.loc 1 520 0
 833 023c 044B     		ldr	r3, .L72+4
 834 023e 0022     		movs	r2, #0
 835 0240 1A70     		strb	r2, [r3]
 836 0242 75E7     		b	.L57
 837              	.LVL48:
 838              	.L63:
 502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 839              		.loc 1 502 0
 840 0244 0224     		movs	r4, #2
 841 0246 EEE7     		b	.L59
 842              	.L64:
 843 0248 0224     		movs	r4, #2
 844 024a ECE7     		b	.L59
 845              	.L73:
 846              		.align	2
 847              	.L72:
 848 024c 00200052 		.word	1375739904
 849 0250 00000000 		.word	pFlash
 850 0254 0000EF07 		.word	133103616
 851              		.cfi_endproc
 852              	.LFE139:
 854              		.section	.text.HAL_FLASH_Unlock,"ax",%progbits
 855              		.align	1
 856              		.global	HAL_FLASH_Unlock
 857              		.syntax unified
 858              		.thumb
 859              		.thumb_func
 860              		.fpu fpv5-d16
 862              	HAL_FLASH_Unlock:
 863              	.LFB142:
 594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if((READ_BIT(FLASH->CR1, FLASH_CR_LOCK) != RESET) && (READ_BIT(FLASH->CR2, FLASH_CR_LOCK) != RESE
 864              		.loc 1 594 0
 865              		.cfi_startproc
 866              		@ args = 0, pretend = 0, frame = 0
 867              		@ frame_needed = 0, uses_anonymous_args = 0
 868              		@ link register save eliminated.
 595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 869              		.loc 1 595 0
 870 0000 0C4B     		ldr	r3, .L78
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 35


 871 0002 DB68     		ldr	r3, [r3, #12]
 872 0004 13F0010F 		tst	r3, #1
 873 0008 10D0     		beq	.L76
 595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 874              		.loc 1 595 0 is_stmt 0 discriminator 1
 875 000a 0A4B     		ldr	r3, .L78
 876 000c D3F80C31 		ldr	r3, [r3, #268]
 877 0010 13F0010F 		tst	r3, #1
 878 0014 0CD0     		beq	.L77
 598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     WRITE_REG(FLASH->KEYR1, FLASH_KEY2);
 879              		.loc 1 598 0 is_stmt 1
 880 0016 074B     		ldr	r3, .L78
 881 0018 0749     		ldr	r1, .L78+4
 882 001a 5960     		str	r1, [r3, #4]
 599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   
 883              		.loc 1 599 0
 884 001c 074A     		ldr	r2, .L78+8
 885 001e 5A60     		str	r2, [r3, #4]
 602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     WRITE_REG(FLASH->KEYR2, FLASH_KEY2);
 886              		.loc 1 602 0
 887 0020 C3F80411 		str	r1, [r3, #260]
 603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 888              		.loc 1 603 0
 889 0024 C3F80421 		str	r2, [r3, #260]
 610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 890              		.loc 1 610 0
 891 0028 0020     		movs	r0, #0
 892 002a 7047     		bx	lr
 893              	.L76:
 607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 894              		.loc 1 607 0
 895 002c 0120     		movs	r0, #1
 896 002e 7047     		bx	lr
 897              	.L77:
 898 0030 0120     		movs	r0, #1
 611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 899              		.loc 1 611 0
 900 0032 7047     		bx	lr
 901              	.L79:
 902              		.align	2
 903              	.L78:
 904 0034 00200052 		.word	1375739904
 905 0038 23016745 		.word	1164378403
 906 003c AB89EFCD 		.word	-839939669
 907              		.cfi_endproc
 908              	.LFE142:
 910              		.section	.text.HAL_FLASH_Lock,"ax",%progbits
 911              		.align	1
 912              		.global	HAL_FLASH_Lock
 913              		.syntax unified
 914              		.thumb
 915              		.thumb_func
 916              		.fpu fpv5-d16
 918              	HAL_FLASH_Lock:
 919              	.LFB143:
 618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Set the LOCK Bit to lock the FLASH A Registers access */
 920              		.loc 1 618 0
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 36


 921              		.cfi_startproc
 922              		@ args = 0, pretend = 0, frame = 0
 923              		@ frame_needed = 0, uses_anonymous_args = 0
 924              		@ link register save eliminated.
 620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   
 925              		.loc 1 620 0
 926 0000 064B     		ldr	r3, .L81
 927 0002 DA68     		ldr	r2, [r3, #12]
 928 0004 42F00102 		orr	r2, r2, #1
 929 0008 DA60     		str	r2, [r3, #12]
 623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   
 930              		.loc 1 623 0
 931 000a D3F80C21 		ldr	r2, [r3, #268]
 932 000e 42F00102 		orr	r2, r2, #1
 933 0012 C3F80C21 		str	r2, [r3, #268]
 626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 934              		.loc 1 626 0
 935 0016 0020     		movs	r0, #0
 936 0018 7047     		bx	lr
 937              	.L82:
 938 001a 00BF     		.align	2
 939              	.L81:
 940 001c 00200052 		.word	1375739904
 941              		.cfi_endproc
 942              	.LFE143:
 944              		.section	.text.HAL_FLASH_OB_Unlock,"ax",%progbits
 945              		.align	1
 946              		.global	HAL_FLASH_OB_Unlock
 947              		.syntax unified
 948              		.thumb
 949              		.thumb_func
 950              		.fpu fpv5-d16
 952              	HAL_FLASH_OB_Unlock:
 953              	.LFB144:
 633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(READ_BIT(FLASH->OPTCR, FLASH_OPTCR_OPTLOCK) != RESET)
 954              		.loc 1 633 0
 955              		.cfi_startproc
 956              		@ args = 0, pretend = 0, frame = 0
 957              		@ frame_needed = 0, uses_anonymous_args = 0
 958              		@ link register save eliminated.
 634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 959              		.loc 1 634 0
 960 0000 074B     		ldr	r3, .L86
 961 0002 9B69     		ldr	r3, [r3, #24]
 962 0004 13F0010F 		tst	r3, #1
 963 0008 07D0     		beq	.L85
 637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     WRITE_REG(FLASH->OPTKEYR, FLASH_OPT_KEY2);
 964              		.loc 1 637 0
 965 000a 054B     		ldr	r3, .L86
 966 000c 054A     		ldr	r2, .L86+4
 967 000e 9A60     		str	r2, [r3, #8]
 638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 968              		.loc 1 638 0
 969 0010 02F14432 		add	r2, r2, #1145324612
 970 0014 9A60     		str	r2, [r3, #8]
 645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 971              		.loc 1 645 0
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 37


 972 0016 0020     		movs	r0, #0
 973 0018 7047     		bx	lr
 974              	.L85:
 642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }  
 975              		.loc 1 642 0
 976 001a 0120     		movs	r0, #1
 646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 977              		.loc 1 646 0
 978 001c 7047     		bx	lr
 979              	.L87:
 980 001e 00BF     		.align	2
 981              	.L86:
 982 0020 00200052 		.word	1375739904
 983 0024 3B2A1908 		.word	135866939
 984              		.cfi_endproc
 985              	.LFE144:
 987              		.section	.text.HAL_FLASH_OB_Lock,"ax",%progbits
 988              		.align	1
 989              		.global	HAL_FLASH_OB_Lock
 990              		.syntax unified
 991              		.thumb
 992              		.thumb_func
 993              		.fpu fpv5-d16
 995              	HAL_FLASH_OB_Lock:
 996              	.LFB145:
 653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Set the OPTLOCK Bit to lock the FLASH A and B Option Byte Registers access */
 997              		.loc 1 653 0
 998              		.cfi_startproc
 999              		@ args = 0, pretend = 0, frame = 0
 1000              		@ frame_needed = 0, uses_anonymous_args = 0
 1001              		@ link register save eliminated.
 655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   
 1002              		.loc 1 655 0
 1003 0000 034A     		ldr	r2, .L89
 1004 0002 9369     		ldr	r3, [r2, #24]
 1005 0004 43F00103 		orr	r3, r3, #1
 1006 0008 9361     		str	r3, [r2, #24]
 658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1007              		.loc 1 658 0
 1008 000a 0020     		movs	r0, #0
 1009 000c 7047     		bx	lr
 1010              	.L90:
 1011 000e 00BF     		.align	2
 1012              	.L89:
 1013 0010 00200052 		.word	1375739904
 1014              		.cfi_endproc
 1015              	.LFE145:
 1017              		.section	.text.HAL_FLASH_GetError,"ax",%progbits
 1018              		.align	1
 1019              		.global	HAL_FLASH_GetError
 1020              		.syntax unified
 1021              		.thumb
 1022              		.thumb_func
 1023              		.fpu fpv5-d16
 1025              	HAL_FLASH_GetError:
 1026              	.LFB147:
 722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****    return pFlash.ErrorCode;
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 38


 1027              		.loc 1 722 0
 1028              		.cfi_startproc
 1029              		@ args = 0, pretend = 0, frame = 0
 1030              		@ frame_needed = 0, uses_anonymous_args = 0
 1031              		@ link register save eliminated.
 723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 1032              		.loc 1 723 0
 1033 0000 014B     		ldr	r3, .L92
 1034 0002 9869     		ldr	r0, [r3, #24]
 724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1035              		.loc 1 724 0
 1036 0004 7047     		bx	lr
 1037              	.L93:
 1038 0006 00BF     		.align	2
 1039              	.L92:
 1040 0008 00000000 		.word	pFlash
 1041              		.cfi_endproc
 1042              	.LFE147:
 1044              		.section	.text.FLASH_WaitForLastOperation,"ax",%progbits
 1045              		.align	1
 1046              		.global	FLASH_WaitForLastOperation
 1047              		.syntax unified
 1048              		.thumb
 1049              		.thumb_func
 1050              		.fpu fpv5-d16
 1052              	FLASH_WaitForLastOperation:
 1053              	.LFB148:
 741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Wait for the FLASH operation to complete by polling on BUSY flag to be reset.
 1054              		.loc 1 741 0
 1055              		.cfi_startproc
 1056              		@ args = 0, pretend = 0, frame = 0
 1057              		@ frame_needed = 0, uses_anonymous_args = 0
 1058              	.LVL49:
 1059 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1060              	.LCFI5:
 1061              		.cfi_def_cfa_offset 24
 1062              		.cfi_offset 3, -24
 1063              		.cfi_offset 4, -20
 1064              		.cfi_offset 5, -16
 1065              		.cfi_offset 6, -12
 1066              		.cfi_offset 7, -8
 1067              		.cfi_offset 14, -4
 1068 0002 0546     		mov	r5, r0
 1069 0004 0E46     		mov	r6, r1
 1070              	.LVL50:
 747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   
 1071              		.loc 1 747 0
 1072 0006 FFF7FEFF 		bl	HAL_GetTick
 1073              	.LVL51:
 1074 000a 4719     		adds	r7, r0, r5
 1075              	.LVL52:
 751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1076              		.loc 1 751 0
 1077 000c 012E     		cmp	r6, #1
 1078 000e 03D0     		beq	.L112
 1079              	.LVL53:
 768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 39


 1080              		.loc 1 768 0
 1081 0010 284B     		ldr	r3, .L120
 1082 0012 9B69     		ldr	r3, [r3, #24]
 770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 1083              		.loc 1 770 0
 1084 0014 284C     		ldr	r4, .L120+4
 1085 0016 18E0     		b	.L98
 1086              	.LVL54:
 1087              	.L112:
 755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 1088              		.loc 1 755 0
 1089 0018 264B     		ldr	r3, .L120
 1090 001a 9B69     		ldr	r3, [r3, #24]
 1091 001c 002B     		cmp	r3, #0
 1092 001e 01DB     		blt	.L113
 757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 1093              		.loc 1 757 0
 1094 0020 0724     		movs	r4, #7
 1095 0022 12E0     		b	.L98
 1096              	.L113:
 761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }      
 1097              		.loc 1 761 0
 1098 0024 244C     		ldr	r4, .L120+4
 1099 0026 10E0     		b	.L98
 1100              	.LVL55:
 1101              	.L115:
 782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 1102              		.loc 1 782 0
 1103 0028 FFF7FEFF 		bl	HAL_GetTick
 1104              	.LVL56:
 1105 002c B842     		cmp	r0, r7
 1106 002e 0CD3     		bcc	.L98
 784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 1107              		.loc 1 784 0
 1108 0030 0320     		movs	r0, #3
 1109 0032 1DE0     		b	.L99
 1110              	.L116:
 778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   { 
 1111              		.loc 1 778 0 discriminator 1
 1112 0034 1F4B     		ldr	r3, .L120
 1113 0036 1B69     		ldr	r3, [r3, #16]
 1114 0038 34EA0303 		bics	r3, r4, r3
 1115 003c 0CBF     		ite	eq
 1116 003e 0123     		moveq	r3, #1
 1117 0040 0023     		movne	r3, #0
 1118              	.L102:
 778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   { 
 1119              		.loc 1 778 0 is_stmt 0 discriminator 4
 1120 0042 83B1     		cbz	r3, .L114
 780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 1121              		.loc 1 780 0 is_stmt 1
 1122 0044 B5F1FF3F 		cmp	r5, #-1
 1123 0048 EED1     		bne	.L115
 1124              	.LVL57:
 1125              	.L98:
 778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   { 
 1126              		.loc 1 778 0
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 40


 1127 004a 34F00703 		bics	r3, r4, #7
 1128 004e F1D0     		beq	.L116
 778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   { 
 1129              		.loc 1 778 0 is_stmt 0 discriminator 2
 1130 0050 184B     		ldr	r3, .L120
 1131 0052 D3F81031 		ldr	r3, [r3, #272]
 1132 0056 24EA0303 		bic	r3, r4, r3
 1133 005a 33F00043 		bics	r3, r3, #-2147483648
 1134 005e 0CBF     		ite	eq
 1135 0060 0123     		moveq	r3, #1
 1136 0062 0023     		movne	r3, #0
 1137 0064 EDE7     		b	.L102
 1138              	.L114:
 789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1139              		.loc 1 789 0 is_stmt 1
 1140 0066 012E     		cmp	r6, #1
 1141 0068 03D0     		beq	.L117
 1142              	.L104:
 793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1143              		.loc 1 793 0
 1144 006a 022E     		cmp	r6, #2
 1145 006c 13D0     		beq	.L118
 810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 1146              		.loc 1 810 0
 1147 006e 0020     		movs	r0, #0
 1148              	.LVL58:
 1149              	.L99:
 811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1150              		.loc 1 811 0
 1151 0070 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1152              	.LVL59:
 1153              	.L117:
 789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1154              		.loc 1 789 0 discriminator 1
 1155 0072 104B     		ldr	r3, .L120
 1156 0074 1A69     		ldr	r2, [r3, #16]
 1157 0076 114B     		ldr	r3, .L120+8
 1158 0078 1A42     		tst	r2, r3
 1159 007a F6D0     		beq	.L104
 791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1160              		.loc 1 791 0
 1161 007c 0F4C     		ldr	r4, .L120+8
 1162              	.LVL60:
 1163              	.L105:
 801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     
 1164              		.loc 1 801 0
 1165 007e 3046     		mov	r0, r6
 1166 0080 FFF7FEFF 		bl	FLASH_SetErrorCode
 1167              	.LVL61:
 804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1168              		.loc 1 804 0
 1169 0084 002C     		cmp	r4, #0
 1170 0086 0EDA     		bge	.L119
 804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1171              		.loc 1 804 0 is_stmt 0 discriminator 2
 1172 0088 24F00044 		bic	r4, r4, #-2147483648
 1173 008c 094B     		ldr	r3, .L120
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 41


 1174 008e C3F81441 		str	r4, [r3, #276]
 806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1175              		.loc 1 806 0 is_stmt 1 discriminator 2
 1176 0092 0120     		movs	r0, #1
 1177 0094 ECE7     		b	.L99
 1178              	.LVL62:
 1179              	.L118:
 793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1180              		.loc 1 793 0 discriminator 1
 1181 0096 074B     		ldr	r3, .L120
 1182 0098 D3F81021 		ldr	r2, [r3, #272]
 1183 009c 074B     		ldr	r3, .L120+8
 1184 009e 1A42     		tst	r2, r3
 1185 00a0 05D0     		beq	.L110
 795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1186              		.loc 1 795 0
 1187 00a2 074C     		ldr	r4, .L120+12
 1188              	.LVL63:
 1189 00a4 EBE7     		b	.L105
 1190              	.L119:
 804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1191              		.loc 1 804 0 discriminator 1
 1192 00a6 034B     		ldr	r3, .L120
 1193 00a8 5C61     		str	r4, [r3, #20]
 806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1194              		.loc 1 806 0 discriminator 1
 1195 00aa 0120     		movs	r0, #1
 1196 00ac E0E7     		b	.L99
 1197              	.LVL64:
 1198              	.L110:
 810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 1199              		.loc 1 810 0
 1200 00ae 0020     		movs	r0, #0
 1201 00b0 DEE7     		b	.L99
 1202              	.L121:
 1203 00b2 00BF     		.align	2
 1204              	.L120:
 1205 00b4 00200052 		.word	1375739904
 1206 00b8 07000080 		.word	-2147483641
 1207 00bc 0000EE07 		.word	133038080
 1208 00c0 0000EE87 		.word	-2014445568
 1209              		.cfi_endproc
 1210              	.LFE148:
 1212              		.section	.text.HAL_FLASH_Program,"ax",%progbits
 1213              		.align	1
 1214              		.global	HAL_FLASH_Program
 1215              		.syntax unified
 1216              		.thumb
 1217              		.thumb_func
 1218              		.fpu fpv5-d16
 1220              	HAL_FLASH_Program:
 1221              	.LFB137:
 164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 1222              		.loc 1 164 0
 1223              		.cfi_startproc
 1224              		@ args = 0, pretend = 0, frame = 0
 1225              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 42


 1226              	.LVL65:
 172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1227              		.loc 1 172 0
 1228 0000 354B     		ldr	r3, .L140
 1229 0002 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 1230 0004 012B     		cmp	r3, #1
 1231 0006 63D0     		beq	.L132
 164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 1232              		.loc 1 164 0 discriminator 2
 1233 0008 70B5     		push	{r4, r5, r6, lr}
 1234              	.LCFI6:
 1235              		.cfi_def_cfa_offset 16
 1236              		.cfi_offset 4, -16
 1237              		.cfi_offset 5, -12
 1238              		.cfi_offset 6, -8
 1239              		.cfi_offset 14, -4
 1240 000a 0D46     		mov	r5, r1
 1241 000c 1446     		mov	r4, r2
 172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1242              		.loc 1 172 0 discriminator 2
 1243 000e 324B     		ldr	r3, .L140
 1244 0010 0122     		movs	r2, #1
 1245              	.LVL66:
 1246 0012 1A75     		strb	r2, [r3, #20]
 178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1247              		.loc 1 178 0 discriminator 2
 1248 0014 01F17841 		add	r1, r1, #-134217728
 1249              	.LVL67:
 1250 0018 B1F5801F 		cmp	r1, #1048576
 1251 001c 3FD2     		bcs	.L133
 180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1252              		.loc 1 180 0
 1253 001e 1646     		mov	r6, r2
 1254              	.L124:
 1255              	.LVL68:
 188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   
 1256              		.loc 1 188 0
 1257 0020 3146     		mov	r1, r6
 1258 0022 4CF25030 		movw	r0, #50000
 1259              	.LVL69:
 1260 0026 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1261              	.LVL70:
 190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1262              		.loc 1 190 0
 1263 002a 0346     		mov	r3, r0
 1264 002c 90BB     		cbnz	r0, .L125
 192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 1265              		.loc 1 192 0
 1266 002e 012E     		cmp	r6, #1
 1267 0030 37D0     		beq	.L138
 203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   
 1268              		.loc 1 203 0
 1269 0032 2A4B     		ldr	r3, .L140+4
 1270 0034 2A4A     		ldr	r2, .L140+8
 1271 0036 C3F81421 		str	r2, [r3, #276]
 206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 1272              		.loc 1 206 0
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 43


 1273 003a D3F80C21 		ldr	r2, [r3, #268]
 1274 003e 42F00202 		orr	r2, r2, #2
 1275 0042 C3F80C21 		str	r2, [r3, #268]
 1276              	.L127:
 184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1277              		.loc 1 184 0 discriminator 1
 1278 0046 0423     		movs	r3, #4
 1279              	.LVL71:
 1280              	.L128:
 212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     } while (--row_index != 0);
 1281              		.loc 1 212 0 discriminator 1
 1282 0048 D4E90001 		ldrd	r0, [r4]
 1283 004c C5E90001 		strd	r0, [r5]
 213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1284              		.loc 1 213 0 discriminator 1
 1285 0050 013B     		subs	r3, r3, #1
 1286              	.LVL72:
 212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     } while (--row_index != 0);
 1287              		.loc 1 212 0 discriminator 1
 1288 0052 0835     		adds	r5, r5, #8
 1289              	.LVL73:
 1290 0054 0834     		adds	r4, r4, #8
 1291              	.LVL74:
 213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1292              		.loc 1 213 0 discriminator 1
 1293 0056 13F0FF03 		ands	r3, r3, #255
 1294              	.LVL75:
 1295 005a F5D1     		bne	.L128
 1296              	.LBB4:
 1297              	.LBB5:
 1298              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     02. February 2017
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2017 ARM Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 44


  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                     __asm
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  39:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                  inline
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  41:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  44:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  45:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  47:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  48:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                    __attribute__((used))
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  50:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  51:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  53:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wpacked"
  56:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wattributes"
  57:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic pop
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT           struct __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  71:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  72:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  73:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  83:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 45


  84:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  85:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  87:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  88:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  89:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  93:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  95:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  97:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  98:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  99:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 100:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 101:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 102:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 105:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
 106:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 109:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 110:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 114:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 116:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 118:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 119:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 126:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 127:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 128:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 132:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 136:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 138:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 139:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 46


 141:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 142:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 147:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 148:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 153:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 160:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 169:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 172:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 175:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 184:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 185:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 186:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 197:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 47


 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 199:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 214:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 220:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 228:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 231:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 232:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 238:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 242:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 246:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 247:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 48


 255:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 272:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 276:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 281:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 288:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 291:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 293:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 294:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 297:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 49


 312:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 326:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 334:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 335:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 336:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 337:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 338:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 340:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 342:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 347:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 352:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 358:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 364:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 365:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 50


 369:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 370:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 373:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 374:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 376:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 380:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 382:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 406:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 409:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 411:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 412:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 423:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 425:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 51


 426:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 432:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 434:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 437:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 438:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 449:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 463:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 467:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 475:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 478:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 482:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 52


 483:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 487:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 488:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 489:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 490:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 494:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 505:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 515:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 517:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 524:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 526:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 527:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 528:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 530:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 532:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 533:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 536:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 538:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 539:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 53


 540:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 543:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 544:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 545:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 546:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 547:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 559:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 560:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 561:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 565:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 566:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 569:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 570:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 571:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 572:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 576:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 581:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 586:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 588:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 589:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 591:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 593:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 595:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 54


 597:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 600:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 601:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 602:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 606:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 607:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 612:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 614:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 617:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 620:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 623:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 626:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 630:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 631:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 635:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 641:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 642:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 643:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(0U);
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 55


 654:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 659:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 662:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 663:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 666:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 673:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 675:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 676:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 677:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 679:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 686:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 687:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 688:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 689:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 691:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 692:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** //{
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** //  __ASM volatile ("nop");
 697:Drivers/CMSIS/Include/cmsis_gcc.h **** //}
 698:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 705:Drivers/CMSIS/Include/cmsis_gcc.h **** //{
 706:Drivers/CMSIS/Include/cmsis_gcc.h **** //  __ASM volatile ("wfi");
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** //}
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 709:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 710:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 56


 711:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 717:Drivers/CMSIS/Include/cmsis_gcc.h **** //{
 718:Drivers/CMSIS/Include/cmsis_gcc.h **** //  __ASM volatile ("wfe");
 719:Drivers/CMSIS/Include/cmsis_gcc.h **** //}
 720:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 725:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 728:Drivers/CMSIS/Include/cmsis_gcc.h **** //{
 729:Drivers/CMSIS/Include/cmsis_gcc.h **** //  __ASM volatile ("sev");
 730:Drivers/CMSIS/Include/cmsis_gcc.h **** //}
 731:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 740:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 741:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 743:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 744:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 745:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 747:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 748:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 751:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 753:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 1299              		.loc 2 753 0
 1300              		.syntax unified
 1301              	@ 753 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1302 005c BFF34F8F 		dsb 0xF
 1303              	@ 0 "" 2
 1304              		.thumb
 1305              		.syntax unified
 1306              	.LBE5:
 1307              	.LBE4:
 218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     
 1308              		.loc 1 218 0
 1309 0060 3146     		mov	r1, r6
 1310 0062 4CF25030 		movw	r0, #50000
 1311 0066 FFF7FEFF 		bl	FLASH_WaitForLastOperation
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 57


 1312              	.LVL76:
 1313 006a 0346     		mov	r3, r0
 1314              	.LVL77:
 220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 1315              		.loc 1 220 0
 1316 006c 012E     		cmp	r6, #1
 1317 006e 20D0     		beq	.L139
 235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 1318              		.loc 1 235 0
 1319 0070 1A4A     		ldr	r2, .L140+4
 1320 0072 D2F81021 		ldr	r2, [r2, #272]
 1321 0076 12F4803F 		tst	r2, #65536
 1322 007a 04D0     		beq	.L131
 238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 1323              		.loc 1 238 0
 1324 007c 174A     		ldr	r2, .L140+4
 1325 007e 4FF48031 		mov	r1, #65536
 1326 0082 C2F81411 		str	r1, [r2, #276]
 1327              	.L131:
 242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 1328              		.loc 1 242 0
 1329 0086 1549     		ldr	r1, .L140+4
 1330 0088 D1F80C21 		ldr	r2, [r1, #268]
 1331 008c 22F00202 		bic	r2, r2, #2
 1332 0090 C1F80C21 		str	r2, [r1, #268]
 1333              	.LVL78:
 1334              	.L125:
 247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1335              		.loc 1 247 0
 1336 0094 104A     		ldr	r2, .L140
 1337 0096 0021     		movs	r1, #0
 1338 0098 1175     		strb	r1, [r2, #20]
 250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1339              		.loc 1 250 0
 1340 009a 1846     		mov	r0, r3
 1341 009c 70BD     		pop	{r4, r5, r6, pc}
 1342              	.LVL79:
 1343              	.L133:
 184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1344              		.loc 1 184 0
 1345 009e 0226     		movs	r6, #2
 1346 00a0 BEE7     		b	.L124
 1347              	.LVL80:
 1348              	.L138:
 195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   
 1349              		.loc 1 195 0
 1350 00a2 0E4B     		ldr	r3, .L140+4
 1351 00a4 0E4A     		ldr	r2, .L140+8
 1352 00a6 5A61     		str	r2, [r3, #20]
 198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 1353              		.loc 1 198 0
 1354 00a8 DA68     		ldr	r2, [r3, #12]
 1355 00aa 42F00202 		orr	r2, r2, #2
 1356 00ae DA60     		str	r2, [r3, #12]
 1357 00b0 C9E7     		b	.L127
 1358              	.LVL81:
 1359              	.L139:
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 58


 223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 1360              		.loc 1 223 0
 1361 00b2 0A4A     		ldr	r2, .L140+4
 1362 00b4 1269     		ldr	r2, [r2, #16]
 1363 00b6 12F4803F 		tst	r2, #65536
 1364 00ba 03D0     		beq	.L130
 226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 1365              		.loc 1 226 0
 1366 00bc 074A     		ldr	r2, .L140+4
 1367 00be 4FF48031 		mov	r1, #65536
 1368 00c2 5161     		str	r1, [r2, #20]
 1369              	.L130:
 230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 1370              		.loc 1 230 0
 1371 00c4 0549     		ldr	r1, .L140+4
 1372 00c6 CA68     		ldr	r2, [r1, #12]
 1373 00c8 22F00202 		bic	r2, r2, #2
 1374 00cc CA60     		str	r2, [r1, #12]
 1375 00ce E1E7     		b	.L125
 1376              	.LVL82:
 1377              	.L132:
 1378              	.LCFI7:
 1379              		.cfi_def_cfa_offset 0
 1380              		.cfi_restore 4
 1381              		.cfi_restore 5
 1382              		.cfi_restore 6
 1383              		.cfi_restore 14
 172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1384              		.loc 1 172 0
 1385 00d0 0223     		movs	r3, #2
 250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1386              		.loc 1 250 0
 1387 00d2 1846     		mov	r0, r3
 1388              	.LVL83:
 1389 00d4 7047     		bx	lr
 1390              	.L141:
 1391 00d6 00BF     		.align	2
 1392              	.L140:
 1393 00d8 00000000 		.word	pFlash
 1394 00dc 00200052 		.word	1375739904
 1395 00e0 0600EF07 		.word	133103622
 1396              		.cfi_endproc
 1397              	.LFE137:
 1399              		.section	.text.FLASH_OB_WaitForLastOperation,"ax",%progbits
 1400              		.align	1
 1401              		.global	FLASH_OB_WaitForLastOperation
 1402              		.syntax unified
 1403              		.thumb
 1404              		.thumb_func
 1405              		.fpu fpv5-d16
 1407              	FLASH_OB_WaitForLastOperation:
 1408              	.LFB149:
 819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t timeout = HAL_GetTick() + Timeout;
 1409              		.loc 1 819 0
 1410              		.cfi_startproc
 1411              		@ args = 0, pretend = 0, frame = 0
 1412              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 59


 1413              	.LVL84:
 1414 0000 38B5     		push	{r3, r4, r5, lr}
 1415              	.LCFI8:
 1416              		.cfi_def_cfa_offset 16
 1417              		.cfi_offset 3, -16
 1418              		.cfi_offset 4, -12
 1419              		.cfi_offset 5, -8
 1420              		.cfi_offset 14, -4
 1421 0002 0446     		mov	r4, r0
 820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   
 1422              		.loc 1 820 0
 1423 0004 FFF7FEFF 		bl	HAL_GetTick
 1424              	.LVL85:
 1425 0008 0519     		adds	r5, r0, r4
 1426              	.LVL86:
 1427              	.L144:
 823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   { 
 1428              		.loc 1 823 0
 1429 000a 104B     		ldr	r3, .L151
 1430 000c DB69     		ldr	r3, [r3, #28]
 1431 000e 13F0010F 		tst	r3, #1
 1432 0012 08D0     		beq	.L150
 825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 1433              		.loc 1 825 0
 1434 0014 B4F1FF3F 		cmp	r4, #-1
 1435 0018 F7D0     		beq	.L144
 827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 1436              		.loc 1 827 0
 1437 001a FFF7FEFF 		bl	HAL_GetTick
 1438              	.LVL87:
 1439 001e A842     		cmp	r0, r5
 1440 0020 F3D3     		bcc	.L144
 829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 1441              		.loc 1 829 0
 1442 0022 0320     		movs	r0, #3
 1443 0024 0FE0     		b	.L145
 1444              	.L150:
 833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1445              		.loc 1 833 0
 1446 0026 094B     		ldr	r3, .L151
 1447 0028 DB69     		ldr	r3, [r3, #28]
 1448 002a 13F0804F 		tst	r3, #1073741824
 1449 002e 0BD0     		beq	.L148
 836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     
 1450              		.loc 1 836 0
 1451 0030 074A     		ldr	r2, .L151+4
 1452 0032 9369     		ldr	r3, [r2, #24]
 1453 0034 43F08073 		orr	r3, r3, #16777216
 1454 0038 9361     		str	r3, [r2, #24]
 839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     
 1455              		.loc 1 839 0
 1456 003a 044A     		ldr	r2, .L151
 1457 003c 536A     		ldr	r3, [r2, #36]
 1458 003e 43F08043 		orr	r3, r3, #1073741824
 1459 0042 5362     		str	r3, [r2, #36]
 841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 1460              		.loc 1 841 0
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 60


 1461 0044 0120     		movs	r0, #1
 1462              	.L145:
 846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1463              		.loc 1 846 0
 1464 0046 38BD     		pop	{r3, r4, r5, pc}
 1465              	.LVL88:
 1466              	.L148:
 845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 1467              		.loc 1 845 0
 1468 0048 0020     		movs	r0, #0
 1469 004a FCE7     		b	.L145
 1470              	.L152:
 1471              		.align	2
 1472              	.L151:
 1473 004c 00200052 		.word	1375739904
 1474 0050 00000000 		.word	pFlash
 1475              		.cfi_endproc
 1476              	.LFE149:
 1478              		.section	.text.HAL_FLASH_OB_Launch,"ax",%progbits
 1479              		.align	1
 1480              		.global	HAL_FLASH_OB_Launch
 1481              		.syntax unified
 1482              		.thumb
 1483              		.thumb_func
 1484              		.fpu fpv5-d16
 1486              	HAL_FLASH_OB_Launch:
 1487              	.LFB146:
 665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 1488              		.loc 1 665 0
 1489              		.cfi_startproc
 1490              		@ args = 0, pretend = 0, frame = 0
 1491              		@ frame_needed = 0, uses_anonymous_args = 0
 1492 0000 08B5     		push	{r3, lr}
 1493              	.LCFI9:
 1494              		.cfi_def_cfa_offset 8
 1495              		.cfi_offset 3, -8
 1496              		.cfi_offset 14, -4
 1497              	.LVL89:
 669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1498              		.loc 1 669 0
 1499 0002 054A     		ldr	r2, .L155
 1500 0004 9369     		ldr	r3, [r2, #24]
 1501 0006 43F00203 		orr	r3, r3, #2
 1502 000a 9361     		str	r3, [r2, #24]
 672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1503              		.loc 1 672 0
 1504 000c 4CF25030 		movw	r0, #50000
 1505 0010 FFF7FEFF 		bl	FLASH_OB_WaitForLastOperation
 1506              	.LVL90:
 675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 1507              		.loc 1 675 0
 1508 0014 08BD     		pop	{r3, pc}
 1509              	.L156:
 1510 0016 00BF     		.align	2
 1511              	.L155:
 1512 0018 00200052 		.word	1375739904
 1513              		.cfi_endproc
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 61


 1514              	.LFE146:
 1516              		.comm	pFlash,28,4
 1517              		.text
 1518              	.Letext0:
 1519              		.file 3 "c:\\gcc\\arm-none-eabi\\include\\machine\\_default_types.h"
 1520              		.file 4 "c:\\gcc\\arm-none-eabi\\include\\sys\\_stdint.h"
 1521              		.file 5 "Drivers/CMSIS/Include/core_cm7.h"
 1522              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 1523              		.file 7 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 1524              		.file 8 "c:\\gcc\\arm-none-eabi\\include\\sys\\lock.h"
 1525              		.file 9 "c:\\gcc\\arm-none-eabi\\include\\sys\\_types.h"
 1526              		.file 10 "c:\\gcc\\lib\\gcc\\arm-none-eabi\\7.3.1\\include\\stddef.h"
 1527              		.file 11 "c:\\gcc\\arm-none-eabi\\include\\sys\\reent.h"
 1528              		.file 12 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
 1529              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 1530              		.file 14 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 1531              		.file 15 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 1532              		.file 16 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 1533              		.file 17 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash_ex.h"
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s 			page 62


DEFINED SYMBOLS
                            *ABS*:00000000 stm32h7xx_hal_flash.c
C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s:17     .text.FLASH_SetErrorCode:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s:23     .text.FLASH_SetErrorCode:00000000 FLASH_SetErrorCode
C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s:259    .text.FLASH_SetErrorCode:0000019c $d
                            *COM*:0000001c pFlash
C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s:266    .text.HAL_FLASH_Program_IT:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s:273    .text.HAL_FLASH_Program_IT:00000000 HAL_FLASH_Program_IT
C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s:391    .text.HAL_FLASH_Program_IT:00000084 $d
C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s:398    .text.HAL_FLASH_EndOfOperationCallback:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s:405    .text.HAL_FLASH_EndOfOperationCallback:00000000 HAL_FLASH_EndOfOperationCallback
C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s:419    .text.HAL_FLASH_OperationErrorCallback:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s:426    .text.HAL_FLASH_OperationErrorCallback:00000000 HAL_FLASH_OperationErrorCallback
C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s:440    .text.HAL_FLASH_IRQHandler:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s:447    .text.HAL_FLASH_IRQHandler:00000000 HAL_FLASH_IRQHandler
C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s:848    .text.HAL_FLASH_IRQHandler:0000024c $d
C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s:855    .text.HAL_FLASH_Unlock:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s:862    .text.HAL_FLASH_Unlock:00000000 HAL_FLASH_Unlock
C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s:904    .text.HAL_FLASH_Unlock:00000034 $d
C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s:911    .text.HAL_FLASH_Lock:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s:918    .text.HAL_FLASH_Lock:00000000 HAL_FLASH_Lock
C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s:940    .text.HAL_FLASH_Lock:0000001c $d
C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s:945    .text.HAL_FLASH_OB_Unlock:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s:952    .text.HAL_FLASH_OB_Unlock:00000000 HAL_FLASH_OB_Unlock
C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s:982    .text.HAL_FLASH_OB_Unlock:00000020 $d
C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s:988    .text.HAL_FLASH_OB_Lock:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s:995    .text.HAL_FLASH_OB_Lock:00000000 HAL_FLASH_OB_Lock
C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s:1013   .text.HAL_FLASH_OB_Lock:00000010 $d
C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s:1018   .text.HAL_FLASH_GetError:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s:1025   .text.HAL_FLASH_GetError:00000000 HAL_FLASH_GetError
C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s:1040   .text.HAL_FLASH_GetError:00000008 $d
C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s:1045   .text.FLASH_WaitForLastOperation:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s:1052   .text.FLASH_WaitForLastOperation:00000000 FLASH_WaitForLastOperation
C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s:1205   .text.FLASH_WaitForLastOperation:000000b4 $d
C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s:1213   .text.HAL_FLASH_Program:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s:1220   .text.HAL_FLASH_Program:00000000 HAL_FLASH_Program
C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s:1393   .text.HAL_FLASH_Program:000000d8 $d
C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s:1400   .text.FLASH_OB_WaitForLastOperation:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s:1407   .text.FLASH_OB_WaitForLastOperation:00000000 FLASH_OB_WaitForLastOperation
C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s:1473   .text.FLASH_OB_WaitForLastOperation:0000004c $d
C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s:1479   .text.HAL_FLASH_OB_Launch:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s:1486   .text.HAL_FLASH_OB_Launch:00000000 HAL_FLASH_OB_Launch
C:\Users\qqffx\AppData\Local\Temp\ccsTCqUy.s:1512   .text.HAL_FLASH_OB_Launch:00000018 $d

UNDEFINED SYMBOLS
FLASH_Erase_Sector
HAL_GetTick
