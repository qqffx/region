ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_hal_uart.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.UART_EndTxTransfer,"ax",%progbits
  17              		.align	1
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu fpv5-d16
  23              	UART_EndTxTransfer:
  24              	.LFB180:
  25              		.file 1 "Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c"
   1:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
   2:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @file    stm32h7xx_hal_uart.c
   4:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *
  12:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *
  13:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   @verbatim
  14:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****  ===============================================================================
  15:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                         ##### How to use this driver #####
  16:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****  ===============================================================================
  17:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   [..]
  18:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  20:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  21:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  22:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  23:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) UART pins configuration:
  24:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  25:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  26:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  27:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  28:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  29:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  30:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) UART interrupts handling:
  31:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
  32:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                 RXNE interrupt and Error Interrupts) are managed using the macros
  33:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                 __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit and receive 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 2


  34:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  35:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  36:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  37:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  38:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  39:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  40:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  41:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  42:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  43:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  44:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  45:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  46:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  47:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  48:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  49:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  50:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         the HAL_UART_Init() API.
  51:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  52:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  53:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  54:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  55:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) For the UART LIN (Local Interconnection Network) mode, initialize the UART registers
  56:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         by calling the HAL_LIN_Init() API.
  57:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  58:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  59:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  60:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  61:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  62:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  63:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  64:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
  65:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (@) These API's (HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init(), HAL_MultiProcessor_Ini
  66:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         also configure the low level Hardware GPIO, CLOCK, CORTEX...etc) by
  67:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  68:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
  69:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   @endverbatim
  70:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ******************************************************************************
  71:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @attention
  72:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *
  73:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  74:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *
  75:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * Redistribution and use in source and binary forms, with or without modification,
  76:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * are permitted provided that the following conditions are met:
  77:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  78:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *      this list of conditions and the following disclaimer.
  79:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  80:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *      this list of conditions and the following disclaimer in the documentation
  81:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *      and/or other materials provided with the distribution.
  82:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  83:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *      may be used to endorse or promote products derived from this software
  84:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *      without specific prior written permission.
  85:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *
  86:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  87:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  88:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  89:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  90:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 3


  91:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  92:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  93:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  94:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  95:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  96:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *
  97:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ******************************************************************************
  98:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
  99:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #include "stm32h7xx_hal.h"
 102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @addtogroup STM32H7xx_HAL_Driver
 104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
 105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @defgroup UART UART
 108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief HAL UART module driver
 109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
 110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
 118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #define UART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                                      USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8| \
 121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                                      USART_CR1_FIFOEN ))                      /*!< UART or USART CR
 122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #define USART_CR3_FIELDS ((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT| \
 124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                                     USART_CR3_TXFTCFG | USART_CR3_RXFTCFG ))  /*!< UART or USART CR
 125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #define UART_LPUART_BRR_MIN           ((uint32_t)0x00000300)  /* LPUART BRR minimum authorized valu
 127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** #define UART_LPUART_BRR_MAX           ((uint32_t)0x000FFFFF)  /* LPUART BRR maximum authorized valu
 128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @}
 130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
 137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 4


 148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @}
 155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
 161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *
 166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** @verbatim
 167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** ===============================================================================
 168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****  ===============================================================================
 170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
 171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     in asynchronous mode.
 173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) Baud Rate
 175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) Word Length
 176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) Stop Bit
 177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) Hardware flow control
 180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) Receiver/transmitter modes
 181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) Over Sampling Method
 182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) One-Bit Sampling Method
 183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) data logical level inversion
 186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) RX and TX pins swap
 187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) RX overrun detection disabling
 188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) DMA disabling on RX error
 189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) MSB first on communication line
 190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (++) auto Baud rate detection
 191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
 192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init()and HAL_MultiProcessor_Init()API
 193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, UART LIN mode
 194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     and UART multiprocessor mode configuration procedures (details for the procedures
 195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     are available in reference manual).
 196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** @endverbatim
 198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   Depending on the frame length defined by the M1 and M0 bits (7-bit,
 200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   8-bit or 9-bit), the possible UART formats are listed in the
 201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   following table.
 202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   Table 1. UART frame format.
 204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     +-----------------------------------------------------------------------+
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 5


 205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |    0    |    0    |    0      |    | SB |    8 bit data   | STB |     |
 208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |    0    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |    0    |    1    |    0      |    | SB |    9 bit data   | STB |     |
 212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |    0    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |    1    |    0    |    0      |    | SB |    7 bit data   | STB |     |
 216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     |    1    |    0    |    1      |    | SB | 6 bit data | PB | STB |     |
 218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
 221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart: UART handle.
 227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
 228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if(huart == NULL)
 233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Check the parameters */
 240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
 243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Check the parameters */
 245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable the Peripheral */
 260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 6


 262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Enable the Peripheral */
 280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart: UART handle.
 290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
 291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if(huart == NULL)
 296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check UART instance */
 301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable the Peripheral */
 315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 7


 319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Enable the Peripheral */
 338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
 347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle .
 348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart: UART handle.
 349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param BreakDetectLength: specifies the LIN break detection length.
 350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        This parameter can be one of the following values:
 351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *          @arg UART_LINBREAKDETECTLENGTH_10B: 10-bit break detection
 352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *          @arg UART_LINBREAKDETECTLENGTH_11B: 11-bit break detection
 353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
 354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if(huart == NULL)
 359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the LIN UART instance */
 364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the Break detection length parameter */
 366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* LIN mode limited to 16-bit oversampling only */
 369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if(huart->Init.OverSampling == UART_OVERSAMPLING_8)
 370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* LIN mode limited to 8-bit data length */
 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if(huart->Init.WordLength != UART_WORDLENGTH_8B)
 375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 8


 376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable the Peripheral */
 391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Enable the Peripheral */
 417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart: UART handle.
 428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Address: UART node address (4-, 6-, 7- or 8-bit long).
 429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param WakeUpMethod: specifies the UART wakeup method.
 430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        This parameter can be one of the following values:
 431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *          @arg UART_WAKEUPMETHOD_IDLELINE: WakeUp by an idle line detection
 432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *          @arg UART_WAKEUPMETHOD_ADDRESSMARK: WakeUp by an address mark
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 9


 433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
 441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if(huart == NULL)
 446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the wake up method parameter */
 451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable the Peripheral */
 465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Set the UART Communication parameters */
 468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register. */
 481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 10


 490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Enable the Peripheral */
 494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart: UART handle.
 504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
 505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if(huart == NULL)
 510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_ERROR;
 512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the parameters */
 515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable the Peripheral */
 520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* DeInit the low level hardware */
 527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Process Unlock */
 534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
 537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart: UART handle.
 542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
 543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 11


 547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
 548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
 552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart: UART handle.
 557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
 558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
 563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
 567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @}
 571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
 574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
 575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *
 576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** @verbatim
 577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****  ===============================================================================
 578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                       ##### IO operation functions #####
 579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****  ===============================================================================
 580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     and Half duplex data transfers.
 582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) There are two mode of transfer:
 584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
 585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            after finishing transfer.
 587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
 588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            or DMA, These API's return the HAL status.
 589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            The end of the data processing will be indicated through the
 590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            using DMA mode.
 592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
 593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
 594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
 595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) Blocking mode API's are :
 597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_Transmit()
 598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_Receive()
 599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
 602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
 603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 12


 604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
 606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
 607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
 608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
 609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
 610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
 611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
 613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
 614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
 615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
 616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
 617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
 618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
 620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_Abort()
 621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
 622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
 623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
 624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
 625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
 626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
 628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
 629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
 630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
 631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
 633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         Errors are handled as follows :
 634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
 635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in Inte
 636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
 637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UART
 638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
 639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
 640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
 641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() use
 642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
 644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
 645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** @endverbatim
 647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
 648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
 652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart: UART handle.
 653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param pData: Pointer to data buffer.
 654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Size: Amount of data to be sent.
 655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Timeout: Timeout duration.
 656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
 657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
 659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t* tmp;
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 13


 661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t tickstart = 0U;
 662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return  HAL_ERROR;
 669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Process Locked */
 672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_LOCK(huart);
 673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
 678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     tickstart = HAL_GetTick();
 679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferSize = Size;
 681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferCount = Size;
 682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->TxXferCount--;
 685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         return HAL_TIMEOUT;
 688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
 693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pData += 2U;
 694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
 696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->Instance->TDR = (*pData++ & (uint8_t)0xFFU);
 698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_TIMEOUT;
 703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
 706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Process Unlocked */
 709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_OK;
 712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
 714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_BUSY;
 716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 14


 718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
 721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart: UART handle.
 722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param pData: pointer to data buffer.
 723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Size: amount of data to be received.
 724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Timeout: Timeout duration.
 725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
 726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
 728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t* tmp;
 730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t uhMask;
 731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t tickstart = 0;
 732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return  HAL_ERROR;
 739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Process Locked */
 742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_LOCK(huart);
 743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
 748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     tickstart = HAL_GetTick();
 749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferSize = Size;
 751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferCount = Size;
 752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhMask = huart->Mask;
 756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* as long as data have to be received */
 758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     while(huart->RxXferCount > 0U)
 759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxXferCount--;
 761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         return HAL_TIMEOUT;
 764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         tmp = (uint16_t*) pData ;
 768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
 769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pData +=2U;
 770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
 772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         *pData++ = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 15


 775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Process Unlocked */
 781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_OK;
 784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
 786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_BUSY;
 788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
 793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart: UART handle.
 794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param pData: pointer to data buffer.
 795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Size: amount of data to be sent.
 796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
 797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_ERROR;
 806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Process Locked */
 809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_LOCK(huart);
 810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferSize = Size;
 813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferCount = Size;
 814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Process Unlocked */
 819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Enable the TX FIFO threshold interrupt (if FIFO mode is enabled) or
 822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        Transmit Data Register Empty interrupt (if FIFO mode is Disabled).
 823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     */
 824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (READ_BIT(huart->Instance->CR1, USART_CR1_FIFOEN) != RESET)
 825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       SET_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
 829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 16


 832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_OK;
 834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
 836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_BUSY;
 838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
 843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart: UART handle.
 844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param pData: pointer to data buffer.
 845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Size: amount of data to be received.
 846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
 847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_ERROR;
 856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Process Locked */
 859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_LOCK(huart);
 860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferSize = Size;
 863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferCount = Size;
 864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Process Unlocked */
 872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Enable the UART Parity Error interupt and RX FIFO Threshold interrupt
 878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        (if FIFO mode is enabled) or Data Register Not Empty interrupt
 879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        (if FIFO mode is disabled).
 880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     */
 881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (READ_BIT(huart->Instance->CR1, USART_CR1_FIFOEN) != RESET)
 882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       SET_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
 885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
 887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 17


 889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_OK;
 892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
 894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_BUSY;
 896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
 901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart: UART handle.
 902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param pData: pointer to data buffer.
 903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Size: amount of data to be sent.
 904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
 905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_ERROR;
 914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Process Locked */
 917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_LOCK(huart);
 918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferSize = Size;
 921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferCount = Size;
 922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Set the DMA error callback */
 933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
 934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Set the DMA abort callback */
 936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
 937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Enable the UART transmit DMA channel */
 939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->TDR, S
 940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
 942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
 943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Process Unlocked */
 945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 18


 946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
 948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        in the UART CR3 register */
 949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_OK;
 952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
 954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_BUSY;
 956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
 961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart: UART handle.
 962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param pData: pointer to data buffer.
 963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param Size: amount of data to be received.
 964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
 965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         the parity bit (MSB position).
 966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
 967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
 968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_ERROR;
 976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Process Locked */
 979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_LOCK(huart);
 980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferSize = Size;
 983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Set the DMA error callback */
 994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
 995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Set the DMA abort callback */
 997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
 998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Enable the DMA channel */
1000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuffPtr, S
1001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Process Unlocked */
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 19


1003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        in the UART CR3 register */
1013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_OK;
1016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
1018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_BUSY;
1020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart: UART handle.
1026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Process Locked */
1031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
1032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
1034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
1035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
1040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Process Unlocked */
1051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
1054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart: UART handle.
1059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 20


1060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Process Locked */
1064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
1065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
1067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
1072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
1075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Process Unlocked */
1085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
1088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart: UART handle.
1093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback:
1100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete
1101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of
1102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
1106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
1107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_EndTxTransfer(huart);
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 21


1117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
1121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
1135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
1140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         This procedure performs following operations :
1142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Set handle State to READY
1146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** */
1149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable TXE, TC, RXNE, PE, RXFT, TXFT and ERR (Frame error, noise error, overrun error) interr
1152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE);
1154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 22


1174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxXferCount = 0U;
1189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferCount = 0U;
1190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
1196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Reset Handle ErrorCode to No Error */
1199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
1202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
1207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         This procedure performs following operations :
1209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Set handle State to READY
1213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** */
1216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable TCIE, TXEIE and TXFTIE interrupts */
1219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE | USART_CR1_TXEIE);
1220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
1221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 23


1231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Reset Tx transfer counter */
1239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxXferCount = 0U;
1240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
1245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
1250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         This procedure performs following operations :
1252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Set handle State to READY
1256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** */
1259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable PEIE, EIE, RXNEIE and RXFTIE interrupt */
1262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
1263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE);
1264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Reset Rx transfer counter */
1282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferCount = 0U;
1283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 24


1288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
1291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
1296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         This procedure performs following operations :
1298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Set handle State to READY
1302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** */
1307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t abortcplt = 1U;
1310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable interrupts */
1312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_TCIE | USART_CR1_RXNEIE);
1313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE);
1314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      before any call to DMA Abort functions */
1317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if(huart->hdmatx != NULL)
1319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        Otherwise, set it to NULL */
1322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
1325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
1327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if(huart->hdmarx != NULL)
1333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        Otherwise, set it to NULL */
1336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
1339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
1341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 25


1345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
1356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Abort DMA TX */
1359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
1362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
1364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         abortcplt = 0U;
1366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
1379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Abort DMA RX */
1382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
1385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         abortcplt = 1U;
1386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
1388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         abortcplt = 0U;
1390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (abortcplt == 1U)
1396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferCount = 0U;
1399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferCount = 0U;
1400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Reset errorCode */
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 26


1402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
1406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
1413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
1416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
1421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         This procedure performs following operations :
1423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Set handle State to READY
1427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** */
1432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
1433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable interrupts */
1435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE | USART_CR1_TXEIE);
1436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
1437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
1447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
1449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Abort DMA TX */
1451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
1454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
1455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
1458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 27


1459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Reset Tx transfer counter */
1460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->TxXferCount = 0U;
1461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Restore huart->gState to Ready */
1463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
1464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
1467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
1470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Reset Tx transfer counter */
1472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferCount = 0U;
1473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Restore huart->gState to Ready */
1475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
1479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
1482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
1486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
1487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         This procedure performs following operations :
1489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - Set handle State to READY
1493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** */
1498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
1499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable ERR (Frame error, noise error, overrun error) interrupt */
1501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
1502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE);
1503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
1513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
1515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 28


1516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Abort DMA RX */
1517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
1521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
1524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Reset Rx transfer counter */
1526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxXferCount = 0U;
1527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
1529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
1530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
1532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
1533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
1536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
1539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Reset Rx transfer counter */
1541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferCount = 0U;
1542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
1545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
1547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
1551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
1554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Handle UART interrupt request.
1558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart: UART handle.
1559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
1560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
1562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
1564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
1565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
1566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t errorflags;
1567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* If no error occurs */
1569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE));
1570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (errorflags == RESET)
1571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 29


1573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if(((isrflags & USART_ISR_RXNE) != RESET)
1574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      && (   ((cr1its & USART_CR1_RXNEIE) != RESET)
1575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          || ((cr3its & USART_CR3_RXFTIE) != RESET)) )
1576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       UART_Receive_IT(huart);
1578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return;
1579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* If some errors occur */
1583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if(   (errorflags != RESET)
1584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      && (   ((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != RESET)
1585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)))
1586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
1588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if(((isrflags & USART_ISR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
1589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_PEF);
1591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
1593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
1596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if(((isrflags & USART_ISR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_FEF);
1599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
1601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
1604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if(((isrflags & USART_ISR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_NEF);
1607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
1609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
1612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if(   ((isrflags & USART_ISR_ORE) != RESET)
1613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         &&(  ((cr1its & USART_CR1_RXNEIE) != RESET) ||
1614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****              ((cr3its & USART_CR3_RXFTIE) != RESET) ||
1615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****              ((cr3its & USART_CR3_EIE) != RESET)) )
1616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_OREF);
1618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
1620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
1623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if(huart->ErrorCode != HAL_UART_ERROR_NONE)
1624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
1625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* UART in mode Receiver ---------------------------------------------------*/
1626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if(((isrflags & USART_ISR_RXNE) != RESET)
1627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          && (   ((cr1its & USART_CR1_RXNEIE) != RESET)
1628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****              || ((cr3its & USART_CR3_RXFTIE) != RESET)) )
1629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 30


1630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         UART_Receive_IT(huart);
1631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
1634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          consider error as blocking */
1635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) ||
1636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Blocking error : transfer is aborted
1639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
1640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
1641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         UART_EndRxTransfer(huart);
1642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
1644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
1646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
1649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           if(huart->hdmarx != NULL)
1650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           {
1651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
1652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
1653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
1654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             /* Abort DMA RX */
1656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             {
1658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
1660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             }
1661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           }
1662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           else
1663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           {
1664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             /* Call user error callback */
1665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
1666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           }
1667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
1668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         else
1669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
1670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           /* Call user error callback */
1671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
1672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
1673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
1675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
1676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
1677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            Error is notified to user through user error callback */
1678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
1679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
1680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
1681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
1682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return;
1683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   } /* End if some error occurs */
1685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 31


1687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if(((isrflags & USART_ISR_WUF) != RESET) && ((cr3its & USART_CR3_WUFIE) != RESET))
1688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_CLEAR_IT(huart, UART_CLEAR_WUF);
1690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Set the UART state ready to be able to start again the process */
1691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
1694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return;
1695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
1698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if(((isrflags & USART_ISR_TXE) != RESET)
1699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      && (   ((cr1its & USART_CR1_TXEIE) != RESET)
1700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          || ((cr3its & USART_CR3_TXFTIE) != RESET)) )
1701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_Transmit_IT(huart);
1703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return;
1704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
1707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if(((isrflags & USART_ISR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
1708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
1710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return;
1711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* UART TX FIFO Empty  -----------------------------------------------------*/
1714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if(((isrflags & USART_ISR_TXFE) != RESET) && ((cr1its & USART_CR1_TXFEIE) != RESET))
1715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
1716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXFEIE);
1717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
1718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
1722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart: UART handle.
1723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
1724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
1726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
1729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
1732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
1733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
1737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart: UART handle.
1738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
1739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
1741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 32


1744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
1747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
1748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Rx Transfer completed callback.
1752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart: UART handle.
1753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
1754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
1756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
1759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
1762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
1763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
1767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart: UART handle.
1768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
1769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
1771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
1774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
1777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
1778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief UART error callback.
1782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart: UART handle.
1783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
1784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
1786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
1789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
1792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
1793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
1798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
1799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback (UART_HandleTypeDef *huart)
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 33


1801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
1804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
1807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
1808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
1813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
1814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback (UART_HandleTypeDef *huart)
1816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
1819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
1822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
1823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
1827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart UART handle.
1828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
1829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback (UART_HandleTypeDef *huart)
1831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UNUSED(huart);
1834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
1837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    */
1838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @}
1842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
1845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *  @brief   UART control functions
1846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *
1847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** @verbatim
1848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****  ===============================================================================
1849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****                       ##### Peripheral Control functions #####
1850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****  ===============================================================================
1851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
1852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
1853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
1854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
1855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
1856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) UART_SetConfig() API configures the UART peripheral
1857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) UART_AdvFeatureConfig() API optionally configures the UART advanced features
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 34


1858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) UART_CheckIdleState() API ensures that TEACK and/or REACK are set after initialization
1859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
1860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
1861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
1862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** @endverbatim
1863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
1864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Enable UART in mute mode (does not mean UART enters mute mode;
1868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
1869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart: UART handle.
1870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
1873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Process Locked */
1875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
1876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
1880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_MME);
1881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
1885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Disable UART mute mode (does not mean the UART actually exits mute mode
1889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         as it may not have been in mute mode at this very moment).
1890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart: UART handle.
1891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
1894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Process Locked */
1896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
1897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    /* Disable USART mute mode by clearing the MME bit in the CR1 register */
1901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
1902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
1906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
1910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
1911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart: UART handle.
1912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
1913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 35


1915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
1917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
1921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart: UART handle.
1922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
1925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Process Locked */
1927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
1928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Clear TE and RE bits */
1931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
1932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
1933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
1934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Process Unlocked */
1938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
1941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
1945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart: UART handle.
1946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status.
1947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
1949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Process Locked */
1951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
1952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Clear TE and RE bits */
1955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
1956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
1957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
1958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Process Unlocked */
1961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
1964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Transmit break characters.
1969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart: UART handle.
1970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
1971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 36


1972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
1973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
1974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the parameters */
1975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
1976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Process Locked */
1978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_LOCK(huart);
1979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Send break characters */
1983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   SET_BIT(huart->Instance->RQR, UART_SENDBREAK_REQUEST);
1984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Process Unlocked */
1988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
1991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
1992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
1995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @}
1996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
1997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
1998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
1999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****  *  @brief   UART Peripheral State functions
2000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****  *
2001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** @verbatim
2002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ==============================================================================
2003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
2004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   ==============================================================================
2005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     [..]
2006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     This subsection provides functions allowing to :
2007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (+) Return the UART handle state.
2008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (+) Return the UART handle error code
2009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** @endverbatim
2011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
2012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Return the UART handle state.
2016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *               the configuration information for the specified UART.
2018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL state
2019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
2023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   temp1 = huart->gState;
2024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   temp2 = huart->RxState;
2025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
2027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 37


2029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Return the UART handle error code.
2031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *               the configuration information for the specified UART.
2033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval UART Error Code
2034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** */
2035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return huart->ErrorCode;
2038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @}
2041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @}
2045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @{
2049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Configure the UART peripheral.
2053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart: UART handle.
2054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
2055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
2057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000U;
2059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource = UART_CLOCKSOURCE_UNDEFINED;
2060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
2061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t usartdiv                   = 0x0000U;
2062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
2063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   PLL2_ClocksTypeDef pll2_clocks;
2064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   PLL3_ClocksTypeDef pll3_clocks;
2065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the parameters */
2066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
2068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if(UART_INSTANCE_LOWPOWER(huart))
2069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_LPUART_STOPBITS(huart->Init.StopBits));
2071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
2073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
2076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
2079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
2081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
2082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_PRESCALER(huart->Init.Prescaler));
2083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_FIFO_MODE_STATE(huart->Init.FIFOMode));
2084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->Init.FIFOMode == UART_FIFOMODE_ENABLE)
2085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 38


2086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_TXFIFO_THRESHOLD(huart->Init.TXFIFOThreshold));
2087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_RXFIFO_THRESHOLD(huart->Init.RXFIFOThreshold));
2088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
2092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    *  the UART Word Length, Parity, Mode and oversampling:
2093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    *  set the M bits according to huart->Init.WordLength value
2094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    *  set PCE and PS bits according to huart->Init.Parity value
2095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    *  set TE and RE bits according to huart->Init.Mode value
2096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    *  set OVER8 bit according to huart->Init.OverSampling value */
2097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
2098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   tmpreg |=  (uint32_t)huart->Init.FIFOMode;
2099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
2100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
2102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
2103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    * to huart->Init.StopBits value */
2104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
2105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
2107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Configure
2108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    * - UART HardWare Flow Control: set CTSE and RTSE bits according
2109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    *   to huart->Init.HwFlowCtl value
2110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    * - one-bit sampling method versus three samples' majority rule according
2111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    *   to huart->Init.OneBitSampling (not applicable to LPUART)
2112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    * - set TXFTCFG bit according to husart->Init.TXFIFOThreshold value
2113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    * - set RXFTCFG bit according to husart->Init.RXFIFOThreshold value */
2114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl;
2115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (!(UART_INSTANCE_LOWPOWER(huart)))
2117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     tmpreg |= huart->Init.OneBitSampling;
2119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->Init.FIFOMode == UART_FIFOMODE_ENABLE)
2122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     tmpreg |= ((uint32_t)huart->Init.TXFIFOThreshold | (uint32_t)huart->Init.RXFIFOThreshold);
2124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
2127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /*-------------------------- USART PRESC Configuration -----------------------*/
2129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Configure
2130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****    * - UART Clock Prescaler : set PRESCALER according to huart->Init.Prescaler value */
2131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.Prescaler);
2132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
2135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check LPUART instance */
2137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if(UART_INSTANCE_LOWPOWER(huart))
2138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Retrieve frequency clock */
2140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     tmpreg = 0U;
2141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     switch (clocksource)
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 39


2143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     case UART_CLOCKSOURCE_D3PCLK1:
2145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       tmpreg = HAL_RCCEx_GetD3PCLK1Freq();
2146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       break;
2147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     case UART_CLOCKSOURCE_PLL2:
2148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
2149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       tmpreg = pll2_clocks.PLL2_Q_Frequency;
2150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       break;
2151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     case UART_CLOCKSOURCE_PLL3:
2152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
2153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       tmpreg = pll3_clocks.PLL3_Q_Frequency;
2154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       break;
2155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     case UART_CLOCKSOURCE_HSI:
2156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
2157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
2158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         tmpreg = (uint32_t) (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
2159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
2160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
2161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
2162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         tmpreg = (uint32_t) HSI_VALUE;
2163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
2164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       break;
2165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     case UART_CLOCKSOURCE_CSI:
2166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       tmpreg =(uint32_t) CSI_VALUE;
2167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       break;
2168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     case UART_CLOCKSOURCE_LSE:
2169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       tmpreg = (uint32_t) LSE_VALUE;
2170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       break;
2171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     case UART_CLOCKSOURCE_UNDEFINED:
2172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     default:
2173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         ret = HAL_ERROR;
2174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       break;
2175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* if proper clock source reported */
2178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (tmpreg != 0U)
2179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* ensure that Frequency clock is in the range [3 * baudrate, 4096 * baudrate] */
2181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if ( (tmpreg < (3 * huart->Init.BaudRate) ) ||
2182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            (tmpreg > (4096 * huart->Init.BaudRate) ))
2183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
2184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         ret = HAL_ERROR;
2185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
2186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
2187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
2188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         switch (clocksource)
2189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
2190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         case UART_CLOCKSOURCE_D3PCLK1:
2191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           tmpreg = (uint32_t)(UART_DIV_LPUART(HAL_RCCEx_GetD3PCLK1Freq(), huart->Init.BaudRate, hua
2192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           break;
2193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         case UART_CLOCKSOURCE_PLL2:
2194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
2195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           tmpreg = (uint32_t)(UART_DIV_LPUART(pll2_clocks.PLL2_Q_Frequency, huart->Init.BaudRate, h
2196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           break;
2197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         case UART_CLOCKSOURCE_PLL3:
2198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
2199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           tmpreg = (uint32_t)(UART_DIV_LPUART(pll3_clocks.PLL3_Q_Frequency, huart->Init.BaudRate, h
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 40


2200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           break;
2201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         case UART_CLOCKSOURCE_HSI:
2202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
2203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           {
2204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             tmpreg = (uint32_t)(UART_DIV_LPUART((HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER()>> 3)), h
2205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           }
2206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           else
2207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           {
2208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             tmpreg = (uint32_t)(UART_DIV_LPUART(HSI_VALUE, huart->Init.BaudRate, huart->Init.Presca
2209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           }
2210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           break;
2211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         case UART_CLOCKSOURCE_CSI:
2212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           tmpreg = (uint32_t)(UART_DIV_LPUART(CSI_VALUE, huart->Init.BaudRate, huart->Init.Prescale
2213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           break;
2214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         case UART_CLOCKSOURCE_LSE:
2215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           tmpreg = (uint32_t)(UART_DIV_LPUART(LSE_VALUE, huart->Init.BaudRate, huart->Init.Prescale
2216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           break;
2217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         case UART_CLOCKSOURCE_UNDEFINED:
2218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         default:
2219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           ret = HAL_ERROR;
2220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           break;
2221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
2222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         if ((tmpreg >= UART_LPUART_BRR_MIN) && (tmpreg <= UART_LPUART_BRR_MAX))
2224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
2225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            huart->Instance->BRR = tmpreg;
2226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
2227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         else
2228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
2229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           ret = HAL_ERROR;
2230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
2231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }  /*   if ( (tmpreg < (3 * huart->Init.BaudRate) ) || (tmpreg > (4096 * huart->Init.BaudRate
2232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     } /* if (tmpreg != 0) */
2233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
2235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
2236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     switch (clocksource)
2238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     case UART_CLOCKSOURCE_D2PCLK1:
2240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate, huar
2241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       break;
2242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     case UART_CLOCKSOURCE_D2PCLK2:
2243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate, huar
2244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       break;
2245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     case UART_CLOCKSOURCE_PLL2:
2246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
2247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pll2_clocks.PLL2_Q_Frequency, huart->Init.BaudRate
2248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       break;
2249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     case UART_CLOCKSOURCE_PLL3:
2250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
2251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pll3_clocks.PLL3_Q_Frequency, huart->Init.BaudRate
2252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       break;
2253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     case UART_CLOCKSOURCE_HSI:
2254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
2255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
2256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8((HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER()>> 3)), 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 41


2257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
2258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
2260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate, huart->Init.Presc
2261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
2262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       break;
2263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     case UART_CLOCKSOURCE_CSI:
2264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(CSI_VALUE, huart->Init.BaudRate, huart->Init.Presc
2265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       break;
2266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     case UART_CLOCKSOURCE_LSE:
2267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate, huart->Init.Presc
2268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       break;
2269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     case UART_CLOCKSOURCE_UNDEFINED:
2270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     default:
2271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         ret = HAL_ERROR;
2272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       break;
2273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     brrtemp = usartdiv & 0xFFF0U;
2276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
2277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->Instance->BRR = brrtemp;
2278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
2280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     switch (clocksource)
2282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     case UART_CLOCKSOURCE_D2PCLK1:
2284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.B
2285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       break;
2286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     case UART_CLOCKSOURCE_D2PCLK2:
2287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.B
2288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       break;
2289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     case UART_CLOCKSOURCE_PLL2:
2290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
2291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->Instance->BRR =  (uint16_t)(UART_DIV_SAMPLING16(pll2_clocks.PLL2_Q_Frequency, huart-
2292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       break;
2293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     case UART_CLOCKSOURCE_PLL3:
2294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
2295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(pll3_clocks.PLL3_Q_Frequency, huart->
2296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       break;
2297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     case UART_CLOCKSOURCE_HSI:
2298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
2299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
2300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16((HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVI
2301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
2302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
2303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
2304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate, huar
2305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
2306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       break;
2307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     case UART_CLOCKSOURCE_CSI:
2308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(CSI_VALUE, huart->Init.BaudRate, huar
2309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       break;
2310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     case UART_CLOCKSOURCE_LSE:
2311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate, huar
2312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       break;
2313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     case UART_CLOCKSOURCE_UNDEFINED:
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 42


2314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     default:
2315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         ret = HAL_ERROR;
2316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       break;
2317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return ret;
2321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
2325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart: UART handle.
2326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
2329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
2331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
2332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
2334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
2335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
2337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
2338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
2341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
2342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
2344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
2345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* if required, configure data inversion */
2348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
2349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
2351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
2352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
2355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
2356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
2358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
2359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
2362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
2363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
2365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
2366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
2369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
2370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 43


2371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
2372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
2373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
2376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
2377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
2379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
2380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
2381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
2382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if(huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
2383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
2385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
2386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
2390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
2391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
2393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
2394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief Check the UART Idle State.
2399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param huart: UART handle.
2400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
2401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
2403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t tickstart = 0U;
2405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
2407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Init tickstart for timeout managment*/
2410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   tickstart = HAL_GetTick();
2411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
2413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
2414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Wait until TEACK flag is set */
2416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE
2417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Timeout occurred */
2419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_TIMEOUT;
2420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check if the Receiver is enabled */
2423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
2424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Wait until REACK flag is set */
2426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE
2427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 44


2428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Timeout occurred */
2429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_TIMEOUT;
2430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Initialize the UART State */
2434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Process Unlocked */
2438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
2441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Handle UART Communication Timeout.
2445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart: UART handle.
2446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  Flag Specifies the UART flag to check
2447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  Status Flag status (SET or RESET)
2448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  Tickstart Tick start value
2449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  Timeout Timeout duration
2450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
2451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
2453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Wait until flag is set */
2455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
2456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Check for the Timeout */
2458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if(Timeout != HAL_MAX_DELAY)
2459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if((Timeout == 0U) || ((HAL_GetTick()-Tickstart) > Timeout))
2461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
2462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
2463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
2464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
2467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
2468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         /* Process Unlocked */
2470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         __HAL_UNLOCK(huart);
2471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         return HAL_TIMEOUT;
2473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
2474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
2477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
2482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart: UART handle.
2483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 45


2485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
2486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
  26              		.loc 1 2486 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
2487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
2488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
  32              		.loc 1 2488 0
  33 0000 0268     		ldr	r2, [r0]
  34 0002 1368     		ldr	r3, [r2]
  35 0004 23F0C003 		bic	r3, r3, #192
  36 0008 1360     		str	r3, [r2]
2489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
2491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
  37              		.loc 1 2491 0
  38 000a 2023     		movs	r3, #32
  39 000c 80F87930 		strb	r3, [r0, #121]
2492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
  40              		.loc 1 2492 0
  41 0010 7047     		bx	lr
  42              		.cfi_endproc
  43              	.LFE180:
  45              		.section	.text.UART_EndRxTransfer,"ax",%progbits
  46              		.align	1
  47              		.syntax unified
  48              		.thumb
  49              		.thumb_func
  50              		.fpu fpv5-d16
  52              	UART_EndRxTransfer:
  53              	.LFB181:
2493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
2497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart: UART handle.
2498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
2501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
  54              		.loc 1 2501 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
  59              	.LVL1:
2502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
  60              		.loc 1 2503 0
  61 0000 0268     		ldr	r2, [r0]
  62 0002 1368     		ldr	r3, [r2]
  63 0004 23F49073 		bic	r3, r3, #288
  64 0008 1360     		str	r3, [r2]
2504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 46


  65              		.loc 1 2504 0
  66 000a 0268     		ldr	r2, [r0]
  67 000c 9368     		ldr	r3, [r2, #8]
  68 000e 23F00103 		bic	r3, r3, #1
  69 0012 9360     		str	r3, [r2, #8]
2505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
2507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
  70              		.loc 1 2507 0
  71 0014 2023     		movs	r3, #32
  72 0016 80F87A30 		strb	r3, [r0, #122]
2508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
  73              		.loc 1 2508 0
  74 001a 7047     		bx	lr
  75              		.cfi_endproc
  76              	.LFE181:
  78              		.section	.text.UART_Transmit_IT,"ax",%progbits
  79              		.align	1
  80              		.syntax unified
  81              		.thumb
  82              		.thumb_func
  83              		.fpu fpv5-d16
  85              	UART_Transmit_IT:
  86              	.LFB192:
2509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
2513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param hdma: DMA handle.
2514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
2519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* DMA Normal mode */
2521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (hdma->Init.Mode != DMA_CIRCULAR)
2522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferCount = 0U;
2524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
2526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        in the UART CR3 register */
2527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
2528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
2530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
2531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* DMA Circular mode */
2533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
2534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
2536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 47


2542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param hdma : DMA handle.
2543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
2546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
2548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
2550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
2554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param hdma: DMA handle.
2555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
2560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* DMA Normal mode */
2562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (hdma->Init.Mode != DMA_CIRCULAR)
2563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferCount = 0U;
2565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
2567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
2568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
2571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****        in the UART CR3 register */
2572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
2575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
2579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
2583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param hdma : DMA handle.
2584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
2587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
2589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
2591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief DMA UART communication error callback.
2595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param hdma: DMA handle.
2596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 48


2599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
2601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* if DMA error is FIFO error ignore it */
2603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if(HAL_DMA_GetError(hdma) != HAL_DMA_ERROR_FE)
2604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Stop UART DMA Tx request if ongoing */
2606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (  (huart->gState == HAL_UART_STATE_BUSY_TX)
2607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) )
2608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->TxXferCount = 0U;
2610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       UART_EndTxTransfer(huart);
2611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Stop UART DMA Rx request if ongoing */
2614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if (  (huart->RxState == HAL_UART_STATE_BUSY_RX)
2615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) )
2616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxXferCount = 0U;
2618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       UART_EndRxTransfer(huart);
2619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_DMA;
2622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_ErrorCallback(huart);
2623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief DMA UART communication abort callback
2628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *        (To be called at end of DMA Abort procedure).
2629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param hdma: DMA handle.
2630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
2635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferCount = 0U;
2636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxXferCount = 0U;
2637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
2639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
2643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
2644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
2646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  hdma DMA handle.
2647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
2652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
2654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 49


2656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if(huart->hdmarx != NULL)
2657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if(huart->hdmarx->XferAbortCallback != NULL)
2659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return;
2661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxXferCount = 0U;
2666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferCount = 0U;
2667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Reset errorCode */
2669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
2673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call user Abort complete callback */
2679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
2680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
2685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
2686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
2688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  hdma DMA handle.
2689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
2692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
2694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
2696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if(huart->hdmatx != NULL)
2699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if(huart->hdmatx->XferAbortCallback != NULL)
2701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return;
2703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxXferCount = 0U;
2708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferCount = 0U;
2709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Reset errorCode */
2711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 50


2713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
2715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call user Abort complete callback */
2721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
2722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
2727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
2728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
2729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
2730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  hdma DMA handle.
2731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
2736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxXferCount = 0U;
2738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Restore huart->gState to Ready */
2740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call user Abort complete callback */
2743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
2744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
2748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
2749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
2750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
2751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  hdma DMA handle.
2752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval None
2753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
2756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferCount = 0U;
2759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
2762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
2764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Call user Abort complete callback */
2767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
2768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
2769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 51


2770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Send an amount of data in interrupt mode.
2772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   Function is called under interruption only, once
2773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
2774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart: UART handle.
2775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
2776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
2778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
  87              		.loc 1 2778 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              		@ link register save eliminated.
  92              	.LVL2:
2779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t* tmp;
2780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
2782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
  93              		.loc 1 2782 0
  94 0000 90F87930 		ldrb	r3, [r0, #121]	@ zero_extendqisi2
  95 0004 DBB2     		uxtb	r3, r3
  96 0006 212B     		cmp	r3, #33
  97 0008 37D1     		bne	.L10
2783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if(huart->TxXferCount == 0U)
  98              		.loc 1 2784 0
  99 000a B0F86230 		ldrh	r3, [r0, #98]
 100 000e 9BB2     		uxth	r3, r3
 101 0010 A3B9     		cbnz	r3, .L5
2785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Disable the TX FIFO threshold interrupt (if FIFO mode is enabled) or
2787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          Transmit Data Register Empty interrupt (if FIFO mode is Disabled).
2788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       */
2789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if (READ_BIT(huart->Instance->CR1, USART_CR1_FIFOEN) != RESET)
 102              		.loc 1 2789 0
 103 0012 0368     		ldr	r3, [r0]
 104 0014 1A68     		ldr	r2, [r3]
 105 0016 12F0005F 		tst	r2, #536870912
 106 001a 0AD0     		beq	.L6
2790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
2791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 107              		.loc 1 2791 0
 108 001c 9A68     		ldr	r2, [r3, #8]
 109 001e 22F40002 		bic	r2, r2, #8388608
 110 0022 9A60     		str	r2, [r3, #8]
 111              	.L7:
2792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
2793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
2794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
2795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
2796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
2797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
2799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 112              		.loc 1 2799 0
 113 0024 0268     		ldr	r2, [r0]
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 52


 114 0026 1368     		ldr	r3, [r2]
 115 0028 43F04003 		orr	r3, r3, #64
 116 002c 1360     		str	r3, [r2]
2800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_OK;
 117              		.loc 1 2801 0
 118 002e 0020     		movs	r0, #0
 119              	.LVL3:
 120 0030 7047     		bx	lr
 121              	.LVL4:
 122              	.L6:
2795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 123              		.loc 1 2795 0
 124 0032 1A68     		ldr	r2, [r3]
 125 0034 22F08002 		bic	r2, r2, #128
 126 0038 1A60     		str	r2, [r3]
 127 003a F3E7     		b	.L7
 128              	.L5:
2802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
2804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 129              		.loc 1 2805 0
 130 003c 8368     		ldr	r3, [r0, #8]
 131 003e B3F5805F 		cmp	r3, #4096
 132 0042 0DD0     		beq	.L11
 133              	.L8:
2806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
2807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         tmp = (uint16_t*) huart->pTxBuffPtr;
2808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
2809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
2810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
2811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       else
2812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
2813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0xFFU);
 134              		.loc 1 2813 0
 135 0044 C36D     		ldr	r3, [r0, #92]
 136 0046 5A1C     		adds	r2, r3, #1
 137 0048 C265     		str	r2, [r0, #92]
 138 004a 0268     		ldr	r2, [r0]
 139 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 140 004e 1385     		strh	r3, [r2, #40]	@ movhi
 141              	.L9:
2814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
2815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->TxXferCount--;
 142              		.loc 1 2815 0
 143 0050 B0F86230 		ldrh	r3, [r0, #98]
 144 0054 013B     		subs	r3, r3, #1
 145 0056 9BB2     		uxth	r3, r3
 146 0058 A0F86230 		strh	r3, [r0, #98]	@ movhi
2816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_OK;
 147              		.loc 1 2817 0
 148 005c 0020     		movs	r0, #0
 149              	.LVL5:
 150 005e 7047     		bx	lr
 151              	.LVL6:
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 53


 152              	.L11:
2805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 153              		.loc 1 2805 0 discriminator 1
 154 0060 0369     		ldr	r3, [r0, #16]
 155 0062 002B     		cmp	r3, #0
 156 0064 EED1     		bne	.L8
2807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
 157              		.loc 1 2807 0
 158 0066 C36D     		ldr	r3, [r0, #92]
 159              	.LVL7:
2808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
 160              		.loc 1 2808 0
 161 0068 0268     		ldr	r2, [r0]
 162 006a 1B88     		ldrh	r3, [r3]
 163              	.LVL8:
 164 006c C3F30803 		ubfx	r3, r3, #0, #9
 165 0070 1385     		strh	r3, [r2, #40]	@ movhi
 166              	.LVL9:
2809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 167              		.loc 1 2809 0
 168 0072 C36D     		ldr	r3, [r0, #92]
 169 0074 0233     		adds	r3, r3, #2
 170 0076 C365     		str	r3, [r0, #92]
 171 0078 EAE7     		b	.L9
 172              	.L10:
2818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
2821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_BUSY;
 173              		.loc 1 2822 0
 174 007a 0220     		movs	r0, #2
 175              	.LVL10:
2823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 176              		.loc 1 2824 0
 177 007c 7047     		bx	lr
 178              		.cfi_endproc
 179              	.LFE192:
 181              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 182              		.align	1
 183              		.weak	HAL_UART_MspInit
 184              		.syntax unified
 185              		.thumb
 186              		.thumb_func
 187              		.fpu fpv5-d16
 189              	HAL_UART_MspInit:
 190              	.LFB142:
 545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 191              		.loc 1 545 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195              		@ link register save eliminated.
 196              	.LVL11:
 552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 197              		.loc 1 552 0
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 54


 198 0000 7047     		bx	lr
 199              		.cfi_endproc
 200              	.LFE142:
 202              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 203              		.align	1
 204              		.weak	HAL_UART_MspDeInit
 205              		.syntax unified
 206              		.thumb
 207              		.thumb_func
 208              		.fpu fpv5-d16
 210              	HAL_UART_MspDeInit:
 211              	.LFB143:
 560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 212              		.loc 1 560 0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 0
 215              		@ frame_needed = 0, uses_anonymous_args = 0
 216              		@ link register save eliminated.
 217              	.LVL12:
 567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 218              		.loc 1 567 0
 219 0000 7047     		bx	lr
 220              		.cfi_endproc
 221              	.LFE143:
 223              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 224              		.align	1
 225              		.global	HAL_UART_DeInit
 226              		.syntax unified
 227              		.thumb
 228              		.thumb_func
 229              		.fpu fpv5-d16
 231              	HAL_UART_DeInit:
 232              	.LFB141:
 507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 233              		.loc 1 507 0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237              	.LVL13:
 509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 238              		.loc 1 509 0
 239 0000 D8B1     		cbz	r0, .L16
 507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 240              		.loc 1 507 0
 241 0002 38B5     		push	{r3, r4, r5, lr}
 242              	.LCFI0:
 243              		.cfi_def_cfa_offset 16
 244              		.cfi_offset 3, -16
 245              		.cfi_offset 4, -12
 246              		.cfi_offset 5, -8
 247              		.cfi_offset 14, -4
 248 0004 0446     		mov	r4, r0
 517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 249              		.loc 1 517 0
 250 0006 2423     		movs	r3, #36
 251 0008 80F87930 		strb	r3, [r0, #121]
 520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 55


 252              		.loc 1 520 0
 253 000c 0268     		ldr	r2, [r0]
 254 000e 1368     		ldr	r3, [r2]
 255 0010 23F00103 		bic	r3, r3, #1
 256 0014 1360     		str	r3, [r2]
 522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 257              		.loc 1 522 0
 258 0016 0368     		ldr	r3, [r0]
 259 0018 0025     		movs	r5, #0
 260 001a 1D60     		str	r5, [r3]
 523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 261              		.loc 1 523 0
 262 001c 0368     		ldr	r3, [r0]
 263 001e 5D60     		str	r5, [r3, #4]
 524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 264              		.loc 1 524 0
 265 0020 0368     		ldr	r3, [r0]
 266 0022 9D60     		str	r5, [r3, #8]
 527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 267              		.loc 1 527 0
 268 0024 FFF7FEFF 		bl	HAL_UART_MspDeInit
 269              	.LVL14:
 529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 270              		.loc 1 529 0
 271 0028 E567     		str	r5, [r4, #124]
 530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 272              		.loc 1 530 0
 273 002a 84F87950 		strb	r5, [r4, #121]
 531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 274              		.loc 1 531 0
 275 002e 84F87A50 		strb	r5, [r4, #122]
 534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 276              		.loc 1 534 0
 277 0032 84F87850 		strb	r5, [r4, #120]
 536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 278              		.loc 1 536 0
 279 0036 2846     		mov	r0, r5
 537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 280              		.loc 1 537 0
 281 0038 38BD     		pop	{r3, r4, r5, pc}
 282              	.LVL15:
 283              	.L16:
 284              	.LCFI1:
 285              		.cfi_def_cfa_offset 0
 286              		.cfi_restore 3
 287              		.cfi_restore 4
 288              		.cfi_restore 5
 289              		.cfi_restore 14
 511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 290              		.loc 1 511 0
 291 003a 0120     		movs	r0, #1
 292              	.LVL16:
 537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 293              		.loc 1 537 0
 294 003c 7047     		bx	lr
 295              		.cfi_endproc
 296              	.LFE141:
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 56


 298              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 299              		.align	1
 300              		.global	HAL_UART_Transmit_IT
 301              		.syntax unified
 302              		.thumb
 303              		.thumb_func
 304              		.fpu fpv5-d16
 306              	HAL_UART_Transmit_IT:
 307              	.LFB146:
 799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 308              		.loc 1 799 0
 309              		.cfi_startproc
 310              		@ args = 0, pretend = 0, frame = 0
 311              		@ frame_needed = 0, uses_anonymous_args = 0
 312              		@ link register save eliminated.
 313              	.LVL17:
 801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 314              		.loc 1 801 0
 315 0000 90F87930 		ldrb	r3, [r0, #121]	@ zero_extendqisi2
 316 0004 DBB2     		uxtb	r3, r3
 317 0006 202B     		cmp	r3, #32
 318 0008 27D1     		bne	.L24
 803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 319              		.loc 1 803 0
 320 000a B2FA82F3 		clz	r3, r2
 321 000e 5B09     		lsrs	r3, r3, #5
 322 0010 0029     		cmp	r1, #0
 323 0012 08BF     		it	eq
 324 0014 0123     		moveq	r3, #1
 325 0016 13BB     		cbnz	r3, .L25
 809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 326              		.loc 1 809 0
 327 0018 90F87830 		ldrb	r3, [r0, #120]	@ zero_extendqisi2
 328 001c 012B     		cmp	r3, #1
 329 001e 20D0     		beq	.L26
 811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferSize = Size;
 330              		.loc 1 811 0 discriminator 2
 331 0020 C165     		str	r1, [r0, #92]
 812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferCount = Size;
 332              		.loc 1 812 0 discriminator 2
 333 0022 A0F86020 		strh	r2, [r0, #96]	@ movhi
 813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 334              		.loc 1 813 0 discriminator 2
 335 0026 A0F86220 		strh	r2, [r0, #98]	@ movhi
 815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 336              		.loc 1 815 0 discriminator 2
 337 002a 0023     		movs	r3, #0
 338 002c C367     		str	r3, [r0, #124]
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 339              		.loc 1 816 0 discriminator 2
 340 002e 2122     		movs	r2, #33
 341              	.LVL18:
 342 0030 80F87920 		strb	r2, [r0, #121]
 819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 343              		.loc 1 819 0 discriminator 2
 344 0034 80F87830 		strb	r3, [r0, #120]
 824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 57


 345              		.loc 1 824 0 discriminator 2
 346 0038 0368     		ldr	r3, [r0]
 347 003a 1A68     		ldr	r2, [r3]
 348 003c 12F0005F 		tst	r2, #536870912
 349 0040 05D1     		bne	.L27
 830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 350              		.loc 1 830 0
 351 0042 1A68     		ldr	r2, [r3]
 352 0044 42F08002 		orr	r2, r2, #128
 353 0048 1A60     		str	r2, [r3]
 354              	.LVL19:
 833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 355              		.loc 1 833 0
 356 004a 0020     		movs	r0, #0
 357              	.LVL20:
 358 004c 7047     		bx	lr
 359              	.LVL21:
 360              	.L27:
 826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 361              		.loc 1 826 0
 362 004e 9A68     		ldr	r2, [r3, #8]
 363 0050 42F40002 		orr	r2, r2, #8388608
 364 0054 9A60     		str	r2, [r3, #8]
 365              	.LVL22:
 833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 366              		.loc 1 833 0
 367 0056 0020     		movs	r0, #0
 368              	.LVL23:
 369 0058 7047     		bx	lr
 370              	.LVL24:
 371              	.L24:
 837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 372              		.loc 1 837 0
 373 005a 0220     		movs	r0, #2
 374              	.LVL25:
 375 005c 7047     		bx	lr
 376              	.LVL26:
 377              	.L25:
 805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 378              		.loc 1 805 0
 379 005e 0120     		movs	r0, #1
 380              	.LVL27:
 381 0060 7047     		bx	lr
 382              	.LVL28:
 383              	.L26:
 809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 384              		.loc 1 809 0
 385 0062 0220     		movs	r0, #2
 386              	.LVL29:
 839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 387              		.loc 1 839 0
 388 0064 7047     		bx	lr
 389              		.cfi_endproc
 390              	.LFE146:
 392              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 393              		.align	1
 394              		.global	HAL_UART_Receive_IT
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 58


 395              		.syntax unified
 396              		.thumb
 397              		.thumb_func
 398              		.fpu fpv5-d16
 400              	HAL_UART_Receive_IT:
 401              	.LFB147:
 849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 402              		.loc 1 849 0
 403              		.cfi_startproc
 404              		@ args = 0, pretend = 0, frame = 0
 405              		@ frame_needed = 0, uses_anonymous_args = 0
 406              		@ link register save eliminated.
 407              	.LVL30:
 851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 408              		.loc 1 851 0
 409 0000 90F87A30 		ldrb	r3, [r0, #122]	@ zero_extendqisi2
 410 0004 DBB2     		uxtb	r3, r3
 411 0006 202B     		cmp	r3, #32
 412 0008 5CD1     		bne	.L37
 853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 413              		.loc 1 853 0
 414 000a B2FA82F3 		clz	r3, r2
 415 000e 5B09     		lsrs	r3, r3, #5
 416 0010 0029     		cmp	r1, #0
 417 0012 08BF     		it	eq
 418 0014 0123     		moveq	r3, #1
 419 0016 002B     		cmp	r3, #0
 420 0018 56D1     		bne	.L38
 859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 421              		.loc 1 859 0
 422 001a 90F87830 		ldrb	r3, [r0, #120]	@ zero_extendqisi2
 423 001e 012B     		cmp	r3, #1
 424 0020 54D0     		beq	.L39
 859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 425              		.loc 1 859 0 is_stmt 0 discriminator 2
 426 0022 0123     		movs	r3, #1
 427 0024 80F87830 		strb	r3, [r0, #120]
 861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferSize = Size;
 428              		.loc 1 861 0 is_stmt 1 discriminator 2
 429 0028 4166     		str	r1, [r0, #100]
 862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferCount = Size;
 430              		.loc 1 862 0 discriminator 2
 431 002a A0F86820 		strh	r2, [r0, #104]	@ movhi
 863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 432              		.loc 1 863 0 discriminator 2
 433 002e A0F86A20 		strh	r2, [r0, #106]	@ movhi
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 434              		.loc 1 866 0 discriminator 2
 435 0032 8368     		ldr	r3, [r0, #8]
 436 0034 B3F5805F 		cmp	r3, #4096
 437 0038 06D0     		beq	.L40
 438 003a A3B9     		cbnz	r3, .L33
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 439              		.loc 1 866 0 is_stmt 0 discriminator 5
 440 003c 0369     		ldr	r3, [r0, #16]
 441 003e 73B9     		cbnz	r3, .L34
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 59


 442              		.loc 1 866 0 discriminator 7
 443 0040 FF23     		movs	r3, #255
 444 0042 A0F86C30 		strh	r3, [r0, #108]	@ movhi
 445 0046 11E0     		b	.L32
 446              	.L40:
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 447              		.loc 1 866 0 discriminator 1
 448 0048 0369     		ldr	r3, [r0, #16]
 449 004a 23B9     		cbnz	r3, .L31
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 450              		.loc 1 866 0 discriminator 3
 451 004c 40F2FF13 		movw	r3, #511
 452 0050 A0F86C30 		strh	r3, [r0, #108]	@ movhi
 453 0054 0AE0     		b	.L32
 454              	.L31:
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 455              		.loc 1 866 0 discriminator 4
 456 0056 FF23     		movs	r3, #255
 457 0058 A0F86C30 		strh	r3, [r0, #108]	@ movhi
 458 005c 06E0     		b	.L32
 459              	.L34:
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 460              		.loc 1 866 0 discriminator 8
 461 005e 7F23     		movs	r3, #127
 462 0060 A0F86C30 		strh	r3, [r0, #108]	@ movhi
 463 0064 02E0     		b	.L32
 464              	.L33:
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 465              		.loc 1 866 0 discriminator 6
 466 0066 B3F1805F 		cmp	r3, #268435456
 467 006a 16D0     		beq	.L41
 468              	.L32:
 868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 469              		.loc 1 868 0 is_stmt 1
 470 006c 0023     		movs	r3, #0
 471 006e C367     		str	r3, [r0, #124]
 869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 472              		.loc 1 869 0
 473 0070 2222     		movs	r2, #34
 474              	.LVL31:
 475 0072 80F87A20 		strb	r2, [r0, #122]
 872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 476              		.loc 1 872 0
 477 0076 80F87830 		strb	r3, [r0, #120]
 875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 478              		.loc 1 875 0
 479 007a 0268     		ldr	r2, [r0]
 480 007c 9368     		ldr	r3, [r2, #8]
 481 007e 43F00103 		orr	r3, r3, #1
 482 0082 9360     		str	r3, [r2, #8]
 483              	.LVL32:
 881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 484              		.loc 1 881 0
 485 0084 0368     		ldr	r3, [r0]
 486 0086 1A68     		ldr	r2, [r3]
 487 0088 12F0005F 		tst	r2, #536870912
 488 008c 0FD1     		bne	.L42
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 60


 888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 489              		.loc 1 888 0
 490 008e 1A68     		ldr	r2, [r3]
 491 0090 42F49072 		orr	r2, r2, #288
 492 0094 1A60     		str	r2, [r3]
 891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 493              		.loc 1 891 0
 494 0096 0020     		movs	r0, #0
 495              	.LVL33:
 496 0098 7047     		bx	lr
 497              	.LVL34:
 498              	.L41:
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 499              		.loc 1 866 0 discriminator 9
 500 009a 0369     		ldr	r3, [r0, #16]
 501 009c 1BB9     		cbnz	r3, .L35
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 502              		.loc 1 866 0 is_stmt 0 discriminator 10
 503 009e 7F23     		movs	r3, #127
 504 00a0 A0F86C30 		strh	r3, [r0, #108]	@ movhi
 505 00a4 E2E7     		b	.L32
 506              	.L35:
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 507              		.loc 1 866 0 discriminator 11
 508 00a6 3F23     		movs	r3, #63
 509 00a8 A0F86C30 		strh	r3, [r0, #108]	@ movhi
 510 00ac DEE7     		b	.L32
 511              	.LVL35:
 512              	.L42:
 883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       SET_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
 513              		.loc 1 883 0 is_stmt 1
 514 00ae 1A68     		ldr	r2, [r3]
 515 00b0 42F48072 		orr	r2, r2, #256
 516 00b4 1A60     		str	r2, [r3]
 884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 517              		.loc 1 884 0
 518 00b6 0268     		ldr	r2, [r0]
 519 00b8 9368     		ldr	r3, [r2, #8]
 520 00ba 43F08053 		orr	r3, r3, #268435456
 521 00be 9360     		str	r3, [r2, #8]
 891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 522              		.loc 1 891 0
 523 00c0 0020     		movs	r0, #0
 524              	.LVL36:
 525 00c2 7047     		bx	lr
 526              	.LVL37:
 527              	.L37:
 895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 528              		.loc 1 895 0
 529 00c4 0220     		movs	r0, #2
 530              	.LVL38:
 531 00c6 7047     		bx	lr
 532              	.LVL39:
 533              	.L38:
 855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 534              		.loc 1 855 0
 535 00c8 0120     		movs	r0, #1
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 61


 536              	.LVL40:
 537 00ca 7047     		bx	lr
 538              	.LVL41:
 539              	.L39:
 859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 540              		.loc 1 859 0
 541 00cc 0220     		movs	r0, #2
 542              	.LVL42:
 897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 543              		.loc 1 897 0
 544 00ce 7047     		bx	lr
 545              		.cfi_endproc
 546              	.LFE147:
 548              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 549              		.align	1
 550              		.global	HAL_UART_Transmit_DMA
 551              		.syntax unified
 552              		.thumb
 553              		.thumb_func
 554              		.fpu fpv5-d16
 556              	HAL_UART_Transmit_DMA:
 557              	.LFB148:
 907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 558              		.loc 1 907 0
 559              		.cfi_startproc
 560              		@ args = 0, pretend = 0, frame = 0
 561              		@ frame_needed = 0, uses_anonymous_args = 0
 562              	.LVL43:
 563 0000 38B5     		push	{r3, r4, r5, lr}
 564              	.LCFI2:
 565              		.cfi_def_cfa_offset 16
 566              		.cfi_offset 3, -16
 567              		.cfi_offset 4, -12
 568              		.cfi_offset 5, -8
 569              		.cfi_offset 14, -4
 909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 570              		.loc 1 909 0
 571 0002 90F87950 		ldrb	r5, [r0, #121]	@ zero_extendqisi2
 572 0006 EDB2     		uxtb	r5, r5
 573 0008 202D     		cmp	r5, #32
 574 000a 36D1     		bne	.L45
 911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 575              		.loc 1 911 0
 576 000c B2FA82F5 		clz	r5, r2
 577 0010 6D09     		lsrs	r5, r5, #5
 578 0012 0029     		cmp	r1, #0
 579 0014 08BF     		it	eq
 580 0016 0125     		moveq	r5, #1
 581 0018 002D     		cmp	r5, #0
 582 001a 30D1     		bne	.L46
 917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 583              		.loc 1 917 0
 584 001c 90F87830 		ldrb	r3, [r0, #120]	@ zero_extendqisi2
 585 0020 012B     		cmp	r3, #1
 586 0022 2ED0     		beq	.L47
 587 0024 1346     		mov	r3, r2
 588 0026 0446     		mov	r4, r0
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 62


 917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 589              		.loc 1 917 0 is_stmt 0 discriminator 2
 590 0028 0122     		movs	r2, #1
 591              	.LVL44:
 592 002a 80F87820 		strb	r2, [r0, #120]
 919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferSize = Size;
 593              		.loc 1 919 0 is_stmt 1 discriminator 2
 594 002e C165     		str	r1, [r0, #92]
 920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferCount = Size;
 595              		.loc 1 920 0 discriminator 2
 596 0030 A0F86030 		strh	r3, [r0, #96]	@ movhi
 921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 597              		.loc 1 921 0 discriminator 2
 598 0034 A0F86230 		strh	r3, [r0, #98]	@ movhi
 923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 599              		.loc 1 923 0 discriminator 2
 600 0038 C567     		str	r5, [r0, #124]
 924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 601              		.loc 1 924 0 discriminator 2
 602 003a 2122     		movs	r2, #33
 603 003c 80F87920 		strb	r2, [r0, #121]
 927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 604              		.loc 1 927 0 discriminator 2
 605 0040 026F     		ldr	r2, [r0, #112]
 606 0042 1149     		ldr	r1, .L49
 607              	.LVL45:
 608 0044 D163     		str	r1, [r2, #60]
 609              	.LVL46:
 930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 610              		.loc 1 930 0 discriminator 2
 611 0046 026F     		ldr	r2, [r0, #112]
 612 0048 1049     		ldr	r1, .L49+4
 613 004a 1164     		str	r1, [r2, #64]
 933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 614              		.loc 1 933 0 discriminator 2
 615 004c 026F     		ldr	r2, [r0, #112]
 616 004e 1049     		ldr	r1, .L49+8
 617 0050 D164     		str	r1, [r2, #76]
 936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 618              		.loc 1 936 0 discriminator 2
 619 0052 026F     		ldr	r2, [r0, #112]
 620 0054 1565     		str	r5, [r2, #80]
 939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 621              		.loc 1 939 0 discriminator 2
 622 0056 0268     		ldr	r2, [r0]
 623 0058 2832     		adds	r2, r2, #40
 624 005a C16D     		ldr	r1, [r0, #92]
 625 005c 006F     		ldr	r0, [r0, #112]
 626              	.LVL47:
 627 005e FFF7FEFF 		bl	HAL_DMA_Start_IT
 628              	.LVL48:
 942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 629              		.loc 1 942 0 discriminator 2
 630 0062 2368     		ldr	r3, [r4]
 631 0064 4022     		movs	r2, #64
 632 0066 1A62     		str	r2, [r3, #32]
 945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 63


 633              		.loc 1 945 0 discriminator 2
 634 0068 84F87850 		strb	r5, [r4, #120]
 949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 635              		.loc 1 949 0 discriminator 2
 636 006c 2268     		ldr	r2, [r4]
 637 006e 9368     		ldr	r3, [r2, #8]
 638 0070 43F08003 		orr	r3, r3, #128
 639 0074 9360     		str	r3, [r2, #8]
 951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 640              		.loc 1 951 0 discriminator 2
 641 0076 2846     		mov	r0, r5
 642 0078 00E0     		b	.L44
 643              	.LVL49:
 644              	.L45:
 955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 645              		.loc 1 955 0
 646 007a 0220     		movs	r0, #2
 647              	.LVL50:
 648              	.L44:
 957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 649              		.loc 1 957 0
 650 007c 38BD     		pop	{r3, r4, r5, pc}
 651              	.LVL51:
 652              	.L46:
 913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 653              		.loc 1 913 0
 654 007e 0120     		movs	r0, #1
 655              	.LVL52:
 656 0080 FCE7     		b	.L44
 657              	.LVL53:
 658              	.L47:
 917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 659              		.loc 1 917 0
 660 0082 0220     		movs	r0, #2
 661              	.LVL54:
 662 0084 FAE7     		b	.L44
 663              	.L50:
 664 0086 00BF     		.align	2
 665              	.L49:
 666 0088 00000000 		.word	UART_DMATransmitCplt
 667 008c 00000000 		.word	UART_DMATxHalfCplt
 668 0090 00000000 		.word	UART_DMAError
 669              		.cfi_endproc
 670              	.LFE148:
 672              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 673              		.align	1
 674              		.global	HAL_UART_Receive_DMA
 675              		.syntax unified
 676              		.thumb
 677              		.thumb_func
 678              		.fpu fpv5-d16
 680              	HAL_UART_Receive_DMA:
 681              	.LFB149:
 969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 682              		.loc 1 969 0
 683              		.cfi_startproc
 684              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 64


 685              		@ frame_needed = 0, uses_anonymous_args = 0
 686              	.LVL55:
 687 0000 38B5     		push	{r3, r4, r5, lr}
 688              	.LCFI3:
 689              		.cfi_def_cfa_offset 16
 690              		.cfi_offset 3, -16
 691              		.cfi_offset 4, -12
 692              		.cfi_offset 5, -8
 693              		.cfi_offset 14, -4
 971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 694              		.loc 1 971 0
 695 0002 90F87A50 		ldrb	r5, [r0, #122]	@ zero_extendqisi2
 696 0006 EDB2     		uxtb	r5, r5
 697 0008 202D     		cmp	r5, #32
 698 000a 3BD1     		bne	.L53
 973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 699              		.loc 1 973 0
 700 000c B2FA82F5 		clz	r5, r2
 701 0010 6D09     		lsrs	r5, r5, #5
 702 0012 0029     		cmp	r1, #0
 703 0014 08BF     		it	eq
 704 0016 0125     		moveq	r5, #1
 705 0018 002D     		cmp	r5, #0
 706 001a 35D1     		bne	.L54
 979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 707              		.loc 1 979 0
 708 001c 90F87830 		ldrb	r3, [r0, #120]	@ zero_extendqisi2
 709 0020 012B     		cmp	r3, #1
 710 0022 33D0     		beq	.L55
 711 0024 1346     		mov	r3, r2
 712 0026 0446     		mov	r4, r0
 979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 713              		.loc 1 979 0 is_stmt 0 discriminator 2
 714 0028 0122     		movs	r2, #1
 715              	.LVL56:
 716 002a 80F87820 		strb	r2, [r0, #120]
 981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferSize = Size;
 717              		.loc 1 981 0 is_stmt 1 discriminator 2
 718 002e 4166     		str	r1, [r0, #100]
 982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 719              		.loc 1 982 0 discriminator 2
 720 0030 A0F86830 		strh	r3, [r0, #104]	@ movhi
 984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 721              		.loc 1 984 0 discriminator 2
 722 0034 C567     		str	r5, [r0, #124]
 985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 723              		.loc 1 985 0 discriminator 2
 724 0036 2222     		movs	r2, #34
 725 0038 80F87A20 		strb	r2, [r0, #122]
 988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 726              		.loc 1 988 0 discriminator 2
 727 003c 426F     		ldr	r2, [r0, #116]
 728 003e 1449     		ldr	r1, .L57
 729              	.LVL57:
 730 0040 D163     		str	r1, [r2, #60]
 731              	.LVL58:
 991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 65


 732              		.loc 1 991 0 discriminator 2
 733 0042 426F     		ldr	r2, [r0, #116]
 734 0044 1349     		ldr	r1, .L57+4
 735 0046 1164     		str	r1, [r2, #64]
 994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 736              		.loc 1 994 0 discriminator 2
 737 0048 426F     		ldr	r2, [r0, #116]
 738 004a 1349     		ldr	r1, .L57+8
 739 004c D164     		str	r1, [r2, #76]
 997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 740              		.loc 1 997 0 discriminator 2
 741 004e 426F     		ldr	r2, [r0, #116]
 742 0050 1565     		str	r5, [r2, #80]
1000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 743              		.loc 1 1000 0 discriminator 2
 744 0052 0168     		ldr	r1, [r0]
 745 0054 426E     		ldr	r2, [r0, #100]
 746 0056 2431     		adds	r1, r1, #36
 747 0058 406F     		ldr	r0, [r0, #116]
 748              	.LVL59:
 749 005a FFF7FEFF 		bl	HAL_DMA_Start_IT
 750              	.LVL60:
1003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 751              		.loc 1 1003 0 discriminator 2
 752 005e 84F87850 		strb	r5, [r4, #120]
1006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 753              		.loc 1 1006 0 discriminator 2
 754 0062 2268     		ldr	r2, [r4]
 755 0064 1368     		ldr	r3, [r2]
 756 0066 43F48073 		orr	r3, r3, #256
 757 006a 1360     		str	r3, [r2]
1009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 758              		.loc 1 1009 0 discriminator 2
 759 006c 2268     		ldr	r2, [r4]
 760 006e 9368     		ldr	r3, [r2, #8]
 761 0070 43F00103 		orr	r3, r3, #1
 762 0074 9360     		str	r3, [r2, #8]
1013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 763              		.loc 1 1013 0 discriminator 2
 764 0076 2268     		ldr	r2, [r4]
 765 0078 9368     		ldr	r3, [r2, #8]
 766 007a 43F04003 		orr	r3, r3, #64
 767 007e 9360     		str	r3, [r2, #8]
1015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 768              		.loc 1 1015 0 discriminator 2
 769 0080 2846     		mov	r0, r5
 770 0082 00E0     		b	.L52
 771              	.LVL61:
 772              	.L53:
1019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 773              		.loc 1 1019 0
 774 0084 0220     		movs	r0, #2
 775              	.LVL62:
 776              	.L52:
1021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 777              		.loc 1 1021 0
 778 0086 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 66


 779              	.LVL63:
 780              	.L54:
 975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 781              		.loc 1 975 0
 782 0088 0120     		movs	r0, #1
 783              	.LVL64:
 784 008a FCE7     		b	.L52
 785              	.LVL65:
 786              	.L55:
 979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 787              		.loc 1 979 0
 788 008c 0220     		movs	r0, #2
 789              	.LVL66:
 790 008e FAE7     		b	.L52
 791              	.L58:
 792              		.align	2
 793              	.L57:
 794 0090 00000000 		.word	UART_DMAReceiveCplt
 795 0094 00000000 		.word	UART_DMARxHalfCplt
 796 0098 00000000 		.word	UART_DMAError
 797              		.cfi_endproc
 798              	.LFE149:
 800              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 801              		.align	1
 802              		.global	HAL_UART_DMAPause
 803              		.syntax unified
 804              		.thumb
 805              		.thumb_func
 806              		.fpu fpv5-d16
 808              	HAL_UART_DMAPause:
 809              	.LFB150:
1029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Process Locked */
 810              		.loc 1 1029 0
 811              		.cfi_startproc
 812              		@ args = 0, pretend = 0, frame = 0
 813              		@ frame_needed = 0, uses_anonymous_args = 0
 814              		@ link register save eliminated.
 815              	.LVL67:
1031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 816              		.loc 1 1031 0
 817 0000 90F87830 		ldrb	r3, [r0, #120]	@ zero_extendqisi2
 818 0004 012B     		cmp	r3, #1
 819 0006 2FD0     		beq	.L63
1031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 820              		.loc 1 1031 0 is_stmt 0 discriminator 2
 821 0008 0123     		movs	r3, #1
 822 000a 80F87830 		strb	r3, [r0, #120]
1033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 823              		.loc 1 1033 0 is_stmt 1 discriminator 2
 824 000e 90F87930 		ldrb	r3, [r0, #121]	@ zero_extendqisi2
 825 0012 DBB2     		uxtb	r3, r3
 826 0014 212B     		cmp	r3, #33
 827 0016 09D0     		beq	.L64
 828              	.L61:
1039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 829              		.loc 1 1039 0
 830 0018 90F87A30 		ldrb	r3, [r0, #122]	@ zero_extendqisi2
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 67


 831 001c DBB2     		uxtb	r3, r3
 832 001e 222B     		cmp	r3, #34
 833 0020 0ED0     		beq	.L65
 834              	.L62:
1051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 835              		.loc 1 1051 0
 836 0022 0023     		movs	r3, #0
 837 0024 80F87830 		strb	r3, [r0, #120]
1053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 838              		.loc 1 1053 0
 839 0028 1846     		mov	r0, r3
 840              	.LVL68:
 841 002a 7047     		bx	lr
 842              	.LVL69:
 843              	.L64:
1034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 844              		.loc 1 1034 0 discriminator 1
 845 002c 0368     		ldr	r3, [r0]
 846 002e 9A68     		ldr	r2, [r3, #8]
1033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 847              		.loc 1 1033 0 discriminator 1
 848 0030 12F0800F 		tst	r2, #128
 849 0034 F0D0     		beq	.L61
1037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 850              		.loc 1 1037 0
 851 0036 9A68     		ldr	r2, [r3, #8]
 852 0038 22F08002 		bic	r2, r2, #128
 853 003c 9A60     		str	r2, [r3, #8]
 854 003e EBE7     		b	.L61
 855              	.L65:
1040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 856              		.loc 1 1040 0 discriminator 1
 857 0040 0368     		ldr	r3, [r0]
 858 0042 9A68     		ldr	r2, [r3, #8]
1039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 859              		.loc 1 1039 0 discriminator 1
 860 0044 12F0400F 		tst	r2, #64
 861 0048 EBD0     		beq	.L62
1043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 862              		.loc 1 1043 0
 863 004a 1A68     		ldr	r2, [r3]
 864 004c 22F48072 		bic	r2, r2, #256
 865 0050 1A60     		str	r2, [r3]
1044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 866              		.loc 1 1044 0
 867 0052 0268     		ldr	r2, [r0]
 868 0054 9368     		ldr	r3, [r2, #8]
 869 0056 23F00103 		bic	r3, r3, #1
 870 005a 9360     		str	r3, [r2, #8]
1047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 871              		.loc 1 1047 0
 872 005c 0268     		ldr	r2, [r0]
 873 005e 9368     		ldr	r3, [r2, #8]
 874 0060 23F04003 		bic	r3, r3, #64
 875 0064 9360     		str	r3, [r2, #8]
 876 0066 DCE7     		b	.L62
 877              	.L63:
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 68


1031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 878              		.loc 1 1031 0
 879 0068 0220     		movs	r0, #2
 880              	.LVL70:
1054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 881              		.loc 1 1054 0
 882 006a 7047     		bx	lr
 883              		.cfi_endproc
 884              	.LFE150:
 886              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 887              		.align	1
 888              		.global	HAL_UART_DMAResume
 889              		.syntax unified
 890              		.thumb
 891              		.thumb_func
 892              		.fpu fpv5-d16
 894              	HAL_UART_DMAResume:
 895              	.LFB151:
1062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Process Locked */
 896              		.loc 1 1062 0
 897              		.cfi_startproc
 898              		@ args = 0, pretend = 0, frame = 0
 899              		@ frame_needed = 0, uses_anonymous_args = 0
 900              		@ link register save eliminated.
 901              	.LVL71:
1064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 902              		.loc 1 1064 0
 903 0000 90F87830 		ldrb	r3, [r0, #120]	@ zero_extendqisi2
 904 0004 012B     		cmp	r3, #1
 905 0006 2AD0     		beq	.L70
1064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 906              		.loc 1 1064 0 is_stmt 0 discriminator 2
 907 0008 0123     		movs	r3, #1
 908 000a 80F87830 		strb	r3, [r0, #120]
1066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 909              		.loc 1 1066 0 is_stmt 1 discriminator 2
 910 000e 90F87930 		ldrb	r3, [r0, #121]	@ zero_extendqisi2
 911 0012 DBB2     		uxtb	r3, r3
 912 0014 212B     		cmp	r3, #33
 913 0016 09D0     		beq	.L71
 914              	.L68:
1071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 915              		.loc 1 1071 0
 916 0018 90F87A30 		ldrb	r3, [r0, #122]	@ zero_extendqisi2
 917 001c DBB2     		uxtb	r3, r3
 918 001e 222B     		cmp	r3, #34
 919 0020 0AD0     		beq	.L72
 920              	.L69:
1085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 921              		.loc 1 1085 0
 922 0022 0023     		movs	r3, #0
 923 0024 80F87830 		strb	r3, [r0, #120]
1087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 924              		.loc 1 1087 0
 925 0028 1846     		mov	r0, r3
 926              	.LVL72:
 927 002a 7047     		bx	lr
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 69


 928              	.LVL73:
 929              	.L71:
1069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 930              		.loc 1 1069 0
 931 002c 0268     		ldr	r2, [r0]
 932 002e 9368     		ldr	r3, [r2, #8]
 933 0030 43F08003 		orr	r3, r3, #128
 934 0034 9360     		str	r3, [r2, #8]
 935 0036 EFE7     		b	.L68
 936              	.L72:
1074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 937              		.loc 1 1074 0
 938 0038 0368     		ldr	r3, [r0]
 939 003a 0822     		movs	r2, #8
 940 003c 1A62     		str	r2, [r3, #32]
1077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 941              		.loc 1 1077 0
 942 003e 0268     		ldr	r2, [r0]
 943 0040 1368     		ldr	r3, [r2]
 944 0042 43F48073 		orr	r3, r3, #256
 945 0046 1360     		str	r3, [r2]
1078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 946              		.loc 1 1078 0
 947 0048 0268     		ldr	r2, [r0]
 948 004a 9368     		ldr	r3, [r2, #8]
 949 004c 43F00103 		orr	r3, r3, #1
 950 0050 9360     		str	r3, [r2, #8]
1081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 951              		.loc 1 1081 0
 952 0052 0268     		ldr	r2, [r0]
 953 0054 9368     		ldr	r3, [r2, #8]
 954 0056 43F04003 		orr	r3, r3, #64
 955 005a 9360     		str	r3, [r2, #8]
 956 005c E1E7     		b	.L69
 957              	.L70:
1064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 958              		.loc 1 1064 0
 959 005e 0220     		movs	r0, #2
 960              	.LVL74:
1088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 961              		.loc 1 1088 0
 962 0060 7047     		bx	lr
 963              		.cfi_endproc
 964              	.LFE151:
 966              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 967              		.align	1
 968              		.global	HAL_UART_DMAStop
 969              		.syntax unified
 970              		.thumb
 971              		.thumb_func
 972              		.fpu fpv5-d16
 974              	HAL_UART_DMAStop:
 975              	.LFB152:
1096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
 976              		.loc 1 1096 0
 977              		.cfi_startproc
 978              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 70


 979              		@ frame_needed = 0, uses_anonymous_args = 0
 980              	.LVL75:
 981 0000 10B5     		push	{r4, lr}
 982              	.LCFI4:
 983              		.cfi_def_cfa_offset 8
 984              		.cfi_offset 4, -8
 985              		.cfi_offset 14, -4
 986 0002 0446     		mov	r4, r0
1105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 987              		.loc 1 1105 0
 988 0004 90F87930 		ldrb	r3, [r0, #121]	@ zero_extendqisi2
 989 0008 DBB2     		uxtb	r3, r3
 990 000a 212B     		cmp	r3, #33
 991 000c 06D0     		beq	.L79
 992              	.LVL76:
 993              	.L74:
1120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 994              		.loc 1 1120 0
 995 000e 94F87A30 		ldrb	r3, [r4, #122]	@ zero_extendqisi2
 996 0012 DBB2     		uxtb	r3, r3
 997 0014 222B     		cmp	r3, #34
 998 0016 12D0     		beq	.L80
 999              	.L76:
1135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1000              		.loc 1 1135 0
 1001 0018 0020     		movs	r0, #0
 1002 001a 10BD     		pop	{r4, pc}
 1003              	.LVL77:
 1004              	.L79:
1106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 1005              		.loc 1 1106 0 discriminator 1
 1006 001c 0368     		ldr	r3, [r0]
 1007 001e 9A68     		ldr	r2, [r3, #8]
1105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 1008              		.loc 1 1105 0 discriminator 1
 1009 0020 12F0800F 		tst	r2, #128
 1010 0024 F3D0     		beq	.L74
1108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1011              		.loc 1 1108 0
 1012 0026 9A68     		ldr	r2, [r3, #8]
 1013 0028 22F08002 		bic	r2, r2, #128
 1014 002c 9A60     		str	r2, [r3, #8]
1111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 1015              		.loc 1 1111 0
 1016 002e 006F     		ldr	r0, [r0, #112]
 1017              	.LVL78:
 1018 0030 08B1     		cbz	r0, .L75
1113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 1019              		.loc 1 1113 0
 1020 0032 FFF7FEFF 		bl	HAL_DMA_Abort
 1021              	.LVL79:
 1022              	.L75:
1116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 1023              		.loc 1 1116 0
 1024 0036 2046     		mov	r0, r4
 1025 0038 FFF7FEFF 		bl	UART_EndTxTransfer
 1026              	.LVL80:
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 71


 1027 003c E7E7     		b	.L74
 1028              	.L80:
1121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 1029              		.loc 1 1121 0 discriminator 1
 1030 003e 2368     		ldr	r3, [r4]
 1031 0040 9A68     		ldr	r2, [r3, #8]
1120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 1032              		.loc 1 1120 0 discriminator 1
 1033 0042 12F0400F 		tst	r2, #64
 1034 0046 E7D0     		beq	.L76
1123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1035              		.loc 1 1123 0
 1036 0048 9A68     		ldr	r2, [r3, #8]
 1037 004a 22F04002 		bic	r2, r2, #64
 1038 004e 9A60     		str	r2, [r3, #8]
1126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 1039              		.loc 1 1126 0
 1040 0050 606F     		ldr	r0, [r4, #116]
 1041 0052 08B1     		cbz	r0, .L77
1128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 1042              		.loc 1 1128 0
 1043 0054 FFF7FEFF 		bl	HAL_DMA_Abort
 1044              	.LVL81:
 1045              	.L77:
1131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 1046              		.loc 1 1131 0
 1047 0058 2046     		mov	r0, r4
 1048 005a FFF7FEFF 		bl	UART_EndRxTransfer
 1049              	.LVL82:
 1050 005e DBE7     		b	.L76
 1051              		.cfi_endproc
 1052              	.LFE152:
 1054              		.section	.text.HAL_UART_Abort,"ax",%progbits
 1055              		.align	1
 1056              		.global	HAL_UART_Abort
 1057              		.syntax unified
 1058              		.thumb
 1059              		.thumb_func
 1060              		.fpu fpv5-d16
 1062              	HAL_UART_Abort:
 1063              	.LFB153:
1150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable TXE, TC, RXNE, PE, RXFT, TXFT and ERR (Frame error, noise error, overrun error) interr
 1064              		.loc 1 1150 0
 1065              		.cfi_startproc
 1066              		@ args = 0, pretend = 0, frame = 0
 1067              		@ frame_needed = 0, uses_anonymous_args = 0
 1068              	.LVL83:
 1069 0000 10B5     		push	{r4, lr}
 1070              	.LCFI5:
 1071              		.cfi_def_cfa_offset 8
 1072              		.cfi_offset 4, -8
 1073              		.cfi_offset 14, -4
 1074 0002 0446     		mov	r4, r0
1152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE);
 1075              		.loc 1 1152 0
 1076 0004 0268     		ldr	r2, [r0]
 1077 0006 1368     		ldr	r3, [r2]
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 72


 1078 0008 23F4F073 		bic	r3, r3, #480
 1079 000c 1360     		str	r3, [r2]
1153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1080              		.loc 1 1153 0
 1081 000e 0268     		ldr	r2, [r0]
 1082 0010 9168     		ldr	r1, [r2, #8]
 1083 0012 194B     		ldr	r3, .L85
 1084 0014 0B40     		ands	r3, r3, r1
 1085 0016 9360     		str	r3, [r2, #8]
1156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 1086              		.loc 1 1156 0
 1087 0018 0368     		ldr	r3, [r0]
 1088 001a 9A68     		ldr	r2, [r3, #8]
 1089 001c 12F0800F 		tst	r2, #128
 1090 0020 0AD0     		beq	.L82
1158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1091              		.loc 1 1158 0
 1092 0022 9A68     		ldr	r2, [r3, #8]
 1093 0024 22F08002 		bic	r2, r2, #128
 1094 0028 9A60     		str	r2, [r3, #8]
1161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 1095              		.loc 1 1161 0
 1096 002a 036F     		ldr	r3, [r0, #112]
 1097 002c 23B1     		cbz	r3, .L82
1165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1098              		.loc 1 1165 0
 1099 002e 0022     		movs	r2, #0
 1100 0030 1A65     		str	r2, [r3, #80]
1167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 1101              		.loc 1 1167 0
 1102 0032 006F     		ldr	r0, [r0, #112]
 1103              	.LVL84:
 1104 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 1105              	.LVL85:
 1106              	.L82:
1172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 1107              		.loc 1 1172 0
 1108 0038 2368     		ldr	r3, [r4]
 1109 003a 9A68     		ldr	r2, [r3, #8]
 1110 003c 12F0400F 		tst	r2, #64
 1111 0040 0AD0     		beq	.L83
1174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1112              		.loc 1 1174 0
 1113 0042 9A68     		ldr	r2, [r3, #8]
 1114 0044 22F04002 		bic	r2, r2, #64
 1115 0048 9A60     		str	r2, [r3, #8]
1177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 1116              		.loc 1 1177 0
 1117 004a 636F     		ldr	r3, [r4, #116]
 1118 004c 23B1     		cbz	r3, .L83
1181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1119              		.loc 1 1181 0
 1120 004e 0022     		movs	r2, #0
 1121 0050 1A65     		str	r2, [r3, #80]
1183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 1122              		.loc 1 1183 0
 1123 0052 606F     		ldr	r0, [r4, #116]
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 73


 1124 0054 FFF7FEFF 		bl	HAL_DMA_Abort
 1125              	.LVL86:
 1126              	.L83:
1188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1127              		.loc 1 1188 0
 1128 0058 0020     		movs	r0, #0
 1129 005a A4F86200 		strh	r0, [r4, #98]	@ movhi
1189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1130              		.loc 1 1189 0
 1131 005e A4F86A00 		strh	r0, [r4, #106]	@ movhi
1192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1132              		.loc 1 1192 0
 1133 0062 2368     		ldr	r3, [r4]
 1134 0064 0F22     		movs	r2, #15
 1135 0066 1A62     		str	r2, [r3, #32]
1195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 1136              		.loc 1 1195 0
 1137 0068 2023     		movs	r3, #32
 1138 006a 84F87930 		strb	r3, [r4, #121]
1196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1139              		.loc 1 1196 0
 1140 006e 84F87A30 		strb	r3, [r4, #122]
1199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1141              		.loc 1 1199 0
 1142 0072 E067     		str	r0, [r4, #124]
1202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1143              		.loc 1 1202 0
 1144 0074 10BD     		pop	{r4, pc}
 1145              	.LVL87:
 1146              	.L86:
 1147 0076 00BF     		.align	2
 1148              	.L85:
 1149 0078 FEFF7FEF 		.word	-276824066
 1150              		.cfi_endproc
 1151              	.LFE153:
 1153              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 1154              		.align	1
 1155              		.global	HAL_UART_AbortTransmit
 1156              		.syntax unified
 1157              		.thumb
 1158              		.thumb_func
 1159              		.fpu fpv5-d16
 1161              	HAL_UART_AbortTransmit:
 1162              	.LFB154:
1217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable TCIE, TXEIE and TXFTIE interrupts */
 1163              		.loc 1 1217 0
 1164              		.cfi_startproc
 1165              		@ args = 0, pretend = 0, frame = 0
 1166              		@ frame_needed = 0, uses_anonymous_args = 0
 1167              	.LVL88:
 1168 0000 10B5     		push	{r4, lr}
 1169              	.LCFI6:
 1170              		.cfi_def_cfa_offset 8
 1171              		.cfi_offset 4, -8
 1172              		.cfi_offset 14, -4
 1173 0002 0446     		mov	r4, r0
1219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 74


 1174              		.loc 1 1219 0
 1175 0004 0268     		ldr	r2, [r0]
 1176 0006 1368     		ldr	r3, [r2]
 1177 0008 23F0C003 		bic	r3, r3, #192
 1178 000c 1360     		str	r3, [r2]
1220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1179              		.loc 1 1220 0
 1180 000e 0268     		ldr	r2, [r0]
 1181 0010 9368     		ldr	r3, [r2, #8]
 1182 0012 23F40003 		bic	r3, r3, #8388608
 1183 0016 9360     		str	r3, [r2, #8]
1223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 1184              		.loc 1 1223 0
 1185 0018 0368     		ldr	r3, [r0]
 1186 001a 9A68     		ldr	r2, [r3, #8]
 1187 001c 12F0800F 		tst	r2, #128
 1188 0020 0AD0     		beq	.L88
1225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1189              		.loc 1 1225 0
 1190 0022 9A68     		ldr	r2, [r3, #8]
 1191 0024 22F08002 		bic	r2, r2, #128
 1192 0028 9A60     		str	r2, [r3, #8]
1228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 1193              		.loc 1 1228 0
 1194 002a 036F     		ldr	r3, [r0, #112]
 1195 002c 23B1     		cbz	r3, .L88
1232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1196              		.loc 1 1232 0
 1197 002e 0022     		movs	r2, #0
 1198 0030 1A65     		str	r2, [r3, #80]
1234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 1199              		.loc 1 1234 0
 1200 0032 006F     		ldr	r0, [r0, #112]
 1201              	.LVL89:
 1202 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 1203              	.LVL90:
 1204              	.L88:
1239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1205              		.loc 1 1239 0
 1206 0038 0020     		movs	r0, #0
 1207 003a A4F86200 		strh	r0, [r4, #98]	@ movhi
1242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1208              		.loc 1 1242 0
 1209 003e 2023     		movs	r3, #32
 1210 0040 84F87930 		strb	r3, [r4, #121]
1245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1211              		.loc 1 1245 0
 1212 0044 10BD     		pop	{r4, pc}
 1213              		.cfi_endproc
 1214              	.LFE154:
 1216              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 1217              		.align	1
 1218              		.global	HAL_UART_AbortReceive
 1219              		.syntax unified
 1220              		.thumb
 1221              		.thumb_func
 1222              		.fpu fpv5-d16
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 75


 1224              	HAL_UART_AbortReceive:
 1225              	.LFB155:
1260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable PEIE, EIE, RXNEIE and RXFTIE interrupt */
 1226              		.loc 1 1260 0
 1227              		.cfi_startproc
 1228              		@ args = 0, pretend = 0, frame = 0
 1229              		@ frame_needed = 0, uses_anonymous_args = 0
 1230              	.LVL91:
 1231 0000 10B5     		push	{r4, lr}
 1232              	.LCFI7:
 1233              		.cfi_def_cfa_offset 8
 1234              		.cfi_offset 4, -8
 1235              		.cfi_offset 14, -4
 1236 0002 0446     		mov	r4, r0
1262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE);
 1237              		.loc 1 1262 0
 1238 0004 0268     		ldr	r2, [r0]
 1239 0006 1368     		ldr	r3, [r2]
 1240 0008 23F49073 		bic	r3, r3, #288
 1241 000c 1360     		str	r3, [r2]
1263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1242              		.loc 1 1263 0
 1243 000e 0268     		ldr	r2, [r0]
 1244 0010 9168     		ldr	r1, [r2, #8]
 1245 0012 0E4B     		ldr	r3, .L93
 1246 0014 0B40     		ands	r3, r3, r1
 1247 0016 9360     		str	r3, [r2, #8]
1266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 1248              		.loc 1 1266 0
 1249 0018 0368     		ldr	r3, [r0]
 1250 001a 9A68     		ldr	r2, [r3, #8]
 1251 001c 12F0400F 		tst	r2, #64
 1252 0020 0AD0     		beq	.L91
1268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1253              		.loc 1 1268 0
 1254 0022 9A68     		ldr	r2, [r3, #8]
 1255 0024 22F04002 		bic	r2, r2, #64
 1256 0028 9A60     		str	r2, [r3, #8]
1271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 1257              		.loc 1 1271 0
 1258 002a 436F     		ldr	r3, [r0, #116]
 1259 002c 23B1     		cbz	r3, .L91
1275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1260              		.loc 1 1275 0
 1261 002e 0022     		movs	r2, #0
 1262 0030 1A65     		str	r2, [r3, #80]
1277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 1263              		.loc 1 1277 0
 1264 0032 406F     		ldr	r0, [r0, #116]
 1265              	.LVL92:
 1266 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 1267              	.LVL93:
 1268              	.L91:
1282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1269              		.loc 1 1282 0
 1270 0038 0020     		movs	r0, #0
 1271 003a A4F86A00 		strh	r0, [r4, #106]	@ movhi
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 76


1285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1272              		.loc 1 1285 0
 1273 003e 2368     		ldr	r3, [r4]
 1274 0040 0F22     		movs	r2, #15
 1275 0042 1A62     		str	r2, [r3, #32]
1288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1276              		.loc 1 1288 0
 1277 0044 2023     		movs	r3, #32
 1278 0046 84F87A30 		strb	r3, [r4, #122]
1291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1279              		.loc 1 1291 0
 1280 004a 10BD     		pop	{r4, pc}
 1281              	.LVL94:
 1282              	.L94:
 1283              		.align	2
 1284              	.L93:
 1285 004c FEFFFFEF 		.word	-268435458
 1286              		.cfi_endproc
 1287              	.LFE155:
 1289              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 1290              		.align	1
 1291              		.weak	HAL_UART_TxCpltCallback
 1292              		.syntax unified
 1293              		.thumb
 1294              		.thumb_func
 1295              		.fpu fpv5-d16
 1297              	HAL_UART_TxCpltCallback:
 1298              	.LFB160:
1726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1299              		.loc 1 1726 0
 1300              		.cfi_startproc
 1301              		@ args = 0, pretend = 0, frame = 0
 1302              		@ frame_needed = 0, uses_anonymous_args = 0
 1303              		@ link register save eliminated.
 1304              	.LVL95:
1733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1305              		.loc 1 1733 0
 1306 0000 7047     		bx	lr
 1307              		.cfi_endproc
 1308              	.LFE160:
 1310              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 1311              		.align	1
 1312              		.syntax unified
 1313              		.thumb
 1314              		.thumb_func
 1315              		.fpu fpv5-d16
 1317              	UART_DMATransmitCplt:
 1318              	.LFB182:
2517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1319              		.loc 1 2517 0
 1320              		.cfi_startproc
 1321              		@ args = 0, pretend = 0, frame = 0
 1322              		@ frame_needed = 0, uses_anonymous_args = 0
 1323              	.LVL96:
 1324 0000 08B5     		push	{r3, lr}
 1325              	.LCFI8:
 1326              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 77


 1327              		.cfi_offset 3, -8
 1328              		.cfi_offset 14, -4
2518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1329              		.loc 1 2518 0
 1330 0002 836B     		ldr	r3, [r0, #56]
 1331              	.LVL97:
2521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 1332              		.loc 1 2521 0
 1333 0004 C269     		ldr	r2, [r0, #28]
 1334 0006 B2F5807F 		cmp	r2, #256
 1335 000a 0DD0     		beq	.L97
2523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1336              		.loc 1 2523 0
 1337 000c 0022     		movs	r2, #0
 1338 000e A3F86220 		strh	r2, [r3, #98]	@ movhi
2527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1339              		.loc 1 2527 0
 1340 0012 1968     		ldr	r1, [r3]
 1341 0014 8A68     		ldr	r2, [r1, #8]
 1342 0016 22F08002 		bic	r2, r2, #128
 1343 001a 8A60     		str	r2, [r1, #8]
2530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 1344              		.loc 1 2530 0
 1345 001c 1A68     		ldr	r2, [r3]
 1346 001e 1368     		ldr	r3, [r2]
 1347              	.LVL98:
 1348 0020 43F04003 		orr	r3, r3, #64
 1349 0024 1360     		str	r3, [r2]
 1350              	.LVL99:
 1351              	.L96:
2538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1352              		.loc 1 2538 0
 1353 0026 08BD     		pop	{r3, pc}
 1354              	.LVL100:
 1355              	.L97:
2535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 1356              		.loc 1 2535 0
 1357 0028 1846     		mov	r0, r3
 1358              	.LVL101:
 1359 002a FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1360              	.LVL102:
2538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1361              		.loc 1 2538 0
 1362 002e FAE7     		b	.L96
 1363              		.cfi_endproc
 1364              	.LFE182:
 1366              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 1367              		.align	1
 1368              		.syntax unified
 1369              		.thumb
 1370              		.thumb_func
 1371              		.fpu fpv5-d16
 1373              	UART_EndTransmit_IT:
 1374              	.LFB193:
2825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 78


2828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
2829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
2831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
2833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 1375              		.loc 1 2833 0
 1376              		.cfi_startproc
 1377              		@ args = 0, pretend = 0, frame = 0
 1378              		@ frame_needed = 0, uses_anonymous_args = 0
 1379              	.LVL103:
 1380 0000 08B5     		push	{r3, lr}
 1381              	.LCFI9:
 1382              		.cfi_def_cfa_offset 8
 1383              		.cfi_offset 3, -8
 1384              		.cfi_offset 14, -4
2834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
2835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 1385              		.loc 1 2835 0
 1386 0002 0168     		ldr	r1, [r0]
 1387 0004 0B68     		ldr	r3, [r1]
 1388 0006 23F04003 		bic	r3, r3, #64
 1389 000a 0B60     		str	r3, [r1]
2836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
2838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 1390              		.loc 1 2838 0
 1391 000c 2023     		movs	r3, #32
 1392 000e 80F87930 		strb	r3, [r0, #121]
2839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 1393              		.loc 1 2840 0
 1394 0012 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1395              	.LVL104:
2841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return HAL_OK;
2843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 1396              		.loc 1 2843 0
 1397 0016 0020     		movs	r0, #0
 1398 0018 08BD     		pop	{r3, pc}
 1399              		.cfi_endproc
 1400              	.LFE193:
 1402              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 1403              		.align	1
 1404              		.weak	HAL_UART_TxHalfCpltCallback
 1405              		.syntax unified
 1406              		.thumb
 1407              		.thumb_func
 1408              		.fpu fpv5-d16
 1410              	HAL_UART_TxHalfCpltCallback:
 1411              	.LFB161:
1741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1412              		.loc 1 1741 0
 1413              		.cfi_startproc
 1414              		@ args = 0, pretend = 0, frame = 0
 1415              		@ frame_needed = 0, uses_anonymous_args = 0
 1416              		@ link register save eliminated.
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 79


 1417              	.LVL105:
1748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1418              		.loc 1 1748 0
 1419 0000 7047     		bx	lr
 1420              		.cfi_endproc
 1421              	.LFE161:
 1423              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 1424              		.align	1
 1425              		.syntax unified
 1426              		.thumb
 1427              		.thumb_func
 1428              		.fpu fpv5-d16
 1430              	UART_DMATxHalfCplt:
 1431              	.LFB183:
2546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1432              		.loc 1 2546 0
 1433              		.cfi_startproc
 1434              		@ args = 0, pretend = 0, frame = 0
 1435              		@ frame_needed = 0, uses_anonymous_args = 0
 1436              	.LVL106:
 1437 0000 08B5     		push	{r3, lr}
 1438              	.LCFI10:
 1439              		.cfi_def_cfa_offset 8
 1440              		.cfi_offset 3, -8
 1441              		.cfi_offset 14, -4
 1442              	.LVL107:
2549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 1443              		.loc 1 2549 0
 1444 0002 806B     		ldr	r0, [r0, #56]
 1445              	.LVL108:
 1446 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 1447              	.LVL109:
2550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1448              		.loc 1 2550 0
 1449 0008 08BD     		pop	{r3, pc}
 1450              		.cfi_endproc
 1451              	.LFE183:
 1453              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1454              		.align	1
 1455              		.weak	HAL_UART_RxCpltCallback
 1456              		.syntax unified
 1457              		.thumb
 1458              		.thumb_func
 1459              		.fpu fpv5-d16
 1461              	HAL_UART_RxCpltCallback:
 1462              	.LFB162:
1756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1463              		.loc 1 1756 0
 1464              		.cfi_startproc
 1465              		@ args = 0, pretend = 0, frame = 0
 1466              		@ frame_needed = 0, uses_anonymous_args = 0
 1467              		@ link register save eliminated.
 1468              	.LVL110:
1763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1469              		.loc 1 1763 0
 1470 0000 7047     		bx	lr
 1471              		.cfi_endproc
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 80


 1472              	.LFE162:
 1474              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 1475              		.align	1
 1476              		.syntax unified
 1477              		.thumb
 1478              		.thumb_func
 1479              		.fpu fpv5-d16
 1481              	UART_DMAReceiveCplt:
 1482              	.LFB184:
2558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1483              		.loc 1 2558 0
 1484              		.cfi_startproc
 1485              		@ args = 0, pretend = 0, frame = 0
 1486              		@ frame_needed = 0, uses_anonymous_args = 0
 1487              	.LVL111:
 1488 0000 08B5     		push	{r3, lr}
 1489              	.LCFI11:
 1490              		.cfi_def_cfa_offset 8
 1491              		.cfi_offset 3, -8
 1492              		.cfi_offset 14, -4
2559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1493              		.loc 1 2559 0
 1494 0002 836B     		ldr	r3, [r0, #56]
 1495              	.LVL112:
2562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 1496              		.loc 1 2562 0
 1497 0004 C269     		ldr	r2, [r0, #28]
 1498 0006 B2F5807F 		cmp	r2, #256
 1499 000a 14D0     		beq	.L107
2564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1500              		.loc 1 2564 0
 1501 000c 0022     		movs	r2, #0
 1502 000e A3F86A20 		strh	r2, [r3, #106]	@ movhi
2567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1503              		.loc 1 2567 0
 1504 0012 1968     		ldr	r1, [r3]
 1505 0014 0A68     		ldr	r2, [r1]
 1506 0016 22F48072 		bic	r2, r2, #256
 1507 001a 0A60     		str	r2, [r1]
2568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1508              		.loc 1 2568 0
 1509 001c 1968     		ldr	r1, [r3]
 1510 001e 8A68     		ldr	r2, [r1, #8]
 1511 0020 22F00102 		bic	r2, r2, #1
 1512 0024 8A60     		str	r2, [r1, #8]
2572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1513              		.loc 1 2572 0
 1514 0026 1968     		ldr	r1, [r3]
 1515 0028 8A68     		ldr	r2, [r1, #8]
 1516 002a 22F04002 		bic	r2, r2, #64
 1517 002e 8A60     		str	r2, [r1, #8]
2575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 1518              		.loc 1 2575 0
 1519 0030 2022     		movs	r2, #32
 1520 0032 83F87A20 		strb	r2, [r3, #122]
 1521              	.L107:
2578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 81


 1522              		.loc 1 2578 0
 1523 0036 1846     		mov	r0, r3
 1524              	.LVL113:
 1525 0038 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 1526              	.LVL114:
2579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1527              		.loc 1 2579 0
 1528 003c 08BD     		pop	{r3, pc}
 1529              		.cfi_endproc
 1530              	.LFE184:
 1532              		.section	.text.UART_Receive_IT,"ax",%progbits
 1533              		.align	1
 1534              		.syntax unified
 1535              		.thumb
 1536              		.thumb_func
 1537              		.fpu fpv5-d16
 1539              	UART_Receive_IT:
 1540              	.LFB194:
2844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
2847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @brief  Receive an amount of data in interrupt mode.
2848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @note   Function is called under interruption only, once
2849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
2850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @param  huart: UART handle.
2851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   * @retval HAL status
2852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   */
2853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
2854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** {
 1541              		.loc 1 2854 0
 1542              		.cfi_startproc
 1543              		@ args = 0, pretend = 0, frame = 0
 1544              		@ frame_needed = 0, uses_anonymous_args = 0
 1545              	.LVL115:
2855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t* tmp;
2856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t  uhMask = huart->Mask;
 1546              		.loc 1 2856 0
 1547 0000 B0F86C20 		ldrh	r2, [r0, #108]
 1548              	.LVL116:
2857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t  uhdata;
2858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
2860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
 1549              		.loc 1 2860 0
 1550 0004 90F87A30 		ldrb	r3, [r0, #122]	@ zero_extendqisi2
 1551 0008 DBB2     		uxtb	r3, r3
 1552 000a 222B     		cmp	r3, #34
 1553 000c 31D1     		bne	.L110
2854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t* tmp;
 1554              		.loc 1 2854 0
 1555 000e 10B5     		push	{r4, lr}
 1556              	.LCFI12:
 1557              		.cfi_def_cfa_offset 8
 1558              		.cfi_offset 4, -8
 1559              		.cfi_offset 14, -4
2861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 82


 1560              		.loc 1 2862 0
 1561 0010 0368     		ldr	r3, [r0]
 1562 0012 9B8C     		ldrh	r3, [r3, #36]
 1563 0014 9BB2     		uxth	r3, r3
 1564              	.LVL117:
2863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 1565              		.loc 1 2863 0
 1566 0016 8168     		ldr	r1, [r0, #8]
 1567 0018 B1F5805F 		cmp	r1, #4096
 1568 001c 0ED0     		beq	.L119
 1569              	.L111:
2864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       tmp = (uint16_t*) huart->pRxBuffPtr ;
2866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       *tmp = (uint16_t)(uhdata & uhMask);
2867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->pRxBuffPtr +=2;
2868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     else
2870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       *huart->pRxBuffPtr++ = (uint8_t)(uhdata & (uint8_t)uhMask);
 1570              		.loc 1 2871 0
 1571 001e D2B2     		uxtb	r2, r2
 1572              	.LVL118:
 1573 0020 416E     		ldr	r1, [r0, #100]
 1574 0022 4C1C     		adds	r4, r1, #1
 1575 0024 4466     		str	r4, [r0, #100]
 1576 0026 1A40     		ands	r2, r2, r3
 1577 0028 0A70     		strb	r2, [r1]
 1578              	.LVL119:
 1579              	.L112:
2872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     if(--huart->RxXferCount == 0U)
 1580              		.loc 1 2874 0
 1581 002a B0F86A30 		ldrh	r3, [r0, #106]
 1582 002e 013B     		subs	r3, r3, #1
 1583 0030 9BB2     		uxth	r3, r3
 1584 0032 A0F86A30 		strh	r3, [r0, #106]	@ movhi
 1585 0036 5BB1     		cbz	r3, .L120
2875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
2876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
2877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
2878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
2880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
2883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
2884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
2886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return HAL_OK;
2888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
2889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_OK;
 1586              		.loc 1 2890 0
 1587 0038 0020     		movs	r0, #0
 1588              	.LVL120:
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 83


 1589              	.L113:
2891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   else
2893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
2894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
2895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
2896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
2897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return HAL_BUSY;
2898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
2899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 1590              		.loc 1 2899 0
 1591 003a 10BD     		pop	{r4, pc}
 1592              	.LVL121:
 1593              	.L119:
2863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 1594              		.loc 1 2863 0 discriminator 1
 1595 003c 0169     		ldr	r1, [r0, #16]
 1596 003e 0029     		cmp	r1, #0
 1597 0040 EDD1     		bne	.L111
2865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       *tmp = (uint16_t)(uhdata & uhMask);
 1598              		.loc 1 2865 0
 1599 0042 416E     		ldr	r1, [r0, #100]
 1600              	.LVL122:
2866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       huart->pRxBuffPtr +=2;
 1601              		.loc 1 2866 0
 1602 0044 1A40     		ands	r2, r2, r3
 1603              	.LVL123:
 1604 0046 0A80     		strh	r2, [r1]	@ movhi
 1605              	.LVL124:
2867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 1606              		.loc 1 2867 0
 1607 0048 436E     		ldr	r3, [r0, #100]
 1608              	.LVL125:
 1609 004a 0233     		adds	r3, r3, #2
 1610 004c 4366     		str	r3, [r0, #100]
 1611 004e ECE7     		b	.L112
 1612              	.LVL126:
 1613              	.L120:
2877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1614              		.loc 1 2877 0
 1615 0050 0268     		ldr	r2, [r0]
 1616 0052 1368     		ldr	r3, [r2]
 1617 0054 23F49073 		bic	r3, r3, #288
 1618 0058 1360     		str	r3, [r2]
2880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1619              		.loc 1 2880 0
 1620 005a 0268     		ldr	r2, [r0]
 1621 005c 9368     		ldr	r3, [r2, #8]
 1622 005e 23F00103 		bic	r3, r3, #1
 1623 0062 9360     		str	r3, [r2, #8]
2883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1624              		.loc 1 2883 0
 1625 0064 2023     		movs	r3, #32
 1626 0066 80F87A30 		strb	r3, [r0, #122]
2885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1627              		.loc 1 2885 0
 1628 006a FFF7FEFF 		bl	HAL_UART_RxCpltCallback
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 84


 1629              	.LVL127:
2887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 1630              		.loc 1 2887 0
 1631 006e 0020     		movs	r0, #0
 1632 0070 E3E7     		b	.L113
 1633              	.LVL128:
 1634              	.L110:
 1635              	.LCFI13:
 1636              		.cfi_def_cfa_offset 0
 1637              		.cfi_restore 4
 1638              		.cfi_restore 14
2895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1639              		.loc 1 2895 0
 1640 0072 0268     		ldr	r2, [r0]
 1641              	.LVL129:
 1642 0074 138B     		ldrh	r3, [r2, #24]
 1643 0076 43F00803 		orr	r3, r3, #8
 1644 007a 1383     		strh	r3, [r2, #24]	@ movhi
 1645              	.LVL130:
2897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 1646              		.loc 1 2897 0
 1647 007c 0220     		movs	r0, #2
 1648              	.LVL131:
 1649              		.loc 1 2899 0
 1650 007e 7047     		bx	lr
 1651              		.cfi_endproc
 1652              	.LFE194:
 1654              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 1655              		.align	1
 1656              		.weak	HAL_UART_RxHalfCpltCallback
 1657              		.syntax unified
 1658              		.thumb
 1659              		.thumb_func
 1660              		.fpu fpv5-d16
 1662              	HAL_UART_RxHalfCpltCallback:
 1663              	.LFB163:
1771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1664              		.loc 1 1771 0
 1665              		.cfi_startproc
 1666              		@ args = 0, pretend = 0, frame = 0
 1667              		@ frame_needed = 0, uses_anonymous_args = 0
 1668              		@ link register save eliminated.
 1669              	.LVL132:
1778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1670              		.loc 1 1778 0
 1671 0000 7047     		bx	lr
 1672              		.cfi_endproc
 1673              	.LFE163:
 1675              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 1676              		.align	1
 1677              		.syntax unified
 1678              		.thumb
 1679              		.thumb_func
 1680              		.fpu fpv5-d16
 1682              	UART_DMARxHalfCplt:
 1683              	.LFB185:
2587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 85


 1684              		.loc 1 2587 0
 1685              		.cfi_startproc
 1686              		@ args = 0, pretend = 0, frame = 0
 1687              		@ frame_needed = 0, uses_anonymous_args = 0
 1688              	.LVL133:
 1689 0000 08B5     		push	{r3, lr}
 1690              	.LCFI14:
 1691              		.cfi_def_cfa_offset 8
 1692              		.cfi_offset 3, -8
 1693              		.cfi_offset 14, -4
 1694              	.LVL134:
2590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 1695              		.loc 1 2590 0
 1696 0002 806B     		ldr	r0, [r0, #56]
 1697              	.LVL135:
 1698 0004 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 1699              	.LVL136:
2591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1700              		.loc 1 2591 0
 1701 0008 08BD     		pop	{r3, pc}
 1702              		.cfi_endproc
 1703              	.LFE185:
 1705              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 1706              		.align	1
 1707              		.weak	HAL_UART_ErrorCallback
 1708              		.syntax unified
 1709              		.thumb
 1710              		.thumb_func
 1711              		.fpu fpv5-d16
 1713              	HAL_UART_ErrorCallback:
 1714              	.LFB164:
1786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1715              		.loc 1 1786 0
 1716              		.cfi_startproc
 1717              		@ args = 0, pretend = 0, frame = 0
 1718              		@ frame_needed = 0, uses_anonymous_args = 0
 1719              		@ link register save eliminated.
 1720              	.LVL137:
1793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1721              		.loc 1 1793 0
 1722 0000 7047     		bx	lr
 1723              		.cfi_endproc
 1724              	.LFE164:
 1726              		.section	.text.UART_DMAError,"ax",%progbits
 1727              		.align	1
 1728              		.syntax unified
 1729              		.thumb
 1730              		.thumb_func
 1731              		.fpu fpv5-d16
 1733              	UART_DMAError:
 1734              	.LFB186:
2599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 1735              		.loc 1 2599 0
 1736              		.cfi_startproc
 1737              		@ args = 0, pretend = 0, frame = 0
 1738              		@ frame_needed = 0, uses_anonymous_args = 0
 1739              	.LVL138:
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 86


 1740 0000 10B5     		push	{r4, lr}
 1741              	.LCFI15:
 1742              		.cfi_def_cfa_offset 8
 1743              		.cfi_offset 4, -8
 1744              		.cfi_offset 14, -4
2600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1745              		.loc 1 2600 0
 1746 0002 846B     		ldr	r4, [r0, #56]
 1747              	.LVL139:
2603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 1748              		.loc 1 2603 0
 1749 0004 FFF7FEFF 		bl	HAL_DMA_GetError
 1750              	.LVL140:
 1751 0008 0228     		cmp	r0, #2
 1752 000a 10D0     		beq	.L125
2606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) )
 1753              		.loc 1 2606 0
 1754 000c 94F87930 		ldrb	r3, [r4, #121]	@ zero_extendqisi2
 1755 0010 DBB2     		uxtb	r3, r3
 1756 0012 212B     		cmp	r3, #33
 1757 0014 0CD0     		beq	.L130
 1758              	.L127:
2614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) )
 1759              		.loc 1 2614 0
 1760 0016 94F87A30 		ldrb	r3, [r4, #122]	@ zero_extendqisi2
 1761 001a DBB2     		uxtb	r3, r3
 1762 001c 222B     		cmp	r3, #34
 1763 001e 13D0     		beq	.L131
 1764              	.L128:
2621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UART_ErrorCallback(huart);
 1765              		.loc 1 2621 0
 1766 0020 E36F     		ldr	r3, [r4, #124]
 1767 0022 43F01003 		orr	r3, r3, #16
 1768 0026 E367     		str	r3, [r4, #124]
2622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 1769              		.loc 1 2622 0
 1770 0028 2046     		mov	r0, r4
 1771 002a FFF7FEFF 		bl	HAL_UART_ErrorCallback
 1772              	.LVL141:
 1773              	.L125:
2624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1774              		.loc 1 2624 0
 1775 002e 10BD     		pop	{r4, pc}
 1776              	.LVL142:
 1777              	.L130:
2607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 1778              		.loc 1 2607 0
 1779 0030 2368     		ldr	r3, [r4]
 1780 0032 9B68     		ldr	r3, [r3, #8]
 1781 0034 13F0800F 		tst	r3, #128
 1782 0038 EDD0     		beq	.L127
2609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       UART_EndTxTransfer(huart);
 1783              		.loc 1 2609 0
 1784 003a 0023     		movs	r3, #0
 1785 003c A4F86230 		strh	r3, [r4, #98]	@ movhi
2610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 1786              		.loc 1 2610 0
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 87


 1787 0040 2046     		mov	r0, r4
 1788 0042 FFF7FEFF 		bl	UART_EndTxTransfer
 1789              	.LVL143:
 1790 0046 E6E7     		b	.L127
 1791              	.L131:
2615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 1792              		.loc 1 2615 0
 1793 0048 2368     		ldr	r3, [r4]
 1794 004a 9B68     		ldr	r3, [r3, #8]
 1795 004c 13F0400F 		tst	r3, #64
 1796 0050 E6D0     		beq	.L128
2617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       UART_EndRxTransfer(huart);
 1797              		.loc 1 2617 0
 1798 0052 0023     		movs	r3, #0
 1799 0054 A4F86A30 		strh	r3, [r4, #106]	@ movhi
2618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 1800              		.loc 1 2618 0
 1801 0058 2046     		mov	r0, r4
 1802 005a FFF7FEFF 		bl	UART_EndRxTransfer
 1803              	.LVL144:
 1804 005e DFE7     		b	.L128
 1805              		.cfi_endproc
 1806              	.LFE186:
 1808              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 1809              		.align	1
 1810              		.global	HAL_UART_IRQHandler
 1811              		.syntax unified
 1812              		.thumb
 1813              		.thumb_func
 1814              		.fpu fpv5-d16
 1816              	HAL_UART_IRQHandler:
 1817              	.LFB159:
1562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 1818              		.loc 1 1562 0
 1819              		.cfi_startproc
 1820              		@ args = 0, pretend = 0, frame = 0
 1821              		@ frame_needed = 0, uses_anonymous_args = 0
 1822              	.LVL145:
 1823 0000 70B5     		push	{r4, r5, r6, lr}
 1824              	.LCFI16:
 1825              		.cfi_def_cfa_offset 16
 1826              		.cfi_offset 4, -16
 1827              		.cfi_offset 5, -12
 1828              		.cfi_offset 6, -8
 1829              		.cfi_offset 14, -4
 1830 0002 0446     		mov	r4, r0
1563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 1831              		.loc 1 1563 0
 1832 0004 0268     		ldr	r2, [r0]
 1833 0006 D369     		ldr	r3, [r2, #28]
 1834              	.LVL146:
1564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 1835              		.loc 1 1564 0
 1836 0008 1068     		ldr	r0, [r2]
 1837              	.LVL147:
1565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t errorflags;
 1838              		.loc 1 1565 0
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 88


 1839 000a 9168     		ldr	r1, [r2, #8]
 1840              	.LVL148:
1570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 1841              		.loc 1 1570 0
 1842 000c 13F00F05 		ands	r5, r3, #15
 1843              	.LVL149:
 1844 0010 08D1     		bne	.L133
1573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      && (   ((cr1its & USART_CR1_RXNEIE) != RESET)
 1845              		.loc 1 1573 0
 1846 0012 13F0200F 		tst	r3, #32
 1847 0016 05D0     		beq	.L133
1574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          || ((cr3its & USART_CR3_RXFTIE) != RESET)) )
 1848              		.loc 1 1574 0
 1849 0018 10F0200F 		tst	r0, #32
 1850 001c 6BD1     		bne	.L134
1575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 1851              		.loc 1 1575 0
 1852 001e 11F0805F 		tst	r1, #268435456
 1853 0022 68D1     		bne	.L134
 1854              	.L133:
1583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      && (   ((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != RESET)
 1855              		.loc 1 1583 0
 1856 0024 002D     		cmp	r5, #0
 1857 0026 78D0     		beq	.L136
1584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)))
 1858              		.loc 1 1584 0
 1859 0028 564D     		ldr	r5, .L156
 1860              	.LVL150:
 1861 002a 0D40     		ands	r5, r1, r5
 1862 002c 02D1     		bne	.L137
1585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 1863              		.loc 1 1585 0
 1864 002e 10F4907F 		tst	r0, #288
 1865 0032 72D0     		beq	.L136
 1866              	.L137:
1588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 1867              		.loc 1 1588 0
 1868 0034 13F0010F 		tst	r3, #1
 1869 0038 07D0     		beq	.L138
1588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 1870              		.loc 1 1588 0 is_stmt 0 discriminator 1
 1871 003a 10F4807F 		tst	r0, #256
 1872 003e 04D0     		beq	.L138
1590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1873              		.loc 1 1590 0 is_stmt 1
 1874 0040 0126     		movs	r6, #1
 1875 0042 1662     		str	r6, [r2, #32]
1592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 1876              		.loc 1 1592 0
 1877 0044 E26F     		ldr	r2, [r4, #124]
 1878 0046 3243     		orrs	r2, r2, r6
 1879 0048 E267     		str	r2, [r4, #124]
 1880              	.L138:
1596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 1881              		.loc 1 1596 0
 1882 004a 13F0020F 		tst	r3, #2
 1883 004e 09D0     		beq	.L139
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 89


1596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 1884              		.loc 1 1596 0 is_stmt 0 discriminator 1
 1885 0050 11F0010F 		tst	r1, #1
 1886 0054 06D0     		beq	.L139
1598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1887              		.loc 1 1598 0 is_stmt 1
 1888 0056 2268     		ldr	r2, [r4]
 1889 0058 0226     		movs	r6, #2
 1890 005a 1662     		str	r6, [r2, #32]
1600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 1891              		.loc 1 1600 0
 1892 005c E26F     		ldr	r2, [r4, #124]
 1893 005e 42F00402 		orr	r2, r2, #4
 1894 0062 E267     		str	r2, [r4, #124]
 1895              	.L139:
1604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 1896              		.loc 1 1604 0
 1897 0064 13F0040F 		tst	r3, #4
 1898 0068 09D0     		beq	.L140
1604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 1899              		.loc 1 1604 0 is_stmt 0 discriminator 1
 1900 006a 11F0010F 		tst	r1, #1
 1901 006e 06D0     		beq	.L140
1606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1902              		.loc 1 1606 0 is_stmt 1
 1903 0070 2268     		ldr	r2, [r4]
 1904 0072 0426     		movs	r6, #4
 1905 0074 1662     		str	r6, [r2, #32]
1608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 1906              		.loc 1 1608 0
 1907 0076 E26F     		ldr	r2, [r4, #124]
 1908 0078 42F00202 		orr	r2, r2, #2
 1909 007c E267     		str	r2, [r4, #124]
 1910              	.L140:
1612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         &&(  ((cr1its & USART_CR1_RXNEIE) != RESET) ||
 1911              		.loc 1 1612 0
 1912 007e 13F0080F 		tst	r3, #8
 1913 0082 09D0     		beq	.L141
1613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****              ((cr3its & USART_CR3_RXFTIE) != RESET) ||
 1914              		.loc 1 1613 0
 1915 0084 10F0200F 		tst	r0, #32
 1916 0088 00D1     		bne	.L142
1614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****              ((cr3its & USART_CR3_EIE) != RESET)) )
 1917              		.loc 1 1614 0
 1918 008a 2DB1     		cbz	r5, .L141
 1919              	.L142:
1617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1920              		.loc 1 1617 0
 1921 008c 2268     		ldr	r2, [r4]
 1922 008e 0825     		movs	r5, #8
 1923 0090 1562     		str	r5, [r2, #32]
1619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 1924              		.loc 1 1619 0
 1925 0092 E26F     		ldr	r2, [r4, #124]
 1926 0094 2A43     		orrs	r2, r2, r5
 1927 0096 E267     		str	r2, [r4, #124]
 1928              	.L141:
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 90


1623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 1929              		.loc 1 1623 0
 1930 0098 E26F     		ldr	r2, [r4, #124]
 1931 009a 7AB3     		cbz	r2, .L132
1626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          && (   ((cr1its & USART_CR1_RXNEIE) != RESET)
 1932              		.loc 1 1626 0
 1933 009c 13F0200F 		tst	r3, #32
 1934 00a0 08D0     		beq	.L143
1627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****              || ((cr3its & USART_CR3_RXFTIE) != RESET)) )
 1935              		.loc 1 1627 0
 1936 00a2 10F0200F 		tst	r0, #32
 1937 00a6 02D1     		bne	.L144
1628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 1938              		.loc 1 1628 0
 1939 00a8 11F0805F 		tst	r1, #268435456
 1940 00ac 02D0     		beq	.L143
 1941              	.L144:
1630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 1942              		.loc 1 1630 0
 1943 00ae 2046     		mov	r0, r4
 1944              	.LVL151:
 1945 00b0 FFF7FEFF 		bl	UART_Receive_IT
 1946              	.LVL152:
 1947              	.L143:
1635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 1948              		.loc 1 1635 0
 1949 00b4 E36F     		ldr	r3, [r4, #124]
 1950 00b6 13F0080F 		tst	r3, #8
 1951 00ba 04D1     		bne	.L145
1636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 1952              		.loc 1 1636 0 discriminator 1
 1953 00bc 2368     		ldr	r3, [r4]
 1954 00be 9B68     		ldr	r3, [r3, #8]
1635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 1955              		.loc 1 1635 0 discriminator 1
 1956 00c0 13F0400F 		tst	r3, #64
 1957 00c4 23D0     		beq	.L146
 1958              	.L145:
1641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1959              		.loc 1 1641 0
 1960 00c6 2046     		mov	r0, r4
 1961 00c8 FFF7FEFF 		bl	UART_EndRxTransfer
 1962              	.LVL153:
1644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
 1963              		.loc 1 1644 0
 1964 00cc 2368     		ldr	r3, [r4]
 1965 00ce 9A68     		ldr	r2, [r3, #8]
 1966 00d0 12F0400F 		tst	r2, #64
 1967 00d4 17D0     		beq	.L147
1646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1968              		.loc 1 1646 0
 1969 00d6 9A68     		ldr	r2, [r3, #8]
 1970 00d8 22F04002 		bic	r2, r2, #64
 1971 00dc 9A60     		str	r2, [r3, #8]
1649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           {
 1972              		.loc 1 1649 0
 1973 00de 636F     		ldr	r3, [r4, #116]
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 91


 1974 00e0 6BB1     		cbz	r3, .L148
1653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1975              		.loc 1 1653 0
 1976 00e2 294A     		ldr	r2, .L156+4
 1977 00e4 1A65     		str	r2, [r3, #80]
1656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             {
 1978              		.loc 1 1656 0
 1979 00e6 606F     		ldr	r0, [r4, #116]
 1980 00e8 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 1981              	.LVL154:
 1982 00ec 30B1     		cbz	r0, .L132
1659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****             }
 1983              		.loc 1 1659 0
 1984 00ee 606F     		ldr	r0, [r4, #116]
 1985 00f0 036D     		ldr	r3, [r0, #80]
 1986 00f2 9847     		blx	r3
 1987              	.LVL155:
 1988 00f4 02E0     		b	.L132
 1989              	.LVL156:
 1990              	.L134:
1577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       return;
 1991              		.loc 1 1577 0
 1992 00f6 2046     		mov	r0, r4
 1993              	.LVL157:
 1994 00f8 FFF7FEFF 		bl	UART_Receive_IT
 1995              	.LVL158:
 1996              	.L132:
1718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 1997              		.loc 1 1718 0
 1998 00fc 70BD     		pop	{r4, r5, r6, pc}
 1999              	.LVL159:
 2000              	.L148:
1665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           }
 2001              		.loc 1 1665 0
 2002 00fe 2046     		mov	r0, r4
 2003 0100 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2004              	.LVL160:
 2005 0104 FAE7     		b	.L132
 2006              	.L147:
1671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 2007              		.loc 1 1671 0
 2008 0106 2046     		mov	r0, r4
 2009 0108 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2010              	.LVL161:
 2011 010c F6E7     		b	.L132
 2012              	.L146:
1678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 2013              		.loc 1 1678 0
 2014 010e 2046     		mov	r0, r4
 2015 0110 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2016              	.LVL162:
1679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 2017              		.loc 1 1679 0
 2018 0114 0023     		movs	r3, #0
 2019 0116 E367     		str	r3, [r4, #124]
 2020 0118 F0E7     		b	.L132
 2021              	.LVL163:
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 92


 2022              	.L136:
1687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 2023              		.loc 1 1687 0
 2024 011a 13F4801F 		tst	r3, #1048576
 2025 011e 02D0     		beq	.L149
1687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 2026              		.loc 1 1687 0 is_stmt 0 discriminator 1
 2027 0120 11F4800F 		tst	r1, #4194304
 2028 0124 19D1     		bne	.L154
 2029              	.L149:
1698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****      && (   ((cr1its & USART_CR1_TXEIE) != RESET)
 2030              		.loc 1 1698 0 is_stmt 1
 2031 0126 13F0800F 		tst	r3, #128
 2032 012a 05D0     		beq	.L150
1699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****          || ((cr3its & USART_CR3_TXFTIE) != RESET)) )
 2033              		.loc 1 1699 0
 2034 012c 10F0800F 		tst	r0, #128
 2035 0130 1FD1     		bne	.L151
1700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 2036              		.loc 1 1700 0
 2037 0132 11F4000F 		tst	r1, #8388608
 2038 0136 1CD1     		bne	.L151
 2039              	.L150:
1707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 2040              		.loc 1 1707 0
 2041 0138 13F0400F 		tst	r3, #64
 2042 013c 02D0     		beq	.L152
1707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 2043              		.loc 1 1707 0 is_stmt 0 discriminator 1
 2044 013e 10F0400F 		tst	r0, #64
 2045 0142 1AD1     		bne	.L155
 2046              	.L152:
1714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 2047              		.loc 1 1714 0 is_stmt 1
 2048 0144 13F4000F 		tst	r3, #8388608
 2049 0148 D8D0     		beq	.L132
1714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 2050              		.loc 1 1714 0 is_stmt 0 discriminator 1
 2051 014a 10F0804F 		tst	r0, #1073741824
 2052 014e D5D0     		beq	.L132
1716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 2053              		.loc 1 1716 0 is_stmt 1
 2054 0150 1368     		ldr	r3, [r2]
 2055              	.LVL164:
 2056 0152 23F08043 		bic	r3, r3, #1073741824
 2057 0156 1360     		str	r3, [r2]
 2058 0158 D0E7     		b	.L132
 2059              	.LVL165:
 2060              	.L154:
1689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* Set the UART state ready to be able to start again the process */
 2061              		.loc 1 1689 0
 2062 015a 4FF48013 		mov	r3, #1048576
 2063              	.LVL166:
 2064 015e 1362     		str	r3, [r2, #32]
1691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 2065              		.loc 1 1691 0
 2066 0160 2023     		movs	r3, #32
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 93


 2067 0162 84F87930 		strb	r3, [r4, #121]
1692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
 2068              		.loc 1 1692 0
 2069 0166 84F87A30 		strb	r3, [r4, #122]
1693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return;
 2070              		.loc 1 1693 0
 2071 016a 2046     		mov	r0, r4
 2072              	.LVL167:
 2073 016c FFF7FEFF 		bl	HAL_UARTEx_WakeupCallback
 2074              	.LVL168:
1694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 2075              		.loc 1 1694 0
 2076 0170 C4E7     		b	.L132
 2077              	.LVL169:
 2078              	.L151:
1702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return;
 2079              		.loc 1 1702 0
 2080 0172 2046     		mov	r0, r4
 2081              	.LVL170:
 2082 0174 FFF7FEFF 		bl	UART_Transmit_IT
 2083              	.LVL171:
1703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 2084              		.loc 1 1703 0
 2085 0178 C0E7     		b	.L132
 2086              	.LVL172:
 2087              	.L155:
1709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     return;
 2088              		.loc 1 1709 0
 2089 017a 2046     		mov	r0, r4
 2090              	.LVL173:
 2091 017c FFF7FEFF 		bl	UART_EndTransmit_IT
 2092              	.LVL174:
1710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 2093              		.loc 1 1710 0
 2094 0180 BCE7     		b	.L132
 2095              	.L157:
 2096 0182 00BF     		.align	2
 2097              	.L156:
 2098 0184 01000010 		.word	268435457
 2099 0188 00000000 		.word	UART_DMAAbortOnError
 2100              		.cfi_endproc
 2101              	.LFE159:
 2103              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 2104              		.align	1
 2105              		.syntax unified
 2106              		.thumb
 2107              		.thumb_func
 2108              		.fpu fpv5-d16
 2110              	UART_DMAAbortOnError:
 2111              	.LFB187:
2633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 2112              		.loc 1 2633 0
 2113              		.cfi_startproc
 2114              		@ args = 0, pretend = 0, frame = 0
 2115              		@ frame_needed = 0, uses_anonymous_args = 0
 2116              	.LVL175:
 2117 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 94


 2118              	.LCFI17:
 2119              		.cfi_def_cfa_offset 8
 2120              		.cfi_offset 3, -8
 2121              		.cfi_offset 14, -4
2634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2122              		.loc 1 2634 0
 2123 0002 806B     		ldr	r0, [r0, #56]
 2124              	.LVL176:
2635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->TxXferCount = 0U;
 2125              		.loc 1 2635 0
 2126 0004 0023     		movs	r3, #0
 2127 0006 A0F86A30 		strh	r3, [r0, #106]	@ movhi
2636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2128              		.loc 1 2636 0
 2129 000a A0F86230 		strh	r3, [r0, #98]	@ movhi
2638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 2130              		.loc 1 2638 0
 2131 000e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2132              	.LVL177:
2639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2133              		.loc 1 2639 0
 2134 0012 08BD     		pop	{r3, pc}
 2135              		.cfi_endproc
 2136              	.LFE187:
 2138              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 2139              		.align	1
 2140              		.weak	HAL_UART_AbortCpltCallback
 2141              		.syntax unified
 2142              		.thumb
 2143              		.thumb_func
 2144              		.fpu fpv5-d16
 2146              	HAL_UART_AbortCpltCallback:
 2147              	.LFB165:
1801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2148              		.loc 1 1801 0
 2149              		.cfi_startproc
 2150              		@ args = 0, pretend = 0, frame = 0
 2151              		@ frame_needed = 0, uses_anonymous_args = 0
 2152              		@ link register save eliminated.
 2153              	.LVL178:
1808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2154              		.loc 1 1808 0
 2155 0000 7047     		bx	lr
 2156              		.cfi_endproc
 2157              	.LFE165:
 2159              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 2160              		.align	1
 2161              		.global	HAL_UART_Abort_IT
 2162              		.syntax unified
 2163              		.thumb
 2164              		.thumb_func
 2165              		.fpu fpv5-d16
 2167              	HAL_UART_Abort_IT:
 2168              	.LFB156:
1308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 2169              		.loc 1 1308 0
 2170              		.cfi_startproc
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 95


 2171              		@ args = 0, pretend = 0, frame = 0
 2172              		@ frame_needed = 0, uses_anonymous_args = 0
 2173              	.LVL179:
 2174 0000 10B5     		push	{r4, lr}
 2175              	.LCFI18:
 2176              		.cfi_def_cfa_offset 8
 2177              		.cfi_offset 4, -8
 2178              		.cfi_offset 14, -4
 2179 0002 0446     		mov	r4, r0
 2180              	.LVL180:
1312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE);
 2181              		.loc 1 1312 0
 2182 0004 0268     		ldr	r2, [r0]
 2183 0006 1368     		ldr	r3, [r2]
 2184 0008 23F4B073 		bic	r3, r3, #352
 2185 000c 1360     		str	r3, [r2]
1313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2186              		.loc 1 1313 0
 2187 000e 0268     		ldr	r2, [r0]
 2188 0010 9168     		ldr	r1, [r2, #8]
 2189 0012 2D4B     		ldr	r3, .L174
 2190 0014 0B40     		ands	r3, r3, r1
 2191 0016 9360     		str	r3, [r2, #8]
1318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 2192              		.loc 1 1318 0
 2193 0018 036F     		ldr	r3, [r0, #112]
 2194 001a 33B1     		cbz	r3, .L162
1322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2195              		.loc 1 1322 0
 2196 001c 0268     		ldr	r2, [r0]
 2197 001e 9268     		ldr	r2, [r2, #8]
 2198 0020 12F0800F 		tst	r2, #128
 2199 0024 1DD0     		beq	.L163
1324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 2200              		.loc 1 1324 0
 2201 0026 294A     		ldr	r2, .L174+4
 2202 0028 1A65     		str	r2, [r3, #80]
 2203              	.L162:
1332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 2204              		.loc 1 1332 0
 2205 002a 636F     		ldr	r3, [r4, #116]
 2206 002c 33B1     		cbz	r3, .L164
1336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2207              		.loc 1 1336 0
 2208 002e 2268     		ldr	r2, [r4]
 2209 0030 9268     		ldr	r2, [r2, #8]
 2210 0032 12F0400F 		tst	r2, #64
 2211 0036 17D0     		beq	.L165
1338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 2212              		.loc 1 1338 0
 2213 0038 254A     		ldr	r2, .L174+8
 2214 003a 1A65     		str	r2, [r3, #80]
 2215              	.L164:
1347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 2216              		.loc 1 1347 0
 2217 003c 2368     		ldr	r3, [r4]
 2218 003e 9A68     		ldr	r2, [r3, #8]
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 96


 2219 0040 12F0800F 		tst	r2, #128
 2220 0044 13D0     		beq	.L170
1350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2221              		.loc 1 1350 0
 2222 0046 9A68     		ldr	r2, [r3, #8]
 2223 0048 22F08002 		bic	r2, r2, #128
 2224 004c 9A60     		str	r2, [r3, #8]
1353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2225              		.loc 1 1353 0
 2226 004e 206F     		ldr	r0, [r4, #112]
 2227              	.LVL181:
 2228 0050 88B3     		cbz	r0, .L171
1359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 2229              		.loc 1 1359 0
 2230 0052 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2231              	.LVL182:
 2232 0056 80B3     		cbz	r0, .L172
1361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 2233              		.loc 1 1361 0
 2234 0058 236F     		ldr	r3, [r4, #112]
 2235 005a 0022     		movs	r2, #0
 2236 005c 1A65     		str	r2, [r3, #80]
1309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2237              		.loc 1 1309 0
 2238 005e 0121     		movs	r1, #1
 2239 0060 06E0     		b	.L166
 2240              	.LVL183:
 2241              	.L163:
1328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 2242              		.loc 1 1328 0
 2243 0062 0022     		movs	r2, #0
 2244 0064 1A65     		str	r2, [r3, #80]
 2245 0066 E0E7     		b	.L162
 2246              	.L165:
1342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 2247              		.loc 1 1342 0
 2248 0068 0022     		movs	r2, #0
 2249 006a 1A65     		str	r2, [r3, #80]
 2250 006c E6E7     		b	.L164
 2251              	.L170:
1309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2252              		.loc 1 1309 0
 2253 006e 0121     		movs	r1, #1
 2254              	.LVL184:
 2255              	.L166:
1371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 2256              		.loc 1 1371 0
 2257 0070 2368     		ldr	r3, [r4]
 2258 0072 9A68     		ldr	r2, [r3, #8]
 2259 0074 12F0400F 		tst	r2, #64
 2260 0078 21D0     		beq	.L167
1373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2261              		.loc 1 1373 0
 2262 007a 9A68     		ldr	r2, [r3, #8]
 2263 007c 22F04002 		bic	r2, r2, #64
 2264 0080 9A60     		str	r2, [r3, #8]
1376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 97


 2265              		.loc 1 1376 0
 2266 0082 606F     		ldr	r0, [r4, #116]
 2267 0084 D8B1     		cbz	r0, .L167
1382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 2268              		.loc 1 1382 0
 2269 0086 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2270              	.LVL185:
 2271 008a D0B1     		cbz	r0, .L168
1384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         abortcplt = 1U;
 2272              		.loc 1 1384 0
 2273 008c 636F     		ldr	r3, [r4, #116]
 2274 008e 0022     		movs	r2, #0
 2275 0090 1A65     		str	r2, [r3, #80]
 2276              	.LVL186:
 2277              	.L169:
1398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferCount = 0U;
 2278              		.loc 1 1398 0
 2279 0092 0023     		movs	r3, #0
 2280 0094 A4F86230 		strh	r3, [r4, #98]	@ movhi
1399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2281              		.loc 1 1399 0
 2282 0098 A4F86A30 		strh	r3, [r4, #106]	@ movhi
1402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2283              		.loc 1 1402 0
 2284 009c E367     		str	r3, [r4, #124]
1405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2285              		.loc 1 1405 0
 2286 009e 2368     		ldr	r3, [r4]
 2287 00a0 0F22     		movs	r2, #15
 2288 00a2 1A62     		str	r2, [r3, #32]
1408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 2289              		.loc 1 1408 0
 2290 00a4 2023     		movs	r3, #32
 2291 00a6 84F87930 		strb	r3, [r4, #121]
1409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2292              		.loc 1 1409 0
 2293 00aa 84F87A30 		strb	r3, [r4, #122]
1412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 2294              		.loc 1 1412 0
 2295 00ae 2046     		mov	r0, r4
 2296 00b0 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2297              	.LVL187:
 2298 00b4 05E0     		b	.L168
 2299              	.LVL188:
 2300              	.L171:
1309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2301              		.loc 1 1309 0
 2302 00b6 0121     		movs	r1, #1
 2303 00b8 DAE7     		b	.L166
 2304              	.L172:
1365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 2305              		.loc 1 1365 0
 2306 00ba 0021     		movs	r1, #0
 2307 00bc D8E7     		b	.L166
 2308              	.LVL189:
 2309              	.L167:
1395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 98


 2310              		.loc 1 1395 0
 2311 00be 0029     		cmp	r1, #0
 2312 00c0 E7D1     		bne	.L169
 2313              	.LVL190:
 2314              	.L168:
1416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2315              		.loc 1 1416 0
 2316 00c2 0020     		movs	r0, #0
 2317 00c4 10BD     		pop	{r4, pc}
 2318              	.LVL191:
 2319              	.L175:
 2320 00c6 00BF     		.align	2
 2321              	.L174:
 2322 00c8 FEFF7FEF 		.word	-276824066
 2323 00cc 00000000 		.word	UART_DMATxAbortCallback
 2324 00d0 00000000 		.word	UART_DMARxAbortCallback
 2325              		.cfi_endproc
 2326              	.LFE156:
 2328              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 2329              		.align	1
 2330              		.syntax unified
 2331              		.thumb
 2332              		.thumb_func
 2333              		.fpu fpv5-d16
 2335              	UART_DMARxAbortCallback:
 2336              	.LFB189:
2692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
 2337              		.loc 1 2692 0
 2338              		.cfi_startproc
 2339              		@ args = 0, pretend = 0, frame = 0
 2340              		@ frame_needed = 0, uses_anonymous_args = 0
 2341              	.LVL192:
 2342 0000 08B5     		push	{r3, lr}
 2343              	.LCFI19:
 2344              		.cfi_def_cfa_offset 8
 2345              		.cfi_offset 3, -8
 2346              		.cfi_offset 14, -4
2693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2347              		.loc 1 2693 0
 2348 0002 806B     		ldr	r0, [r0, #56]
 2349              	.LVL193:
2695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2350              		.loc 1 2695 0
 2351 0004 436F     		ldr	r3, [r0, #116]
 2352 0006 0022     		movs	r2, #0
 2353 0008 1A65     		str	r2, [r3, #80]
2698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 2354              		.loc 1 2698 0
 2355 000a 036F     		ldr	r3, [r0, #112]
 2356 000c 13B1     		cbz	r3, .L177
2700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2357              		.loc 1 2700 0
 2358 000e 1B6D     		ldr	r3, [r3, #80]
 2359 0010 03B1     		cbz	r3, .L177
 2360              	.LVL194:
 2361              	.L176:
2722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 99


 2362              		.loc 1 2722 0
 2363 0012 08BD     		pop	{r3, pc}
 2364              	.LVL195:
 2365              	.L177:
2707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2366              		.loc 1 2707 0
 2367 0014 0023     		movs	r3, #0
 2368 0016 A0F86230 		strh	r3, [r0, #98]	@ movhi
2708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2369              		.loc 1 2708 0
 2370 001a A0F86A30 		strh	r3, [r0, #106]	@ movhi
2711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2371              		.loc 1 2711 0
 2372 001e C367     		str	r3, [r0, #124]
2714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2373              		.loc 1 2714 0
 2374 0020 0368     		ldr	r3, [r0]
 2375 0022 0F22     		movs	r2, #15
 2376 0024 1A62     		str	r2, [r3, #32]
2717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2377              		.loc 1 2717 0
 2378 0026 2023     		movs	r3, #32
 2379 0028 80F87930 		strb	r3, [r0, #121]
2718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2380              		.loc 1 2718 0
 2381 002c 80F87A30 		strb	r3, [r0, #122]
2721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 2382              		.loc 1 2721 0
 2383 0030 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2384              	.LVL196:
 2385 0034 EDE7     		b	.L176
 2386              		.cfi_endproc
 2387              	.LFE189:
 2389              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 2390              		.align	1
 2391              		.syntax unified
 2392              		.thumb
 2393              		.thumb_func
 2394              		.fpu fpv5-d16
 2396              	UART_DMATxAbortCallback:
 2397              	.LFB188:
2650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
 2398              		.loc 1 2650 0
 2399              		.cfi_startproc
 2400              		@ args = 0, pretend = 0, frame = 0
 2401              		@ frame_needed = 0, uses_anonymous_args = 0
 2402              	.LVL197:
 2403 0000 08B5     		push	{r3, lr}
 2404              	.LCFI20:
 2405              		.cfi_def_cfa_offset 8
 2406              		.cfi_offset 3, -8
 2407              		.cfi_offset 14, -4
2651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2408              		.loc 1 2651 0
 2409 0002 806B     		ldr	r0, [r0, #56]
 2410              	.LVL198:
2653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 100


 2411              		.loc 1 2653 0
 2412 0004 036F     		ldr	r3, [r0, #112]
 2413 0006 0022     		movs	r2, #0
 2414 0008 1A65     		str	r2, [r3, #80]
2656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 2415              		.loc 1 2656 0
 2416 000a 436F     		ldr	r3, [r0, #116]
 2417 000c 13B1     		cbz	r3, .L181
2658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2418              		.loc 1 2658 0
 2419 000e 1B6D     		ldr	r3, [r3, #80]
 2420 0010 03B1     		cbz	r3, .L181
 2421              	.LVL199:
 2422              	.L180:
2680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2423              		.loc 1 2680 0
 2424 0012 08BD     		pop	{r3, pc}
 2425              	.LVL200:
 2426              	.L181:
2665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2427              		.loc 1 2665 0
 2428 0014 0023     		movs	r3, #0
 2429 0016 A0F86230 		strh	r3, [r0, #98]	@ movhi
2666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2430              		.loc 1 2666 0
 2431 001a A0F86A30 		strh	r3, [r0, #106]	@ movhi
2669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2432              		.loc 1 2669 0
 2433 001e C367     		str	r3, [r0, #124]
2672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2434              		.loc 1 2672 0
 2435 0020 0368     		ldr	r3, [r0]
 2436 0022 0F22     		movs	r2, #15
 2437 0024 1A62     		str	r2, [r3, #32]
2675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2438              		.loc 1 2675 0
 2439 0026 2023     		movs	r3, #32
 2440 0028 80F87930 		strb	r3, [r0, #121]
2676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2441              		.loc 1 2676 0
 2442 002c 80F87A30 		strb	r3, [r0, #122]
2679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 2443              		.loc 1 2679 0
 2444 0030 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2445              	.LVL201:
 2446 0034 EDE7     		b	.L180
 2447              		.cfi_endproc
 2448              	.LFE188:
 2450              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 2451              		.align	1
 2452              		.weak	HAL_UART_AbortTransmitCpltCallback
 2453              		.syntax unified
 2454              		.thumb
 2455              		.thumb_func
 2456              		.fpu fpv5-d16
 2458              	HAL_UART_AbortTransmitCpltCallback:
 2459              	.LFB166:
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 101


1816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2460              		.loc 1 1816 0
 2461              		.cfi_startproc
 2462              		@ args = 0, pretend = 0, frame = 0
 2463              		@ frame_needed = 0, uses_anonymous_args = 0
 2464              		@ link register save eliminated.
 2465              	.LVL202:
1823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2466              		.loc 1 1823 0
 2467 0000 7047     		bx	lr
 2468              		.cfi_endproc
 2469              	.LFE166:
 2471              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 2472              		.align	1
 2473              		.global	HAL_UART_AbortTransmit_IT
 2474              		.syntax unified
 2475              		.thumb
 2476              		.thumb_func
 2477              		.fpu fpv5-d16
 2479              	HAL_UART_AbortTransmit_IT:
 2480              	.LFB157:
1433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable interrupts */
 2481              		.loc 1 1433 0
 2482              		.cfi_startproc
 2483              		@ args = 0, pretend = 0, frame = 0
 2484              		@ frame_needed = 0, uses_anonymous_args = 0
 2485              	.LVL203:
 2486 0000 10B5     		push	{r4, lr}
 2487              	.LCFI21:
 2488              		.cfi_def_cfa_offset 8
 2489              		.cfi_offset 4, -8
 2490              		.cfi_offset 14, -4
 2491 0002 0446     		mov	r4, r0
1435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 2492              		.loc 1 1435 0
 2493 0004 0268     		ldr	r2, [r0]
 2494 0006 1368     		ldr	r3, [r2]
 2495 0008 23F0C003 		bic	r3, r3, #192
 2496 000c 1360     		str	r3, [r2]
1436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2497              		.loc 1 1436 0
 2498 000e 0268     		ldr	r2, [r0]
 2499 0010 9368     		ldr	r3, [r2, #8]
 2500 0012 23F40003 		bic	r3, r3, #8388608
 2501 0016 9360     		str	r3, [r2, #8]
1439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 2502              		.loc 1 1439 0
 2503 0018 0368     		ldr	r3, [r0]
 2504 001a 9A68     		ldr	r2, [r3, #8]
 2505 001c 12F0800F 		tst	r2, #128
 2506 0020 19D0     		beq	.L186
1441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2507              		.loc 1 1441 0
 2508 0022 9A68     		ldr	r2, [r3, #8]
 2509 0024 22F08002 		bic	r2, r2, #128
 2510 0028 9A60     		str	r2, [r3, #8]
1444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 102


 2511              		.loc 1 1444 0
 2512 002a 036F     		ldr	r3, [r0, #112]
 2513 002c 53B1     		cbz	r3, .L187
1448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2514              		.loc 1 1448 0
 2515 002e 0E4A     		ldr	r2, .L190
 2516 0030 1A65     		str	r2, [r3, #80]
1451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 2517              		.loc 1 1451 0
 2518 0032 006F     		ldr	r0, [r0, #112]
 2519              	.LVL204:
 2520 0034 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2521              	.LVL205:
 2522 0038 10B1     		cbz	r0, .L188
1454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 2523              		.loc 1 1454 0
 2524 003a 206F     		ldr	r0, [r4, #112]
 2525 003c 036D     		ldr	r3, [r0, #80]
 2526 003e 9847     		blx	r3
 2527              	.LVL206:
 2528              	.L188:
1482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2529              		.loc 1 1482 0
 2530 0040 0020     		movs	r0, #0
 2531 0042 10BD     		pop	{r4, pc}
 2532              	.LVL207:
 2533              	.L187:
1460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2534              		.loc 1 1460 0
 2535 0044 0023     		movs	r3, #0
 2536 0046 A0F86230 		strh	r3, [r0, #98]	@ movhi
1463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2537              		.loc 1 1463 0
 2538 004a 2023     		movs	r3, #32
 2539 004c 80F87930 		strb	r3, [r0, #121]
1466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 2540              		.loc 1 1466 0
 2541 0050 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2542              	.LVL208:
 2543 0054 F4E7     		b	.L188
 2544              	.LVL209:
 2545              	.L186:
1472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2546              		.loc 1 1472 0
 2547 0056 0023     		movs	r3, #0
 2548 0058 A0F86230 		strh	r3, [r0, #98]	@ movhi
1475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2549              		.loc 1 1475 0
 2550 005c 2023     		movs	r3, #32
 2551 005e 80F87930 		strb	r3, [r0, #121]
1478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 2552              		.loc 1 1478 0
 2553 0062 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2554              	.LVL210:
 2555 0066 EBE7     		b	.L188
 2556              	.L191:
 2557              		.align	2
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 103


 2558              	.L190:
 2559 0068 00000000 		.word	UART_DMATxOnlyAbortCallback
 2560              		.cfi_endproc
 2561              	.LFE157:
 2563              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 2564              		.align	1
 2565              		.syntax unified
 2566              		.thumb
 2567              		.thumb_func
 2568              		.fpu fpv5-d16
 2570              	UART_DMATxOnlyAbortCallback:
 2571              	.LFB190:
2734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 2572              		.loc 1 2734 0
 2573              		.cfi_startproc
 2574              		@ args = 0, pretend = 0, frame = 0
 2575              		@ frame_needed = 0, uses_anonymous_args = 0
 2576              	.LVL211:
 2577 0000 08B5     		push	{r3, lr}
 2578              	.LCFI22:
 2579              		.cfi_def_cfa_offset 8
 2580              		.cfi_offset 3, -8
 2581              		.cfi_offset 14, -4
2735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2582              		.loc 1 2735 0
 2583 0002 806B     		ldr	r0, [r0, #56]
 2584              	.LVL212:
2737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2585              		.loc 1 2737 0
 2586 0004 0023     		movs	r3, #0
 2587 0006 A0F86230 		strh	r3, [r0, #98]	@ movhi
2740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2588              		.loc 1 2740 0
 2589 000a 2023     		movs	r3, #32
 2590 000c 80F87930 		strb	r3, [r0, #121]
2743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 2591              		.loc 1 2743 0
 2592 0010 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2593              	.LVL213:
2744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2594              		.loc 1 2744 0
 2595 0014 08BD     		pop	{r3, pc}
 2596              		.cfi_endproc
 2597              	.LFE190:
 2599              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 2600              		.align	1
 2601              		.weak	HAL_UART_AbortReceiveCpltCallback
 2602              		.syntax unified
 2603              		.thumb
 2604              		.thumb_func
 2605              		.fpu fpv5-d16
 2607              	HAL_UART_AbortReceiveCpltCallback:
 2608              	.LFB167:
1831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2609              		.loc 1 1831 0
 2610              		.cfi_startproc
 2611              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 104


 2612              		@ frame_needed = 0, uses_anonymous_args = 0
 2613              		@ link register save eliminated.
 2614              	.LVL214:
1838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2615              		.loc 1 1838 0
 2616 0000 7047     		bx	lr
 2617              		.cfi_endproc
 2618              	.LFE167:
 2620              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 2621              		.align	1
 2622              		.global	HAL_UART_AbortReceive_IT
 2623              		.syntax unified
 2624              		.thumb
 2625              		.thumb_func
 2626              		.fpu fpv5-d16
 2628              	HAL_UART_AbortReceive_IT:
 2629              	.LFB158:
1499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Disable ERR (Frame error, noise error, overrun error) interrupt */
 2630              		.loc 1 1499 0
 2631              		.cfi_startproc
 2632              		@ args = 0, pretend = 0, frame = 0
 2633              		@ frame_needed = 0, uses_anonymous_args = 0
 2634              	.LVL215:
 2635 0000 10B5     		push	{r4, lr}
 2636              	.LCFI23:
 2637              		.cfi_def_cfa_offset 8
 2638              		.cfi_offset 4, -8
 2639              		.cfi_offset 14, -4
 2640 0002 0446     		mov	r4, r0
1501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE);
 2641              		.loc 1 1501 0
 2642 0004 0268     		ldr	r2, [r0]
 2643 0006 1368     		ldr	r3, [r2]
 2644 0008 23F49073 		bic	r3, r3, #288
 2645 000c 1360     		str	r3, [r2]
1502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2646              		.loc 1 1502 0
 2647 000e 0268     		ldr	r2, [r0]
 2648 0010 9168     		ldr	r1, [r2, #8]
 2649 0012 184B     		ldr	r3, .L200
 2650 0014 0B40     		ands	r3, r3, r1
 2651 0016 9360     		str	r3, [r2, #8]
1505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 2652              		.loc 1 1505 0
 2653 0018 0368     		ldr	r3, [r0]
 2654 001a 9A68     		ldr	r2, [r3, #8]
 2655 001c 12F0400F 		tst	r2, #64
 2656 0020 1CD0     		beq	.L196
1507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2657              		.loc 1 1507 0
 2658 0022 9A68     		ldr	r2, [r3, #8]
 2659 0024 22F04002 		bic	r2, r2, #64
 2660 0028 9A60     		str	r2, [r3, #8]
1510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 2661              		.loc 1 1510 0
 2662 002a 436F     		ldr	r3, [r0, #116]
 2663 002c 53B1     		cbz	r3, .L197
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 105


1514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2664              		.loc 1 1514 0
 2665 002e 124A     		ldr	r2, .L200+4
 2666 0030 1A65     		str	r2, [r3, #80]
1517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 2667              		.loc 1 1517 0
 2668 0032 406F     		ldr	r0, [r0, #116]
 2669              	.LVL216:
 2670 0034 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2671              	.LVL217:
 2672 0038 10B1     		cbz	r0, .L198
1520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 2673              		.loc 1 1520 0
 2674 003a 606F     		ldr	r0, [r4, #116]
 2675 003c 036D     		ldr	r3, [r0, #80]
 2676 003e 9847     		blx	r3
 2677              	.LVL218:
 2678              	.L198:
1554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2679              		.loc 1 1554 0
 2680 0040 0020     		movs	r0, #0
 2681 0042 10BD     		pop	{r4, pc}
 2682              	.LVL219:
 2683              	.L197:
1526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2684              		.loc 1 1526 0
 2685 0044 0023     		movs	r3, #0
 2686 0046 A0F86A30 		strh	r3, [r0, #106]	@ movhi
1529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2687              		.loc 1 1529 0
 2688 004a 0368     		ldr	r3, [r0]
 2689 004c 0F22     		movs	r2, #15
 2690 004e 1A62     		str	r2, [r3, #32]
1532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2691              		.loc 1 1532 0
 2692 0050 2023     		movs	r3, #32
 2693 0052 80F87A30 		strb	r3, [r0, #122]
1535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 2694              		.loc 1 1535 0
 2695 0056 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2696              	.LVL220:
 2697 005a F1E7     		b	.L198
 2698              	.LVL221:
 2699              	.L196:
1541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2700              		.loc 1 1541 0
 2701 005c 0022     		movs	r2, #0
 2702 005e A0F86A20 		strh	r2, [r0, #106]	@ movhi
1544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2703              		.loc 1 1544 0
 2704 0062 0F22     		movs	r2, #15
 2705 0064 1A62     		str	r2, [r3, #32]
1547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2706              		.loc 1 1547 0
 2707 0066 2023     		movs	r3, #32
 2708 0068 80F87A30 		strb	r3, [r0, #122]
1550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 106


 2709              		.loc 1 1550 0
 2710 006c FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2711              	.LVL222:
 2712 0070 E6E7     		b	.L198
 2713              	.L201:
 2714 0072 00BF     		.align	2
 2715              	.L200:
 2716 0074 FEFFFFEF 		.word	-268435458
 2717 0078 00000000 		.word	UART_DMARxOnlyAbortCallback
 2718              		.cfi_endproc
 2719              	.LFE158:
 2721              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 2722              		.align	1
 2723              		.syntax unified
 2724              		.thumb
 2725              		.thumb_func
 2726              		.fpu fpv5-d16
 2728              	UART_DMARxOnlyAbortCallback:
 2729              	.LFB191:
2755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2730              		.loc 1 2755 0
 2731              		.cfi_startproc
 2732              		@ args = 0, pretend = 0, frame = 0
 2733              		@ frame_needed = 0, uses_anonymous_args = 0
 2734              	.LVL223:
 2735 0000 08B5     		push	{r3, lr}
 2736              	.LCFI24:
 2737              		.cfi_def_cfa_offset 8
 2738              		.cfi_offset 3, -8
 2739              		.cfi_offset 14, -4
2756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2740              		.loc 1 2756 0
 2741 0002 806B     		ldr	r0, [r0, #56]
 2742              	.LVL224:
2758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2743              		.loc 1 2758 0
 2744 0004 0023     		movs	r3, #0
 2745 0006 A0F86A30 		strh	r3, [r0, #106]	@ movhi
2761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2746              		.loc 1 2761 0
 2747 000a 0368     		ldr	r3, [r0]
 2748 000c 0F22     		movs	r2, #15
 2749 000e 1A62     		str	r2, [r3, #32]
2764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2750              		.loc 1 2764 0
 2751 0010 2023     		movs	r3, #32
 2752 0012 80F87A30 		strb	r3, [r0, #122]
2767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 2753              		.loc 1 2767 0
 2754 0016 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2755              	.LVL225:
2768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2756              		.loc 1 2768 0
 2757 001a 08BD     		pop	{r3, pc}
 2758              		.cfi_endproc
 2759              	.LFE191:
 2761              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 107


 2762              		.align	1
 2763              		.global	HAL_MultiProcessor_EnterMuteMode
 2764              		.syntax unified
 2765              		.thumb
 2766              		.thumb_func
 2767              		.fpu fpv5-d16
 2769              	HAL_MultiProcessor_EnterMuteMode:
 2770              	.LFB170:
1915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 2771              		.loc 1 1915 0
 2772              		.cfi_startproc
 2773              		@ args = 0, pretend = 0, frame = 0
 2774              		@ frame_needed = 0, uses_anonymous_args = 0
 2775              		@ link register save eliminated.
 2776              	.LVL226:
1916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 2777              		.loc 1 1916 0
 2778 0000 0268     		ldr	r2, [r0]
 2779 0002 138B     		ldrh	r3, [r2, #24]
 2780 0004 43F00403 		orr	r3, r3, #4
 2781 0008 1383     		strh	r3, [r2, #24]	@ movhi
1917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2782              		.loc 1 1917 0
 2783 000a 7047     		bx	lr
 2784              		.cfi_endproc
 2785              	.LFE170:
 2787              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 2788              		.align	1
 2789              		.global	HAL_HalfDuplex_EnableTransmitter
 2790              		.syntax unified
 2791              		.thumb
 2792              		.thumb_func
 2793              		.fpu fpv5-d16
 2795              	HAL_HalfDuplex_EnableTransmitter:
 2796              	.LFB171:
1925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Process Locked */
 2797              		.loc 1 1925 0
 2798              		.cfi_startproc
 2799              		@ args = 0, pretend = 0, frame = 0
 2800              		@ frame_needed = 0, uses_anonymous_args = 0
 2801              		@ link register save eliminated.
 2802              	.LVL227:
1927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2803              		.loc 1 1927 0
 2804 0000 90F87830 		ldrb	r3, [r0, #120]	@ zero_extendqisi2
 2805 0004 012B     		cmp	r3, #1
 2806 0006 17D0     		beq	.L207
1927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2807              		.loc 1 1927 0 is_stmt 0 discriminator 2
 2808 0008 0123     		movs	r3, #1
 2809 000a 80F87830 		strb	r3, [r0, #120]
1928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2810              		.loc 1 1928 0 is_stmt 1 discriminator 2
 2811 000e 2423     		movs	r3, #36
 2812 0010 80F87930 		strb	r3, [r0, #121]
1931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
 2813              		.loc 1 1931 0 discriminator 2
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 108


 2814 0014 0268     		ldr	r2, [r0]
 2815 0016 1368     		ldr	r3, [r2]
 2816 0018 23F00C03 		bic	r3, r3, #12
 2817 001c 1360     		str	r3, [r2]
1933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2818              		.loc 1 1933 0 discriminator 2
 2819 001e 0268     		ldr	r2, [r0]
 2820 0020 1368     		ldr	r3, [r2]
 2821 0022 43F00803 		orr	r3, r3, #8
 2822 0026 1360     		str	r3, [r2]
1935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2823              		.loc 1 1935 0 discriminator 2
 2824 0028 2023     		movs	r3, #32
 2825 002a 80F87930 		strb	r3, [r0, #121]
1938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2826              		.loc 1 1938 0 discriminator 2
 2827 002e 0023     		movs	r3, #0
 2828 0030 80F87830 		strb	r3, [r0, #120]
1940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 2829              		.loc 1 1940 0 discriminator 2
 2830 0034 1846     		mov	r0, r3
 2831              	.LVL228:
 2832 0036 7047     		bx	lr
 2833              	.LVL229:
 2834              	.L207:
1927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2835              		.loc 1 1927 0
 2836 0038 0220     		movs	r0, #2
 2837              	.LVL230:
1941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2838              		.loc 1 1941 0
 2839 003a 7047     		bx	lr
 2840              		.cfi_endproc
 2841              	.LFE171:
 2843              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 2844              		.align	1
 2845              		.global	HAL_HalfDuplex_EnableReceiver
 2846              		.syntax unified
 2847              		.thumb
 2848              		.thumb_func
 2849              		.fpu fpv5-d16
 2851              	HAL_HalfDuplex_EnableReceiver:
 2852              	.LFB172:
1949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Process Locked */
 2853              		.loc 1 1949 0
 2854              		.cfi_startproc
 2855              		@ args = 0, pretend = 0, frame = 0
 2856              		@ frame_needed = 0, uses_anonymous_args = 0
 2857              		@ link register save eliminated.
 2858              	.LVL231:
1951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2859              		.loc 1 1951 0
 2860 0000 90F87830 		ldrb	r3, [r0, #120]	@ zero_extendqisi2
 2861 0004 012B     		cmp	r3, #1
 2862 0006 17D0     		beq	.L210
1951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2863              		.loc 1 1951 0 is_stmt 0 discriminator 2
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 109


 2864 0008 0123     		movs	r3, #1
 2865 000a 80F87830 		strb	r3, [r0, #120]
1952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2866              		.loc 1 1952 0 is_stmt 1 discriminator 2
 2867 000e 2423     		movs	r3, #36
 2868 0010 80F87930 		strb	r3, [r0, #121]
1955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
 2869              		.loc 1 1955 0 discriminator 2
 2870 0014 0268     		ldr	r2, [r0]
 2871 0016 1368     		ldr	r3, [r2]
 2872 0018 23F00C03 		bic	r3, r3, #12
 2873 001c 1360     		str	r3, [r2]
1957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2874              		.loc 1 1957 0 discriminator 2
 2875 001e 0268     		ldr	r2, [r0]
 2876 0020 1368     		ldr	r3, [r2]
 2877 0022 43F00403 		orr	r3, r3, #4
 2878 0026 1360     		str	r3, [r2]
1959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Process Unlocked */
 2879              		.loc 1 1959 0 discriminator 2
 2880 0028 2023     		movs	r3, #32
 2881 002a 80F87930 		strb	r3, [r0, #121]
1961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2882              		.loc 1 1961 0 discriminator 2
 2883 002e 0023     		movs	r3, #0
 2884 0030 80F87830 		strb	r3, [r0, #120]
1963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 2885              		.loc 1 1963 0 discriminator 2
 2886 0034 1846     		mov	r0, r3
 2887              	.LVL232:
 2888 0036 7047     		bx	lr
 2889              	.LVL233:
 2890              	.L210:
1951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2891              		.loc 1 1951 0
 2892 0038 0220     		movs	r0, #2
 2893              	.LVL234:
1964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2894              		.loc 1 1964 0
 2895 003a 7047     		bx	lr
 2896              		.cfi_endproc
 2897              	.LFE172:
 2899              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 2900              		.align	1
 2901              		.global	HAL_LIN_SendBreak
 2902              		.syntax unified
 2903              		.thumb
 2904              		.thumb_func
 2905              		.fpu fpv5-d16
 2907              	HAL_LIN_SendBreak:
 2908              	.LFB173:
1973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the parameters */
 2909              		.loc 1 1973 0
 2910              		.cfi_startproc
 2911              		@ args = 0, pretend = 0, frame = 0
 2912              		@ frame_needed = 0, uses_anonymous_args = 0
 2913              		@ link register save eliminated.
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 110


 2914              	.LVL235:
1978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2915              		.loc 1 1978 0
 2916 0000 90F87830 		ldrb	r3, [r0, #120]	@ zero_extendqisi2
 2917 0004 012B     		cmp	r3, #1
 2918 0006 12D0     		beq	.L213
1978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2919              		.loc 1 1978 0 is_stmt 0 discriminator 2
 2920 0008 0123     		movs	r3, #1
 2921 000a 80F87830 		strb	r3, [r0, #120]
1980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2922              		.loc 1 1980 0 is_stmt 1 discriminator 2
 2923 000e 2423     		movs	r3, #36
 2924 0010 80F87930 		strb	r3, [r0, #121]
1983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2925              		.loc 1 1983 0 discriminator 2
 2926 0014 0268     		ldr	r2, [r0]
 2927 0016 138B     		ldrh	r3, [r2, #24]
 2928 0018 43F00203 		orr	r3, r3, #2
 2929 001c 1383     		strh	r3, [r2, #24]	@ movhi
1985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2930              		.loc 1 1985 0 discriminator 2
 2931 001e 2023     		movs	r3, #32
 2932 0020 80F87930 		strb	r3, [r0, #121]
1988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2933              		.loc 1 1988 0 discriminator 2
 2934 0024 0023     		movs	r3, #0
 2935 0026 80F87830 		strb	r3, [r0, #120]
1990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 2936              		.loc 1 1990 0 discriminator 2
 2937 002a 1846     		mov	r0, r3
 2938              	.LVL236:
 2939 002c 7047     		bx	lr
 2940              	.LVL237:
 2941              	.L213:
1978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2942              		.loc 1 1978 0
 2943 002e 0220     		movs	r0, #2
 2944              	.LVL238:
1991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2945              		.loc 1 1991 0
 2946 0030 7047     		bx	lr
 2947              		.cfi_endproc
 2948              	.LFE173:
 2950              		.section	.text.HAL_UART_GetState,"ax",%progbits
 2951              		.align	1
 2952              		.global	HAL_UART_GetState
 2953              		.syntax unified
 2954              		.thumb
 2955              		.thumb_func
 2956              		.fpu fpv5-d16
 2958              	HAL_UART_GetState:
 2959              	.LFB174:
2021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
 2960              		.loc 1 2021 0
 2961              		.cfi_startproc
 2962              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 111


 2963              		@ frame_needed = 0, uses_anonymous_args = 0
 2964              		@ link register save eliminated.
 2965              	.LVL239:
2023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   temp2 = huart->RxState;
 2966              		.loc 1 2023 0
 2967 0000 90F87930 		ldrb	r3, [r0, #121]	@ zero_extendqisi2
 2968              	.LVL240:
2024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2969              		.loc 1 2024 0
 2970 0004 90F87A00 		ldrb	r0, [r0, #122]	@ zero_extendqisi2
 2971              	.LVL241:
2027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 2972              		.loc 1 2027 0
 2973 0008 1843     		orrs	r0, r0, r3
 2974              	.LVL242:
 2975 000a 7047     		bx	lr
 2976              		.cfi_endproc
 2977              	.LFE174:
 2979              		.section	.text.HAL_UART_GetError,"ax",%progbits
 2980              		.align	1
 2981              		.global	HAL_UART_GetError
 2982              		.syntax unified
 2983              		.thumb
 2984              		.thumb_func
 2985              		.fpu fpv5-d16
 2987              	HAL_UART_GetError:
 2988              	.LFB175:
2036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   return huart->ErrorCode;
 2989              		.loc 1 2036 0
 2990              		.cfi_startproc
 2991              		@ args = 0, pretend = 0, frame = 0
 2992              		@ frame_needed = 0, uses_anonymous_args = 0
 2993              		@ link register save eliminated.
 2994              	.LVL243:
2037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 2995              		.loc 1 2037 0
 2996 0000 C06F     		ldr	r0, [r0, #124]
 2997              	.LVL244:
2038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** /**
 2998              		.loc 1 2038 0
 2999 0002 7047     		bx	lr
 3000              		.cfi_endproc
 3001              	.LFE175:
 3003              		.global	__aeabi_uldivmod
 3004              		.section	.text.UART_SetConfig,"ax",%progbits
 3005              		.align	1
 3006              		.global	UART_SetConfig
 3007              		.syntax unified
 3008              		.thumb
 3009              		.thumb_func
 3010              		.fpu fpv5-d16
 3012              	UART_SetConfig:
 3013              	.LFB176:
2057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000U;
 3014              		.loc 1 2057 0
 3015              		.cfi_startproc
 3016              		@ args = 0, pretend = 0, frame = 24
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 112


 3017              		@ frame_needed = 0, uses_anonymous_args = 0
 3018              	.LVL245:
 3019 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 3020              	.LCFI25:
 3021              		.cfi_def_cfa_offset 28
 3022              		.cfi_offset 4, -28
 3023              		.cfi_offset 5, -24
 3024              		.cfi_offset 6, -20
 3025              		.cfi_offset 7, -16
 3026              		.cfi_offset 8, -12
 3027              		.cfi_offset 9, -8
 3028              		.cfi_offset 14, -4
 3029 0004 87B0     		sub	sp, sp, #28
 3030              	.LCFI26:
 3031              		.cfi_def_cfa_offset 56
 3032 0006 0446     		mov	r4, r0
 3033              	.LVL246:
2068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 3034              		.loc 1 2068 0
 3035 0008 0168     		ldr	r1, [r0]
2084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 3036              		.loc 1 2084 0
 3037 000a 826A     		ldr	r2, [r0, #40]
2097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   tmpreg |=  (uint32_t)huart->Init.FIFOMode;
 3038              		.loc 1 2097 0
 3039 000c 8368     		ldr	r3, [r0, #8]
 3040 000e 0069     		ldr	r0, [r0, #16]
 3041              	.LVL247:
 3042 0010 0343     		orrs	r3, r3, r0
 3043 0012 6069     		ldr	r0, [r4, #20]
 3044 0014 0343     		orrs	r3, r3, r0
 3045 0016 E069     		ldr	r0, [r4, #28]
 3046 0018 0343     		orrs	r3, r3, r0
 3047              	.LVL248:
2098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 3048              		.loc 1 2098 0
 3049 001a 1343     		orrs	r3, r3, r2
 3050              	.LVL249:
2099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3051              		.loc 1 2099 0
 3052 001c 0868     		ldr	r0, [r1]
 3053 001e 874A     		ldr	r2, .L368
 3054 0020 0240     		ands	r2, r2, r0
 3055 0022 1A43     		orrs	r2, r2, r3
 3056 0024 0A60     		str	r2, [r1]
2104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3057              		.loc 1 2104 0
 3058 0026 2268     		ldr	r2, [r4]
 3059 0028 5368     		ldr	r3, [r2, #4]
 3060              	.LVL250:
 3061 002a 23F44053 		bic	r3, r3, #12288
 3062 002e E168     		ldr	r1, [r4, #12]
 3063 0030 0B43     		orrs	r3, r3, r1
 3064 0032 5360     		str	r3, [r2, #4]
2114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3065              		.loc 1 2114 0
 3066 0034 A269     		ldr	r2, [r4, #24]
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 113


 3067              	.LVL251:
2116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 3068              		.loc 1 2116 0
 3069 0036 2168     		ldr	r1, [r4]
 3070 0038 814B     		ldr	r3, .L368+4
 3071 003a 9942     		cmp	r1, r3
 3072 003c 01D0     		beq	.L217
2118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 3073              		.loc 1 2118 0
 3074 003e 236A     		ldr	r3, [r4, #32]
 3075 0040 1A43     		orrs	r2, r2, r3
 3076              	.LVL252:
 3077              	.L217:
2121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 3078              		.loc 1 2121 0
 3079 0042 A36A     		ldr	r3, [r4, #40]
 3080 0044 B3F1005F 		cmp	r3, #536870912
 3081 0048 2FD0     		beq	.L351
 3082              	.L218:
2126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3083              		.loc 1 2126 0
 3084 004a 8868     		ldr	r0, [r1, #8]
 3085 004c 7D4B     		ldr	r3, .L368+8
 3086 004e 0340     		ands	r3, r3, r0
 3087 0050 1343     		orrs	r3, r3, r2
 3088 0052 8B60     		str	r3, [r1, #8]
2131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3089              		.loc 1 2131 0
 3090 0054 2268     		ldr	r2, [r4]
 3091              	.LVL253:
 3092 0056 D36A     		ldr	r3, [r2, #44]
 3093 0058 23F00F03 		bic	r3, r3, #15
 3094 005c 616A     		ldr	r1, [r4, #36]
 3095 005e 0B43     		orrs	r3, r3, r1
 3096 0060 D362     		str	r3, [r2, #44]
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3097              		.loc 1 2134 0
 3098 0062 2368     		ldr	r3, [r4]
 3099 0064 784A     		ldr	r2, .L368+12
 3100 0066 9342     		cmp	r3, r2
 3101 0068 24D0     		beq	.L352
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3102              		.loc 1 2134 0 is_stmt 0 discriminator 2
 3103 006a 784A     		ldr	r2, .L368+16
 3104 006c 9342     		cmp	r3, r2
 3105 006e 5ED0     		beq	.L353
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3106              		.loc 1 2134 0 discriminator 10
 3107 0070 774A     		ldr	r2, .L368+20
 3108 0072 9342     		cmp	r3, r2
 3109 0074 75D0     		beq	.L354
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3110              		.loc 1 2134 0 discriminator 18
 3111 0076 774A     		ldr	r2, .L368+24
 3112 0078 9342     		cmp	r3, r2
 3113 007a 00F08C80 		beq	.L355
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 114


 3114              		.loc 1 2134 0 discriminator 26
 3115 007e 764A     		ldr	r2, .L368+28
 3116 0080 9342     		cmp	r3, r2
 3117 0082 00F0A280 		beq	.L356
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3118              		.loc 1 2134 0 discriminator 34
 3119 0086 754A     		ldr	r2, .L368+32
 3120 0088 9342     		cmp	r3, r2
 3121 008a 00F0B880 		beq	.L357
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3122              		.loc 1 2134 0 discriminator 42
 3123 008e 744A     		ldr	r2, .L368+36
 3124 0090 9342     		cmp	r3, r2
 3125 0092 00F0F580 		beq	.L358
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3126              		.loc 1 2134 0 discriminator 50
 3127 0096 734A     		ldr	r2, .L368+40
 3128 0098 9342     		cmp	r3, r2
 3129 009a 00F00881 		beq	.L359
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3130              		.loc 1 2134 0 discriminator 58
 3131 009e 684A     		ldr	r2, .L368+4
 3132 00a0 9342     		cmp	r3, r2
 3133 00a2 00F01B81 		beq	.L360
2059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
 3134              		.loc 1 2059 0 is_stmt 1
 3135 00a6 8025     		movs	r5, #128
 3136 00a8 31E1     		b	.L221
 3137              	.LVL254:
 3138              	.L351:
2123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 3139              		.loc 1 2123 0
 3140 00aa E36A     		ldr	r3, [r4, #44]
 3141 00ac 206B     		ldr	r0, [r4, #48]
 3142 00ae 0343     		orrs	r3, r3, r0
 3143 00b0 1A43     		orrs	r2, r2, r3
 3144              	.LVL255:
 3145 00b2 CAE7     		b	.L218
 3146              	.LVL256:
 3147              	.L352:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3148              		.loc 1 2134 0 discriminator 1
 3149 00b4 6C4A     		ldr	r2, .L368+44
 3150 00b6 526D     		ldr	r2, [r2, #84]
 3151 00b8 02F03802 		and	r2, r2, #56
 3152 00bc 282A     		cmp	r2, #40
 3153 00be 2AD8     		bhi	.L220
 3154 00c0 DFE812F0 		tbh	[pc, r2, lsl #1]
 3155              	.L222:
 3156 00c4 2401     		.2byte	(.L330-.L222)/2
 3157 00c6 2900     		.2byte	(.L220-.L222)/2
 3158 00c8 2900     		.2byte	(.L220-.L222)/2
 3159 00ca 2900     		.2byte	(.L220-.L222)/2
 3160 00cc 2900     		.2byte	(.L220-.L222)/2
 3161 00ce 2900     		.2byte	(.L220-.L222)/2
 3162 00d0 2900     		.2byte	(.L220-.L222)/2
 3163 00d2 2900     		.2byte	(.L220-.L222)/2
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 115


 3164 00d4 2B00     		.2byte	(.L223-.L222)/2
 3165 00d6 2900     		.2byte	(.L220-.L222)/2
 3166 00d8 2900     		.2byte	(.L220-.L222)/2
 3167 00da 2900     		.2byte	(.L220-.L222)/2
 3168 00dc 2900     		.2byte	(.L220-.L222)/2
 3169 00de 2900     		.2byte	(.L220-.L222)/2
 3170 00e0 2900     		.2byte	(.L220-.L222)/2
 3171 00e2 2900     		.2byte	(.L220-.L222)/2
 3172 00e4 2D00     		.2byte	(.L224-.L222)/2
 3173 00e6 2900     		.2byte	(.L220-.L222)/2
 3174 00e8 2900     		.2byte	(.L220-.L222)/2
 3175 00ea 2900     		.2byte	(.L220-.L222)/2
 3176 00ec 2900     		.2byte	(.L220-.L222)/2
 3177 00ee 2900     		.2byte	(.L220-.L222)/2
 3178 00f0 2900     		.2byte	(.L220-.L222)/2
 3179 00f2 2900     		.2byte	(.L220-.L222)/2
 3180 00f4 2F00     		.2byte	(.L225-.L222)/2
 3181 00f6 2900     		.2byte	(.L220-.L222)/2
 3182 00f8 2900     		.2byte	(.L220-.L222)/2
 3183 00fa 2900     		.2byte	(.L220-.L222)/2
 3184 00fc 2900     		.2byte	(.L220-.L222)/2
 3185 00fe 2900     		.2byte	(.L220-.L222)/2
 3186 0100 2900     		.2byte	(.L220-.L222)/2
 3187 0102 2900     		.2byte	(.L220-.L222)/2
 3188 0104 3100     		.2byte	(.L226-.L222)/2
 3189 0106 2900     		.2byte	(.L220-.L222)/2
 3190 0108 2900     		.2byte	(.L220-.L222)/2
 3191 010a 2900     		.2byte	(.L220-.L222)/2
 3192 010c 2900     		.2byte	(.L220-.L222)/2
 3193 010e 2900     		.2byte	(.L220-.L222)/2
 3194 0110 2900     		.2byte	(.L220-.L222)/2
 3195 0112 2900     		.2byte	(.L220-.L222)/2
 3196 0114 3300     		.2byte	(.L227-.L222)/2
 3197              		.p2align 1
 3198              	.L220:
2059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
 3199              		.loc 1 2059 0
 3200 0116 8025     		movs	r5, #128
 3201 0118 F9E0     		b	.L221
 3202              	.L223:
 3203              	.LVL257:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3204              		.loc 1 2134 0 discriminator 4
 3205 011a 0425     		movs	r5, #4
 3206 011c F7E0     		b	.L221
 3207              	.LVL258:
 3208              	.L224:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3209              		.loc 1 2134 0 is_stmt 0 discriminator 5
 3210 011e 4025     		movs	r5, #64
 3211 0120 F5E0     		b	.L221
 3212              	.LVL259:
 3213              	.L225:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3214              		.loc 1 2134 0 discriminator 6
 3215 0122 0825     		movs	r5, #8
 3216 0124 F3E0     		b	.L221
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 116


 3217              	.LVL260:
 3218              	.L226:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3219              		.loc 1 2134 0 discriminator 7
 3220 0126 1025     		movs	r5, #16
 3221 0128 F1E0     		b	.L221
 3222              	.LVL261:
 3223              	.L227:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3224              		.loc 1 2134 0 discriminator 8
 3225 012a 2025     		movs	r5, #32
 3226 012c EFE0     		b	.L221
 3227              	.LVL262:
 3228              	.L353:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3229              		.loc 1 2134 0 discriminator 9
 3230 012e 4E4A     		ldr	r2, .L368+44
 3231 0130 526D     		ldr	r2, [r2, #84]
 3232 0132 02F00702 		and	r2, r2, #7
 3233 0136 052A     		cmp	r2, #5
 3234 0138 07D8     		bhi	.L229
 3235 013a DFE812F0 		tbh	[pc, r2, lsl #1]
 3236              	.L230:
 3237 013e 3601     		.2byte	(.L331-.L230)/2
 3238 0140 0800     		.2byte	(.L231-.L230)/2
 3239 0142 0A00     		.2byte	(.L232-.L230)/2
 3240 0144 0C00     		.2byte	(.L233-.L230)/2
 3241 0146 0E00     		.2byte	(.L234-.L230)/2
 3242 0148 1000     		.2byte	(.L235-.L230)/2
 3243              		.p2align 1
 3244              	.L229:
2059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
 3245              		.loc 1 2059 0 is_stmt 1
 3246 014a 8025     		movs	r5, #128
 3247 014c DFE0     		b	.L221
 3248              	.L231:
 3249              	.LVL263:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3250              		.loc 1 2134 0 discriminator 12
 3251 014e 0425     		movs	r5, #4
 3252 0150 DDE0     		b	.L221
 3253              	.LVL264:
 3254              	.L232:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3255              		.loc 1 2134 0 is_stmt 0 discriminator 13
 3256 0152 4025     		movs	r5, #64
 3257 0154 DBE0     		b	.L221
 3258              	.LVL265:
 3259              	.L233:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3260              		.loc 1 2134 0 discriminator 14
 3261 0156 0825     		movs	r5, #8
 3262 0158 D9E0     		b	.L221
 3263              	.LVL266:
 3264              	.L234:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3265              		.loc 1 2134 0 discriminator 15
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 117


 3266 015a 1025     		movs	r5, #16
 3267 015c D7E0     		b	.L221
 3268              	.LVL267:
 3269              	.L235:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3270              		.loc 1 2134 0 discriminator 16
 3271 015e 2025     		movs	r5, #32
 3272 0160 D5E0     		b	.L221
 3273              	.LVL268:
 3274              	.L354:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3275              		.loc 1 2134 0 discriminator 17
 3276 0162 414A     		ldr	r2, .L368+44
 3277 0164 526D     		ldr	r2, [r2, #84]
 3278 0166 02F00702 		and	r2, r2, #7
 3279 016a 052A     		cmp	r2, #5
 3280 016c 07D8     		bhi	.L237
 3281 016e DFE812F0 		tbh	[pc, r2, lsl #1]
 3282              	.L238:
 3283 0172 1E01     		.2byte	(.L332-.L238)/2
 3284 0174 0800     		.2byte	(.L239-.L238)/2
 3285 0176 0A00     		.2byte	(.L240-.L238)/2
 3286 0178 0C00     		.2byte	(.L241-.L238)/2
 3287 017a 0E00     		.2byte	(.L242-.L238)/2
 3288 017c 1000     		.2byte	(.L243-.L238)/2
 3289              		.p2align 1
 3290              	.L237:
2059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
 3291              		.loc 1 2059 0 is_stmt 1
 3292 017e 8025     		movs	r5, #128
 3293 0180 C5E0     		b	.L221
 3294              	.L239:
 3295              	.LVL269:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3296              		.loc 1 2134 0 discriminator 20
 3297 0182 0425     		movs	r5, #4
 3298 0184 C3E0     		b	.L221
 3299              	.LVL270:
 3300              	.L240:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3301              		.loc 1 2134 0 is_stmt 0 discriminator 21
 3302 0186 4025     		movs	r5, #64
 3303 0188 C1E0     		b	.L221
 3304              	.LVL271:
 3305              	.L241:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3306              		.loc 1 2134 0 discriminator 22
 3307 018a 0825     		movs	r5, #8
 3308 018c BFE0     		b	.L221
 3309              	.LVL272:
 3310              	.L242:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3311              		.loc 1 2134 0 discriminator 23
 3312 018e 1025     		movs	r5, #16
 3313 0190 BDE0     		b	.L221
 3314              	.LVL273:
 3315              	.L243:
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 118


2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3316              		.loc 1 2134 0 discriminator 24
 3317 0192 2025     		movs	r5, #32
 3318 0194 BBE0     		b	.L221
 3319              	.LVL274:
 3320              	.L355:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3321              		.loc 1 2134 0 discriminator 25
 3322 0196 344A     		ldr	r2, .L368+44
 3323 0198 526D     		ldr	r2, [r2, #84]
 3324 019a 02F00702 		and	r2, r2, #7
 3325 019e 052A     		cmp	r2, #5
 3326 01a0 07D8     		bhi	.L245
 3327 01a2 DFE812F0 		tbh	[pc, r2, lsl #1]
 3328              	.L246:
 3329 01a6 0601     		.2byte	(.L333-.L246)/2
 3330 01a8 0800     		.2byte	(.L247-.L246)/2
 3331 01aa 0A00     		.2byte	(.L248-.L246)/2
 3332 01ac 0C00     		.2byte	(.L249-.L246)/2
 3333 01ae 0E00     		.2byte	(.L250-.L246)/2
 3334 01b0 1000     		.2byte	(.L251-.L246)/2
 3335              		.p2align 1
 3336              	.L245:
2059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
 3337              		.loc 1 2059 0 is_stmt 1
 3338 01b2 8025     		movs	r5, #128
 3339 01b4 ABE0     		b	.L221
 3340              	.L247:
 3341              	.LVL275:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3342              		.loc 1 2134 0 discriminator 28
 3343 01b6 0425     		movs	r5, #4
 3344 01b8 A9E0     		b	.L221
 3345              	.LVL276:
 3346              	.L248:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3347              		.loc 1 2134 0 is_stmt 0 discriminator 29
 3348 01ba 4025     		movs	r5, #64
 3349 01bc A7E0     		b	.L221
 3350              	.LVL277:
 3351              	.L249:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3352              		.loc 1 2134 0 discriminator 30
 3353 01be 0825     		movs	r5, #8
 3354 01c0 A5E0     		b	.L221
 3355              	.LVL278:
 3356              	.L250:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3357              		.loc 1 2134 0 discriminator 31
 3358 01c2 1025     		movs	r5, #16
 3359 01c4 A3E0     		b	.L221
 3360              	.LVL279:
 3361              	.L251:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3362              		.loc 1 2134 0 discriminator 32
 3363 01c6 2025     		movs	r5, #32
 3364 01c8 A1E0     		b	.L221
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 119


 3365              	.LVL280:
 3366              	.L356:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3367              		.loc 1 2134 0 discriminator 33
 3368 01ca 274A     		ldr	r2, .L368+44
 3369 01cc 526D     		ldr	r2, [r2, #84]
 3370 01ce 02F00702 		and	r2, r2, #7
 3371 01d2 052A     		cmp	r2, #5
 3372 01d4 07D8     		bhi	.L253
 3373 01d6 DFE812F0 		tbh	[pc, r2, lsl #1]
 3374              	.L254:
 3375 01da EE00     		.2byte	(.L334-.L254)/2
 3376 01dc 0800     		.2byte	(.L255-.L254)/2
 3377 01de 0A00     		.2byte	(.L256-.L254)/2
 3378 01e0 0C00     		.2byte	(.L257-.L254)/2
 3379 01e2 0E00     		.2byte	(.L258-.L254)/2
 3380 01e4 1000     		.2byte	(.L259-.L254)/2
 3381              		.p2align 1
 3382              	.L253:
2059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
 3383              		.loc 1 2059 0 is_stmt 1
 3384 01e6 8025     		movs	r5, #128
 3385 01e8 91E0     		b	.L221
 3386              	.L255:
 3387              	.LVL281:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3388              		.loc 1 2134 0 discriminator 36
 3389 01ea 0425     		movs	r5, #4
 3390 01ec 8FE0     		b	.L221
 3391              	.LVL282:
 3392              	.L256:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3393              		.loc 1 2134 0 is_stmt 0 discriminator 37
 3394 01ee 4025     		movs	r5, #64
 3395 01f0 8DE0     		b	.L221
 3396              	.LVL283:
 3397              	.L257:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3398              		.loc 1 2134 0 discriminator 38
 3399 01f2 0825     		movs	r5, #8
 3400 01f4 8BE0     		b	.L221
 3401              	.LVL284:
 3402              	.L258:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3403              		.loc 1 2134 0 discriminator 39
 3404 01f6 1025     		movs	r5, #16
 3405 01f8 89E0     		b	.L221
 3406              	.LVL285:
 3407              	.L259:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3408              		.loc 1 2134 0 discriminator 40
 3409 01fa 2025     		movs	r5, #32
 3410 01fc 87E0     		b	.L221
 3411              	.LVL286:
 3412              	.L357:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3413              		.loc 1 2134 0 discriminator 41
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 120


 3414 01fe 1A4A     		ldr	r2, .L368+44
 3415 0200 526D     		ldr	r2, [r2, #84]
 3416 0202 02F03802 		and	r2, r2, #56
 3417 0206 282A     		cmp	r2, #40
 3418 0208 16D8     		bhi	.L261
 3419 020a DFE802F0 		tbb	[pc, r2]
 3420              	.L262:
 3421 020e D6       		.byte	(.L335-.L262)/2
 3422 020f 15       		.byte	(.L261-.L262)/2
 3423 0210 15       		.byte	(.L261-.L262)/2
 3424 0211 15       		.byte	(.L261-.L262)/2
 3425 0212 15       		.byte	(.L261-.L262)/2
 3426 0213 15       		.byte	(.L261-.L262)/2
 3427 0214 15       		.byte	(.L261-.L262)/2
 3428 0215 15       		.byte	(.L261-.L262)/2
 3429 0216 2F       		.byte	(.L263-.L262)/2
 3430 0217 15       		.byte	(.L261-.L262)/2
 3431 0218 15       		.byte	(.L261-.L262)/2
 3432 0219 15       		.byte	(.L261-.L262)/2
 3433 021a 15       		.byte	(.L261-.L262)/2
 3434 021b 15       		.byte	(.L261-.L262)/2
 3435 021c 15       		.byte	(.L261-.L262)/2
 3436 021d 15       		.byte	(.L261-.L262)/2
 3437 021e 31       		.byte	(.L264-.L262)/2
 3438 021f 15       		.byte	(.L261-.L262)/2
 3439 0220 15       		.byte	(.L261-.L262)/2
 3440 0221 15       		.byte	(.L261-.L262)/2
 3441 0222 15       		.byte	(.L261-.L262)/2
 3442 0223 15       		.byte	(.L261-.L262)/2
 3443 0224 15       		.byte	(.L261-.L262)/2
 3444 0225 15       		.byte	(.L261-.L262)/2
 3445 0226 33       		.byte	(.L265-.L262)/2
 3446 0227 15       		.byte	(.L261-.L262)/2
 3447 0228 15       		.byte	(.L261-.L262)/2
 3448 0229 15       		.byte	(.L261-.L262)/2
 3449 022a 15       		.byte	(.L261-.L262)/2
 3450 022b 15       		.byte	(.L261-.L262)/2
 3451 022c 15       		.byte	(.L261-.L262)/2
 3452 022d 15       		.byte	(.L261-.L262)/2
 3453 022e 35       		.byte	(.L266-.L262)/2
 3454 022f 15       		.byte	(.L261-.L262)/2
 3455 0230 15       		.byte	(.L261-.L262)/2
 3456 0231 15       		.byte	(.L261-.L262)/2
 3457 0232 15       		.byte	(.L261-.L262)/2
 3458 0233 15       		.byte	(.L261-.L262)/2
 3459 0234 15       		.byte	(.L261-.L262)/2
 3460 0235 15       		.byte	(.L261-.L262)/2
 3461 0236 37       		.byte	(.L267-.L262)/2
 3462 0237 00       		.p2align 1
 3463              	.L261:
2059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
 3464              		.loc 1 2059 0 is_stmt 1
 3465 0238 8025     		movs	r5, #128
 3466 023a 68E0     		b	.L221
 3467              	.L369:
 3468              		.align	2
 3469              	.L368:
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 121


 3470 023c F369FFCF 		.word	-805344781
 3471 0240 000C0058 		.word	1476398080
 3472 0244 FFF4FF11 		.word	301987071
 3473 0248 00100140 		.word	1073811456
 3474 024c 00440040 		.word	1073759232
 3475 0250 00480040 		.word	1073760256
 3476 0254 004C0040 		.word	1073761280
 3477 0258 00500040 		.word	1073762304
 3478 025c 00140140 		.word	1073812480
 3479 0260 00780040 		.word	1073772544
 3480 0264 007C0040 		.word	1073773568
 3481 0268 00440258 		.word	1476543488
 3482              	.L263:
 3483              	.LVL287:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3484              		.loc 1 2134 0 discriminator 44
 3485 026c 0425     		movs	r5, #4
 3486 026e 4EE0     		b	.L221
 3487              	.LVL288:
 3488              	.L264:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3489              		.loc 1 2134 0 is_stmt 0 discriminator 45
 3490 0270 4025     		movs	r5, #64
 3491 0272 4CE0     		b	.L221
 3492              	.LVL289:
 3493              	.L265:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3494              		.loc 1 2134 0 discriminator 46
 3495 0274 0825     		movs	r5, #8
 3496 0276 4AE0     		b	.L221
 3497              	.LVL290:
 3498              	.L266:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3499              		.loc 1 2134 0 discriminator 47
 3500 0278 1025     		movs	r5, #16
 3501 027a 48E0     		b	.L221
 3502              	.LVL291:
 3503              	.L267:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3504              		.loc 1 2134 0 discriminator 48
 3505 027c 2025     		movs	r5, #32
 3506 027e 46E0     		b	.L221
 3507              	.LVL292:
 3508              	.L358:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3509              		.loc 1 2134 0 discriminator 49
 3510 0280 9B4A     		ldr	r2, .L370
 3511 0282 526D     		ldr	r2, [r2, #84]
 3512 0284 02F00702 		and	r2, r2, #7
 3513 0288 052A     		cmp	r2, #5
 3514 028a 04D8     		bhi	.L269
 3515 028c DFE802F0 		tbb	[pc, r2]
 3516              	.L270:
 3517 0290 97       		.byte	(.L336-.L270)/2
 3518 0291 05       		.byte	(.L271-.L270)/2
 3519 0292 07       		.byte	(.L272-.L270)/2
 3520 0293 09       		.byte	(.L273-.L270)/2
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 122


 3521 0294 0B       		.byte	(.L274-.L270)/2
 3522 0295 0D       		.byte	(.L275-.L270)/2
 3523              		.p2align 1
 3524              	.L269:
2059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
 3525              		.loc 1 2059 0 is_stmt 1
 3526 0296 8025     		movs	r5, #128
 3527 0298 39E0     		b	.L221
 3528              	.L271:
 3529              	.LVL293:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3530              		.loc 1 2134 0 discriminator 52
 3531 029a 0425     		movs	r5, #4
 3532 029c 37E0     		b	.L221
 3533              	.LVL294:
 3534              	.L272:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3535              		.loc 1 2134 0 is_stmt 0 discriminator 53
 3536 029e 4025     		movs	r5, #64
 3537 02a0 35E0     		b	.L221
 3538              	.LVL295:
 3539              	.L273:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3540              		.loc 1 2134 0 discriminator 54
 3541 02a2 0825     		movs	r5, #8
 3542 02a4 33E0     		b	.L221
 3543              	.LVL296:
 3544              	.L274:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3545              		.loc 1 2134 0 discriminator 55
 3546 02a6 1025     		movs	r5, #16
 3547 02a8 31E0     		b	.L221
 3548              	.LVL297:
 3549              	.L275:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3550              		.loc 1 2134 0 discriminator 56
 3551 02aa 2025     		movs	r5, #32
 3552 02ac 2FE0     		b	.L221
 3553              	.LVL298:
 3554              	.L359:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3555              		.loc 1 2134 0 discriminator 57
 3556 02ae 904A     		ldr	r2, .L370
 3557 02b0 526D     		ldr	r2, [r2, #84]
 3558 02b2 02F00702 		and	r2, r2, #7
 3559 02b6 052A     		cmp	r2, #5
 3560 02b8 04D8     		bhi	.L277
 3561 02ba DFE802F0 		tbb	[pc, r2]
 3562              	.L278:
 3563 02be 82       		.byte	(.L337-.L278)/2
 3564 02bf 05       		.byte	(.L279-.L278)/2
 3565 02c0 07       		.byte	(.L280-.L278)/2
 3566 02c1 09       		.byte	(.L281-.L278)/2
 3567 02c2 0B       		.byte	(.L282-.L278)/2
 3568 02c3 0D       		.byte	(.L283-.L278)/2
 3569              		.p2align 1
 3570              	.L277:
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 123


2059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
 3571              		.loc 1 2059 0 is_stmt 1
 3572 02c4 8025     		movs	r5, #128
 3573 02c6 22E0     		b	.L221
 3574              	.L279:
 3575              	.LVL299:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3576              		.loc 1 2134 0 discriminator 60
 3577 02c8 0425     		movs	r5, #4
 3578 02ca 20E0     		b	.L221
 3579              	.LVL300:
 3580              	.L280:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3581              		.loc 1 2134 0 is_stmt 0 discriminator 61
 3582 02cc 4025     		movs	r5, #64
 3583 02ce 1EE0     		b	.L221
 3584              	.LVL301:
 3585              	.L281:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3586              		.loc 1 2134 0 discriminator 62
 3587 02d0 0825     		movs	r5, #8
 3588 02d2 1CE0     		b	.L221
 3589              	.LVL302:
 3590              	.L282:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3591              		.loc 1 2134 0 discriminator 63
 3592 02d4 1025     		movs	r5, #16
 3593 02d6 1AE0     		b	.L221
 3594              	.LVL303:
 3595              	.L283:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3596              		.loc 1 2134 0 discriminator 64
 3597 02d8 2025     		movs	r5, #32
 3598 02da 18E0     		b	.L221
 3599              	.LVL304:
 3600              	.L360:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3601              		.loc 1 2134 0 discriminator 65
 3602 02dc 02F50E32 		add	r2, r2, #145408
 3603 02e0 926D     		ldr	r2, [r2, #88]
 3604 02e2 02F00702 		and	r2, r2, #7
 3605 02e6 052A     		cmp	r2, #5
 3606 02e8 04D8     		bhi	.L284
 3607 02ea DFE802F0 		tbb	[pc, r2]
 3608              	.L285:
 3609 02ee 6C       		.byte	(.L339-.L285)/2
 3610 02ef 05       		.byte	(.L286-.L285)/2
 3611 02f0 07       		.byte	(.L287-.L285)/2
 3612 02f1 09       		.byte	(.L288-.L285)/2
 3613 02f2 0B       		.byte	(.L289-.L285)/2
 3614 02f3 0D       		.byte	(.L290-.L285)/2
 3615              		.p2align 1
 3616              	.L284:
2059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
 3617              		.loc 1 2059 0 is_stmt 1
 3618 02f4 8025     		movs	r5, #128
 3619 02f6 0AE0     		b	.L221
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 124


 3620              	.L286:
 3621              	.LVL305:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3622              		.loc 1 2134 0 discriminator 67
 3623 02f8 0425     		movs	r5, #4
 3624 02fa 08E0     		b	.L221
 3625              	.LVL306:
 3626              	.L287:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3627              		.loc 1 2134 0 is_stmt 0 discriminator 68
 3628 02fc 4025     		movs	r5, #64
 3629 02fe 06E0     		b	.L221
 3630              	.LVL307:
 3631              	.L288:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3632              		.loc 1 2134 0 discriminator 69
 3633 0300 0825     		movs	r5, #8
 3634 0302 04E0     		b	.L221
 3635              	.LVL308:
 3636              	.L289:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3637              		.loc 1 2134 0 discriminator 70
 3638 0304 1025     		movs	r5, #16
 3639 0306 02E0     		b	.L221
 3640              	.LVL309:
 3641              	.L290:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3642              		.loc 1 2134 0 discriminator 71
 3643 0308 2025     		movs	r5, #32
 3644 030a 00E0     		b	.L221
 3645              	.LVL310:
 3646              	.L330:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3647              		.loc 1 2134 0
 3648 030c 0125     		movs	r5, #1
 3649              	.LVL311:
 3650              	.L221:
2137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 3651              		.loc 1 2137 0 is_stmt 1
 3652 030e 794A     		ldr	r2, .L370+4
 3653 0310 9342     		cmp	r3, r2
 3654 0312 5AD0     		beq	.L361
2235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 3655              		.loc 1 2235 0
 3656 0314 E269     		ldr	r2, [r4, #28]
 3657 0316 B2F5004F 		cmp	r2, #32768
 3658 031a 00F09181 		beq	.L362
2281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 3659              		.loc 1 2281 0
 3660 031e 402D     		cmp	r5, #64
 3661 0320 00F2FB82 		bhi	.L349
 3662 0324 DFE815F0 		tbh	[pc, r5, lsl #1]
 3663              	.L322:
 3664 0328 5A02     		.2byte	(.L321-.L322)/2
 3665 032a 6C02     		.2byte	(.L323-.L322)/2
 3666 032c F902     		.2byte	(.L349-.L322)/2
 3667 032e F902     		.2byte	(.L349-.L322)/2
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 125


 3668 0330 7E02     		.2byte	(.L324-.L322)/2
 3669 0332 F902     		.2byte	(.L349-.L322)/2
 3670 0334 F902     		.2byte	(.L349-.L322)/2
 3671 0336 F902     		.2byte	(.L349-.L322)/2
 3672 0338 A602     		.2byte	(.L325-.L322)/2
 3673 033a F902     		.2byte	(.L349-.L322)/2
 3674 033c F902     		.2byte	(.L349-.L322)/2
 3675 033e F902     		.2byte	(.L349-.L322)/2
 3676 0340 F902     		.2byte	(.L349-.L322)/2
 3677 0342 F902     		.2byte	(.L349-.L322)/2
 3678 0344 F902     		.2byte	(.L349-.L322)/2
 3679 0346 F902     		.2byte	(.L349-.L322)/2
 3680 0348 D002     		.2byte	(.L326-.L322)/2
 3681 034a F902     		.2byte	(.L349-.L322)/2
 3682 034c F902     		.2byte	(.L349-.L322)/2
 3683 034e F902     		.2byte	(.L349-.L322)/2
 3684 0350 F902     		.2byte	(.L349-.L322)/2
 3685 0352 F902     		.2byte	(.L349-.L322)/2
 3686 0354 F902     		.2byte	(.L349-.L322)/2
 3687 0356 F902     		.2byte	(.L349-.L322)/2
 3688 0358 F902     		.2byte	(.L349-.L322)/2
 3689 035a F902     		.2byte	(.L349-.L322)/2
 3690 035c F902     		.2byte	(.L349-.L322)/2
 3691 035e F902     		.2byte	(.L349-.L322)/2
 3692 0360 F902     		.2byte	(.L349-.L322)/2
 3693 0362 F902     		.2byte	(.L349-.L322)/2
 3694 0364 F902     		.2byte	(.L349-.L322)/2
 3695 0366 F902     		.2byte	(.L349-.L322)/2
 3696 0368 E002     		.2byte	(.L327-.L322)/2
 3697 036a F902     		.2byte	(.L349-.L322)/2
 3698 036c F902     		.2byte	(.L349-.L322)/2
 3699 036e F902     		.2byte	(.L349-.L322)/2
 3700 0370 F902     		.2byte	(.L349-.L322)/2
 3701 0372 F902     		.2byte	(.L349-.L322)/2
 3702 0374 F902     		.2byte	(.L349-.L322)/2
 3703 0376 F902     		.2byte	(.L349-.L322)/2
 3704 0378 F902     		.2byte	(.L349-.L322)/2
 3705 037a F902     		.2byte	(.L349-.L322)/2
 3706 037c F902     		.2byte	(.L349-.L322)/2
 3707 037e F902     		.2byte	(.L349-.L322)/2
 3708 0380 F902     		.2byte	(.L349-.L322)/2
 3709 0382 F902     		.2byte	(.L349-.L322)/2
 3710 0384 F902     		.2byte	(.L349-.L322)/2
 3711 0386 F902     		.2byte	(.L349-.L322)/2
 3712 0388 F902     		.2byte	(.L349-.L322)/2
 3713 038a F902     		.2byte	(.L349-.L322)/2
 3714 038c F902     		.2byte	(.L349-.L322)/2
 3715 038e F902     		.2byte	(.L349-.L322)/2
 3716 0390 F902     		.2byte	(.L349-.L322)/2
 3717 0392 F902     		.2byte	(.L349-.L322)/2
 3718 0394 F902     		.2byte	(.L349-.L322)/2
 3719 0396 F902     		.2byte	(.L349-.L322)/2
 3720 0398 F902     		.2byte	(.L349-.L322)/2
 3721 039a F902     		.2byte	(.L349-.L322)/2
 3722 039c F902     		.2byte	(.L349-.L322)/2
 3723 039e F902     		.2byte	(.L349-.L322)/2
 3724 03a0 F902     		.2byte	(.L349-.L322)/2
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 126


 3725 03a2 F902     		.2byte	(.L349-.L322)/2
 3726 03a4 F902     		.2byte	(.L349-.L322)/2
 3727 03a6 F902     		.2byte	(.L349-.L322)/2
 3728 03a8 9202     		.2byte	(.L328-.L322)/2
 3729              	.LVL312:
 3730              		.p2align 1
 3731              	.L331:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 3732              		.loc 1 2134 0
 3733 03aa 0025     		movs	r5, #0
 3734 03ac AFE7     		b	.L221
 3735              	.L332:
 3736 03ae 0025     		movs	r5, #0
 3737 03b0 ADE7     		b	.L221
 3738              	.L333:
 3739 03b2 0025     		movs	r5, #0
 3740 03b4 ABE7     		b	.L221
 3741              	.L334:
 3742 03b6 0025     		movs	r5, #0
 3743 03b8 A9E7     		b	.L221
 3744              	.L335:
 3745 03ba 0125     		movs	r5, #1
 3746 03bc A7E7     		b	.L221
 3747              	.L336:
 3748 03be 0025     		movs	r5, #0
 3749 03c0 A5E7     		b	.L221
 3750              	.L337:
 3751 03c2 0025     		movs	r5, #0
 3752 03c4 A3E7     		b	.L221
 3753              	.L339:
 3754 03c6 0225     		movs	r5, #2
 3755 03c8 A1E7     		b	.L221
 3756              	.LVL313:
 3757              	.L361:
2142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 3758              		.loc 1 2142 0
 3759 03ca 082D     		cmp	r5, #8
 3760 03cc 36D0     		beq	.L293
 3761 03ce 07D9     		bls	.L363
 3762 03d0 202D     		cmp	r5, #32
 3763 03d2 3FD0     		beq	.L341
 3764 03d4 402D     		cmp	r5, #64
 3765 03d6 2CD0     		beq	.L298
 3766 03d8 102D     		cmp	r5, #16
 3767 03da 0AD0     		beq	.L364
 3768              	.L340:
2173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       break;
 3769              		.loc 1 2173 0
 3770 03dc 0120     		movs	r0, #1
 3771 03de 6CE1     		b	.L292
 3772              	.L363:
2142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 3773              		.loc 1 2142 0
 3774 03e0 022D     		cmp	r5, #2
 3775 03e2 08D0     		beq	.L295
 3776 03e4 042D     		cmp	r5, #4
 3777 03e6 F9D1     		bne	.L340
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 127


2148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       tmpreg = pll2_clocks.PLL2_Q_Frequency;
 3778              		.loc 1 2148 0
 3779 03e8 03A8     		add	r0, sp, #12
 3780 03ea FFF7FEFF 		bl	HAL_RCCEx_GetPLL2ClockFreq
 3781              	.LVL314:
2149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       break;
 3782              		.loc 1 2149 0
 3783 03ee 049B     		ldr	r3, [sp, #16]
 3784              	.LVL315:
2150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     case UART_CLOCKSOURCE_PLL3:
 3785              		.loc 1 2150 0
 3786 03f0 04E0     		b	.L300
 3787              	.LVL316:
 3788              	.L364:
2166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       break;
 3789              		.loc 1 2166 0
 3790 03f2 414B     		ldr	r3, .L370+8
 3791 03f4 05E0     		b	.L297
 3792              	.L295:
2145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       break;
 3793              		.loc 1 2145 0
 3794 03f6 FFF7FEFF 		bl	HAL_RCCEx_GetD3PCLK1Freq
 3795              	.LVL317:
 3796 03fa 0346     		mov	r3, r0
 3797              	.LVL318:
 3798              	.L300:
2178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 3799              		.loc 1 2178 0
 3800 03fc 002B     		cmp	r3, #0
 3801 03fe 00F08482 		beq	.L365
 3802              	.LVL319:
 3803              	.L297:
2181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            (tmpreg > (4096 * huart->Init.BaudRate) ))
 3804              		.loc 1 2181 0
 3805 0402 6668     		ldr	r6, [r4, #4]
 3806 0404 06EB4602 		add	r2, r6, r6, lsl #1
 3807 0408 9A42     		cmp	r2, r3
 3808 040a 00F28082 		bhi	.L344
2181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****            (tmpreg > (4096 * huart->Init.BaudRate) ))
 3809              		.loc 1 2181 0 is_stmt 0 discriminator 1
 3810 040e B3EB063F 		cmp	r3, r6, lsl #12
 3811 0412 00F27E82 		bhi	.L345
2188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
 3812              		.loc 1 2188 0 is_stmt 1
 3813 0416 082D     		cmp	r5, #8
 3814 0418 00F09580 		beq	.L302
 3815 041c 1FD9     		bls	.L366
 3816 041e 202D     		cmp	r5, #32
 3817 0420 00F0F580 		beq	.L306
 3818 0424 402D     		cmp	r5, #64
 3819 0426 6FD0     		beq	.L307
 3820 0428 102D     		cmp	r5, #16
 3821 042a 00F0D280 		beq	.L367
 3822              	.L346:
2219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           break;
 3823              		.loc 1 2219 0
 3824 042e 0120     		movs	r0, #1
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 128


 3825 0430 54E0     		b	.L301
 3826              	.LVL320:
 3827              	.L298:
2152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       tmpreg = pll3_clocks.PLL3_Q_Frequency;
 3828              		.loc 1 2152 0
 3829 0432 6846     		mov	r0, sp
 3830 0434 FFF7FEFF 		bl	HAL_RCCEx_GetPLL3ClockFreq
 3831              	.LVL321:
2153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       break;
 3832              		.loc 1 2153 0
 3833 0438 019B     		ldr	r3, [sp, #4]
 3834              	.LVL322:
2154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     case UART_CLOCKSOURCE_HSI:
 3835              		.loc 1 2154 0
 3836 043a DFE7     		b	.L300
 3837              	.LVL323:
 3838              	.L293:
2156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 3839              		.loc 1 2156 0
 3840 043c 2C4B     		ldr	r3, .L370
 3841 043e 1B68     		ldr	r3, [r3]
 3842 0440 13F0200F 		tst	r3, #32
 3843 0444 09D0     		beq	.L342
2158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 3844              		.loc 1 2158 0
 3845 0446 2A4B     		ldr	r3, .L370
 3846 0448 1868     		ldr	r0, [r3]
 3847 044a C0F3C100 		ubfx	r0, r0, #3, #2
 3848 044e 2B4B     		ldr	r3, .L370+12
 3849 0450 C340     		lsrs	r3, r3, r0
 3850              	.LVL324:
 3851 0452 D3E7     		b	.L300
 3852              	.LVL325:
 3853              	.L341:
2169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       break;
 3854              		.loc 1 2169 0
 3855 0454 4FF40043 		mov	r3, #32768
 3856 0458 D3E7     		b	.L297
 3857              	.L342:
2162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 3858              		.loc 1 2162 0
 3859 045a 284B     		ldr	r3, .L370+12
 3860 045c D1E7     		b	.L297
 3861              	.LVL326:
 3862              	.L366:
2188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
 3863              		.loc 1 2188 0
 3864 045e 022D     		cmp	r5, #2
 3865 0460 20D0     		beq	.L304
 3866 0462 042D     		cmp	r5, #4
 3867 0464 E3D1     		bne	.L346
2194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           tmpreg = (uint32_t)(UART_DIV_LPUART(pll2_clocks.PLL2_Q_Frequency, huart->Init.BaudRate, h
 3868              		.loc 1 2194 0
 3869 0466 03A8     		add	r0, sp, #12
 3870 0468 FFF7FEFF 		bl	HAL_RCCEx_GetPLL2ClockFreq
 3871              	.LVL327:
2195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           break;
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 129


 3872              		.loc 1 2195 0
 3873 046c 0025     		movs	r5, #0
 3874              	.LVL328:
 3875 046e 626A     		ldr	r2, [r4, #36]
 3876 0470 234B     		ldr	r3, .L370+16
 3877 0472 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 3878 0476 0023     		movs	r3, #0
 3879 0478 0498     		ldr	r0, [sp, #16]
 3880 047a 2946     		mov	r1, r5
 3881 047c FFF7FEFF 		bl	__aeabi_uldivmod
 3882              	.LVL329:
 3883 0480 0F02     		lsls	r7, r1, #8
 3884 0482 47EA1067 		orr	r7, r7, r0, lsr #24
 3885 0486 0602     		lsls	r6, r0, #8
 3886 0488 6268     		ldr	r2, [r4, #4]
 3887 048a 5008     		lsrs	r0, r2, #1
 3888 048c 2B46     		mov	r3, r5
 3889 048e 16EB0008 		adds	r8, r6, r0
 3890 0492 47F10009 		adc	r9, r7, #0
 3891 0496 4046     		mov	r0, r8
 3892 0498 4946     		mov	r1, r9
 3893 049a FFF7FEFF 		bl	__aeabi_uldivmod
 3894              	.LVL330:
 3895 049e 0346     		mov	r3, r0
2196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         case UART_CLOCKSOURCE_PLL3:
 3896              		.loc 1 2196 0
 3897 04a0 2846     		mov	r0, r5
 3898 04a2 1BE0     		b	.L301
 3899              	.LVL331:
 3900              	.L304:
2191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           break;
 3901              		.loc 1 2191 0
 3902 04a4 FFF7FEFF 		bl	HAL_RCCEx_GetD3PCLK1Freq
 3903              	.LVL332:
 3904 04a8 0025     		movs	r5, #0
 3905              	.LVL333:
 3906 04aa 626A     		ldr	r2, [r4, #36]
 3907 04ac 144B     		ldr	r3, .L370+16
 3908 04ae 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 3909 04b2 0023     		movs	r3, #0
 3910 04b4 2946     		mov	r1, r5
 3911 04b6 FFF7FEFF 		bl	__aeabi_uldivmod
 3912              	.LVL334:
 3913 04ba 0F02     		lsls	r7, r1, #8
 3914 04bc 47EA1067 		orr	r7, r7, r0, lsr #24
 3915 04c0 0602     		lsls	r6, r0, #8
 3916 04c2 6268     		ldr	r2, [r4, #4]
 3917 04c4 5008     		lsrs	r0, r2, #1
 3918 04c6 2B46     		mov	r3, r5
 3919 04c8 16EB0008 		adds	r8, r6, r0
 3920 04cc 47F10009 		adc	r9, r7, #0
 3921 04d0 4046     		mov	r0, r8
 3922 04d2 4946     		mov	r1, r9
 3923 04d4 FFF7FEFF 		bl	__aeabi_uldivmod
 3924              	.LVL335:
 3925 04d8 0346     		mov	r3, r0
2192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         case UART_CLOCKSOURCE_PLL2:
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 130


 3926              		.loc 1 2192 0
 3927 04da 2846     		mov	r0, r5
 3928              	.L301:
 3929              	.LVL336:
2223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         {
 3930              		.loc 1 2223 0
 3931 04dc A3F54071 		sub	r1, r3, #768
 3932 04e0 084A     		ldr	r2, .L370+20
 3933 04e2 9142     		cmp	r1, r2
 3934 04e4 00F21782 		bhi	.L347
2225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 3935              		.loc 1 2225 0
 3936 04e8 2268     		ldr	r2, [r4]
 3937 04ea D360     		str	r3, [r2, #12]
 3938 04ec E5E0     		b	.L292
 3939              	.L371:
 3940 04ee 00BF     		.align	2
 3941              	.L370:
 3942 04f0 00440258 		.word	1476543488
 3943 04f4 000C0058 		.word	1476398080
 3944 04f8 00093D00 		.word	4000000
 3945 04fc 0090D003 		.word	64000000
 3946 0500 00000000 		.word	.LANCHOR0
 3947 0504 FFFC0F00 		.word	1047807
 3948              	.LVL337:
 3949              	.L307:
2198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           tmpreg = (uint32_t)(UART_DIV_LPUART(pll3_clocks.PLL3_Q_Frequency, huart->Init.BaudRate, h
 3950              		.loc 1 2198 0
 3951 0508 6846     		mov	r0, sp
 3952 050a FFF7FEFF 		bl	HAL_RCCEx_GetPLL3ClockFreq
 3953              	.LVL338:
2199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           break;
 3954              		.loc 1 2199 0
 3955 050e 0025     		movs	r5, #0
 3956              	.LVL339:
 3957 0510 626A     		ldr	r2, [r4, #36]
 3958 0512 A44B     		ldr	r3, .L372
 3959 0514 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 3960 0518 0023     		movs	r3, #0
 3961 051a 0198     		ldr	r0, [sp, #4]
 3962 051c 2946     		mov	r1, r5
 3963 051e FFF7FEFF 		bl	__aeabi_uldivmod
 3964              	.LVL340:
 3965 0522 0F02     		lsls	r7, r1, #8
 3966 0524 47EA1067 		orr	r7, r7, r0, lsr #24
 3967 0528 0602     		lsls	r6, r0, #8
 3968 052a 6268     		ldr	r2, [r4, #4]
 3969 052c 5008     		lsrs	r0, r2, #1
 3970 052e 2B46     		mov	r3, r5
 3971 0530 16EB0008 		adds	r8, r6, r0
 3972 0534 47F10009 		adc	r9, r7, #0
 3973 0538 4046     		mov	r0, r8
 3974 053a 4946     		mov	r1, r9
 3975 053c FFF7FEFF 		bl	__aeabi_uldivmod
 3976              	.LVL341:
 3977 0540 0346     		mov	r3, r0
2200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         case UART_CLOCKSOURCE_HSI:
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 131


 3978              		.loc 1 2200 0
 3979 0542 2846     		mov	r0, r5
 3980 0544 CAE7     		b	.L301
 3981              	.LVL342:
 3982              	.L302:
2202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           {
 3983              		.loc 1 2202 0
 3984 0546 984B     		ldr	r3, .L372+4
 3985 0548 1B68     		ldr	r3, [r3]
 3986 054a 13F0200F 		tst	r3, #32
 3987 054e 22D0     		beq	.L309
2204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           }
 3988              		.loc 1 2204 0
 3989 0550 954B     		ldr	r3, .L372+4
 3990 0552 1968     		ldr	r1, [r3]
 3991 0554 C1F3C101 		ubfx	r1, r1, #3, #2
 3992 0558 0025     		movs	r5, #0
 3993              	.LVL343:
 3994 055a 626A     		ldr	r2, [r4, #36]
 3995 055c 914B     		ldr	r3, .L372
 3996 055e 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 3997 0562 0023     		movs	r3, #0
 3998 0564 9148     		ldr	r0, .L372+8
 3999 0566 C840     		lsrs	r0, r0, r1
 4000 0568 2946     		mov	r1, r5
 4001 056a FFF7FEFF 		bl	__aeabi_uldivmod
 4002              	.LVL344:
 4003 056e 4FEA0129 		lsl	r9, r1, #8
 4004 0572 49EA1069 		orr	r9, r9, r0, lsr #24
 4005 0576 4FEA0028 		lsl	r8, r0, #8
 4006 057a 7008     		lsrs	r0, r6, #1
 4007 057c 3246     		mov	r2, r6
 4008 057e 2B46     		mov	r3, r5
 4009 0580 18EB0006 		adds	r6, r8, r0
 4010 0584 49F10007 		adc	r7, r9, #0
 4011 0588 3046     		mov	r0, r6
 4012 058a 3946     		mov	r1, r7
 4013 058c FFF7FEFF 		bl	__aeabi_uldivmod
 4014              	.LVL345:
 4015 0590 0346     		mov	r3, r0
 4016 0592 2846     		mov	r0, r5
 4017 0594 A2E7     		b	.L301
 4018              	.LVL346:
 4019              	.L309:
2208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           }
 4020              		.loc 1 2208 0
 4021 0596 626A     		ldr	r2, [r4, #36]
 4022 0598 824B     		ldr	r3, .L372
 4023 059a 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 4024 059e 0023     		movs	r3, #0
 4025 05a0 8248     		ldr	r0, .L372+8
 4026 05a2 0021     		movs	r1, #0
 4027 05a4 FFF7FEFF 		bl	__aeabi_uldivmod
 4028              	.LVL347:
 4029 05a8 4FEA0129 		lsl	r9, r1, #8
 4030 05ac 49EA1069 		orr	r9, r9, r0, lsr #24
 4031 05b0 4FEA0028 		lsl	r8, r0, #8
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 132


 4032 05b4 7008     		lsrs	r0, r6, #1
 4033 05b6 0025     		movs	r5, #0
 4034              	.LVL348:
 4035 05b8 3246     		mov	r2, r6
 4036 05ba 2B46     		mov	r3, r5
 4037 05bc 18EB0006 		adds	r6, r8, r0
 4038 05c0 49F10007 		adc	r7, r9, #0
 4039 05c4 3046     		mov	r0, r6
 4040 05c6 3946     		mov	r1, r7
 4041 05c8 FFF7FEFF 		bl	__aeabi_uldivmod
 4042              	.LVL349:
 4043 05cc 0346     		mov	r3, r0
 4044 05ce 2846     		mov	r0, r5
 4045 05d0 84E7     		b	.L301
 4046              	.LVL350:
 4047              	.L367:
2212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           break;
 4048              		.loc 1 2212 0
 4049 05d2 626A     		ldr	r2, [r4, #36]
 4050 05d4 734B     		ldr	r3, .L372
 4051 05d6 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 4052 05da 0023     		movs	r3, #0
 4053 05dc 7448     		ldr	r0, .L372+12
 4054 05de 0021     		movs	r1, #0
 4055 05e0 FFF7FEFF 		bl	__aeabi_uldivmod
 4056              	.LVL351:
 4057 05e4 4FEA0129 		lsl	r9, r1, #8
 4058 05e8 49EA1069 		orr	r9, r9, r0, lsr #24
 4059 05ec 4FEA0028 		lsl	r8, r0, #8
 4060 05f0 7008     		lsrs	r0, r6, #1
 4061 05f2 0025     		movs	r5, #0
 4062              	.LVL352:
 4063 05f4 3246     		mov	r2, r6
 4064 05f6 2B46     		mov	r3, r5
 4065 05f8 18EB0006 		adds	r6, r8, r0
 4066 05fc 49F10007 		adc	r7, r9, #0
 4067 0600 3046     		mov	r0, r6
 4068 0602 3946     		mov	r1, r7
 4069 0604 FFF7FEFF 		bl	__aeabi_uldivmod
 4070              	.LVL353:
 4071 0608 0346     		mov	r3, r0
2213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         case UART_CLOCKSOURCE_LSE:
 4072              		.loc 1 2213 0
 4073 060a 2846     		mov	r0, r5
 4074 060c 66E7     		b	.L301
 4075              	.LVL354:
 4076              	.L306:
2215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****           break;
 4077              		.loc 1 2215 0
 4078 060e 626A     		ldr	r2, [r4, #36]
 4079 0610 644B     		ldr	r3, .L372
 4080 0612 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 4081 0616 4FF40043 		mov	r3, #32768
 4082 061a B3FBF2F3 		udiv	r3, r3, r2
 4083 061e 4FF00009 		mov	r9, #0
 4084 0622 4FEA0328 		lsl	r8, r3, #8
 4085 0626 7708     		lsrs	r7, r6, #1
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 133


 4086 0628 0025     		movs	r5, #0
 4087              	.LVL355:
 4088 062a 3246     		mov	r2, r6
 4089 062c 2B46     		mov	r3, r5
 4090 062e 18EB0700 		adds	r0, r8, r7
 4091 0632 49F10001 		adc	r1, r9, #0
 4092 0636 FFF7FEFF 		bl	__aeabi_uldivmod
 4093              	.LVL356:
 4094 063a 0346     		mov	r3, r0
2216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         case UART_CLOCKSOURCE_UNDEFINED:
 4095              		.loc 1 2216 0
 4096 063c 2846     		mov	r0, r5
 4097 063e 4DE7     		b	.L301
 4098              	.LVL357:
 4099              	.L362:
2237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 4100              		.loc 1 2237 0
 4101 0640 402D     		cmp	r5, #64
 4102 0642 00F2C880 		bhi	.L348
 4103 0646 DFE805F0 		tbb	[pc, r5]
 4104              	.L313:
 4105 064a 21       		.byte	(.L312-.L313)/2
 4106 064b 3B       		.byte	(.L314-.L313)/2
 4107 064c C6       		.byte	(.L348-.L313)/2
 4108 064d C6       		.byte	(.L348-.L313)/2
 4109 064e 4C       		.byte	(.L315-.L313)/2
 4110 064f C6       		.byte	(.L348-.L313)/2
 4111 0650 C6       		.byte	(.L348-.L313)/2
 4112 0651 C6       		.byte	(.L348-.L313)/2
 4113 0652 72       		.byte	(.L316-.L313)/2
 4114 0653 C6       		.byte	(.L348-.L313)/2
 4115 0654 C6       		.byte	(.L348-.L313)/2
 4116 0655 C6       		.byte	(.L348-.L313)/2
 4117 0656 C6       		.byte	(.L348-.L313)/2
 4118 0657 C6       		.byte	(.L348-.L313)/2
 4119 0658 C6       		.byte	(.L348-.L313)/2
 4120 0659 C6       		.byte	(.L348-.L313)/2
 4121 065a 9C       		.byte	(.L317-.L313)/2
 4122 065b C6       		.byte	(.L348-.L313)/2
 4123 065c C6       		.byte	(.L348-.L313)/2
 4124 065d C6       		.byte	(.L348-.L313)/2
 4125 065e C6       		.byte	(.L348-.L313)/2
 4126 065f C6       		.byte	(.L348-.L313)/2
 4127 0660 C6       		.byte	(.L348-.L313)/2
 4128 0661 C6       		.byte	(.L348-.L313)/2
 4129 0662 C6       		.byte	(.L348-.L313)/2
 4130 0663 C6       		.byte	(.L348-.L313)/2
 4131 0664 C6       		.byte	(.L348-.L313)/2
 4132 0665 C6       		.byte	(.L348-.L313)/2
 4133 0666 C6       		.byte	(.L348-.L313)/2
 4134 0667 C6       		.byte	(.L348-.L313)/2
 4135 0668 C6       		.byte	(.L348-.L313)/2
 4136 0669 C6       		.byte	(.L348-.L313)/2
 4137 066a B5       		.byte	(.L318-.L313)/2
 4138 066b C6       		.byte	(.L348-.L313)/2
 4139 066c C6       		.byte	(.L348-.L313)/2
 4140 066d C6       		.byte	(.L348-.L313)/2
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 134


 4141 066e C6       		.byte	(.L348-.L313)/2
 4142 066f C6       		.byte	(.L348-.L313)/2
 4143 0670 C6       		.byte	(.L348-.L313)/2
 4144 0671 C6       		.byte	(.L348-.L313)/2
 4145 0672 C6       		.byte	(.L348-.L313)/2
 4146 0673 C6       		.byte	(.L348-.L313)/2
 4147 0674 C6       		.byte	(.L348-.L313)/2
 4148 0675 C6       		.byte	(.L348-.L313)/2
 4149 0676 C6       		.byte	(.L348-.L313)/2
 4150 0677 C6       		.byte	(.L348-.L313)/2
 4151 0678 C6       		.byte	(.L348-.L313)/2
 4152 0679 C6       		.byte	(.L348-.L313)/2
 4153 067a C6       		.byte	(.L348-.L313)/2
 4154 067b C6       		.byte	(.L348-.L313)/2
 4155 067c C6       		.byte	(.L348-.L313)/2
 4156 067d C6       		.byte	(.L348-.L313)/2
 4157 067e C6       		.byte	(.L348-.L313)/2
 4158 067f C6       		.byte	(.L348-.L313)/2
 4159 0680 C6       		.byte	(.L348-.L313)/2
 4160 0681 C6       		.byte	(.L348-.L313)/2
 4161 0682 C6       		.byte	(.L348-.L313)/2
 4162 0683 C6       		.byte	(.L348-.L313)/2
 4163 0684 C6       		.byte	(.L348-.L313)/2
 4164 0685 C6       		.byte	(.L348-.L313)/2
 4165 0686 C6       		.byte	(.L348-.L313)/2
 4166 0687 C6       		.byte	(.L348-.L313)/2
 4167 0688 C6       		.byte	(.L348-.L313)/2
 4168 0689 C6       		.byte	(.L348-.L313)/2
 4169 068a 5F       		.byte	(.L319-.L313)/2
 4170 068b 00       		.p2align 1
 4171              	.L312:
2240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       break;
 4172              		.loc 1 2240 0
 4173 068c FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4174              	.LVL358:
 4175 0690 626A     		ldr	r2, [r4, #36]
 4176 0692 444B     		ldr	r3, .L372
 4177 0694 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 4178 0698 B0FBF2F0 		udiv	r0, r0, r2
 4179 069c 6368     		ldr	r3, [r4, #4]
 4180 069e 5A08     		lsrs	r2, r3, #1
 4181 06a0 02EB4002 		add	r2, r2, r0, lsl #1
 4182 06a4 B2FBF3F2 		udiv	r2, r2, r3
 4183 06a8 92B2     		uxth	r2, r2
 4184              	.LVL359:
2062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   PLL2_ClocksTypeDef pll2_clocks;
 4185              		.loc 1 2062 0
 4186 06aa 0020     		movs	r0, #0
 4187              	.LVL360:
 4188              	.L311:
2275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 4189              		.loc 1 2275 0
 4190 06ac 22F00F03 		bic	r3, r2, #15
 4191              	.LVL361:
2276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->Instance->BRR = brrtemp;
 4192              		.loc 1 2276 0
 4193 06b0 C2F34202 		ubfx	r2, r2, #1, #3
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 135


 4194              	.LVL362:
 4195 06b4 1A43     		orrs	r2, r2, r3
 4196              	.LVL363:
2277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 4197              		.loc 1 2277 0
 4198 06b6 2368     		ldr	r3, [r4]
 4199 06b8 DA60     		str	r2, [r3, #12]
 4200              	.LVL364:
 4201              	.L292:
2321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4202              		.loc 1 2321 0
 4203 06ba 07B0     		add	sp, sp, #28
 4204              	.LCFI27:
 4205              		.cfi_remember_state
 4206              		.cfi_def_cfa_offset 28
 4207              		@ sp needed
 4208 06bc BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 4209              	.LVL365:
 4210              	.L314:
 4211              	.LCFI28:
 4212              		.cfi_restore_state
2243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       break;
 4213              		.loc 1 2243 0
 4214 06c0 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 4215              	.LVL366:
 4216 06c4 626A     		ldr	r2, [r4, #36]
 4217 06c6 374B     		ldr	r3, .L372
 4218 06c8 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 4219 06cc B0FBF2F0 		udiv	r0, r0, r2
 4220 06d0 6368     		ldr	r3, [r4, #4]
 4221 06d2 5A08     		lsrs	r2, r3, #1
 4222 06d4 02EB4002 		add	r2, r2, r0, lsl #1
 4223 06d8 B2FBF3F2 		udiv	r2, r2, r3
 4224 06dc 92B2     		uxth	r2, r2
 4225              	.LVL367:
2062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   PLL2_ClocksTypeDef pll2_clocks;
 4226              		.loc 1 2062 0
 4227 06de 0020     		movs	r0, #0
2244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     case UART_CLOCKSOURCE_PLL2:
 4228              		.loc 1 2244 0
 4229 06e0 E4E7     		b	.L311
 4230              	.LVL368:
 4231              	.L315:
2246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pll2_clocks.PLL2_Q_Frequency, huart->Init.BaudRate
 4232              		.loc 1 2246 0
 4233 06e2 03A8     		add	r0, sp, #12
 4234 06e4 FFF7FEFF 		bl	HAL_RCCEx_GetPLL2ClockFreq
 4235              	.LVL369:
2247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       break;
 4236              		.loc 1 2247 0
 4237 06e8 626A     		ldr	r2, [r4, #36]
 4238 06ea 2E4B     		ldr	r3, .L372
 4239 06ec 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 4240 06f0 049A     		ldr	r2, [sp, #16]
 4241 06f2 B2FBF3F3 		udiv	r3, r2, r3
 4242 06f6 6168     		ldr	r1, [r4, #4]
 4243 06f8 4A08     		lsrs	r2, r1, #1
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 136


 4244 06fa 02EB4302 		add	r2, r2, r3, lsl #1
 4245 06fe B2FBF1F2 		udiv	r2, r2, r1
 4246 0702 92B2     		uxth	r2, r2
 4247              	.LVL370:
2062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   PLL2_ClocksTypeDef pll2_clocks;
 4248              		.loc 1 2062 0
 4249 0704 0020     		movs	r0, #0
2248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     case UART_CLOCKSOURCE_PLL3:
 4250              		.loc 1 2248 0
 4251 0706 D1E7     		b	.L311
 4252              	.LVL371:
 4253              	.L319:
2250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pll3_clocks.PLL3_Q_Frequency, huart->Init.BaudRate
 4254              		.loc 1 2250 0
 4255 0708 6846     		mov	r0, sp
 4256 070a FFF7FEFF 		bl	HAL_RCCEx_GetPLL3ClockFreq
 4257              	.LVL372:
2251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       break;
 4258              		.loc 1 2251 0
 4259 070e 626A     		ldr	r2, [r4, #36]
 4260 0710 244B     		ldr	r3, .L372
 4261 0712 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 4262 0716 019A     		ldr	r2, [sp, #4]
 4263 0718 B2FBF3F3 		udiv	r3, r2, r3
 4264 071c 6168     		ldr	r1, [r4, #4]
 4265 071e 4A08     		lsrs	r2, r1, #1
 4266 0720 02EB4302 		add	r2, r2, r3, lsl #1
 4267 0724 B2FBF1F2 		udiv	r2, r2, r1
 4268 0728 92B2     		uxth	r2, r2
 4269              	.LVL373:
2062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   PLL2_ClocksTypeDef pll2_clocks;
 4270              		.loc 1 2062 0
 4271 072a 0020     		movs	r0, #0
2252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     case UART_CLOCKSOURCE_HSI:
 4272              		.loc 1 2252 0
 4273 072c BEE7     		b	.L311
 4274              	.LVL374:
 4275              	.L316:
2254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 4276              		.loc 1 2254 0
 4277 072e 1E4B     		ldr	r3, .L372+4
 4278 0730 1B68     		ldr	r3, [r3]
 4279 0732 13F0200F 		tst	r3, #32
 4280 0736 14D0     		beq	.L320
2256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 4281              		.loc 1 2256 0
 4282 0738 1B4B     		ldr	r3, .L372+4
 4283 073a 1A68     		ldr	r2, [r3]
 4284 073c C2F3C102 		ubfx	r2, r2, #3, #2
 4285 0740 1A4B     		ldr	r3, .L372+8
 4286 0742 D340     		lsrs	r3, r3, r2
 4287 0744 616A     		ldr	r1, [r4, #36]
 4288 0746 174A     		ldr	r2, .L372
 4289 0748 32F81120 		ldrh	r2, [r2, r1, lsl #1]
 4290 074c B3FBF2F3 		udiv	r3, r3, r2
 4291 0750 6168     		ldr	r1, [r4, #4]
 4292 0752 4A08     		lsrs	r2, r1, #1
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 137


 4293 0754 02EB4302 		add	r2, r2, r3, lsl #1
 4294 0758 B2FBF1F2 		udiv	r2, r2, r1
 4295 075c 92B2     		uxth	r2, r2
 4296              	.LVL375:
2062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   PLL2_ClocksTypeDef pll2_clocks;
 4297              		.loc 1 2062 0
 4298 075e 0020     		movs	r0, #0
 4299 0760 A4E7     		b	.L311
 4300              	.LVL376:
 4301              	.L320:
2260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 4302              		.loc 1 2260 0
 4303 0762 626A     		ldr	r2, [r4, #36]
 4304 0764 0F4B     		ldr	r3, .L372
 4305 0766 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 4306 076a 104B     		ldr	r3, .L372+8
 4307 076c B3FBF2F3 		udiv	r3, r3, r2
 4308 0770 6168     		ldr	r1, [r4, #4]
 4309 0772 4A08     		lsrs	r2, r1, #1
 4310 0774 02EB4302 		add	r2, r2, r3, lsl #1
 4311 0778 B2FBF1F2 		udiv	r2, r2, r1
 4312 077c 92B2     		uxth	r2, r2
 4313              	.LVL377:
2062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   PLL2_ClocksTypeDef pll2_clocks;
 4314              		.loc 1 2062 0
 4315 077e 0020     		movs	r0, #0
 4316 0780 94E7     		b	.L311
 4317              	.LVL378:
 4318              	.L317:
2264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       break;
 4319              		.loc 1 2264 0
 4320 0782 626A     		ldr	r2, [r4, #36]
 4321 0784 074B     		ldr	r3, .L372
 4322 0786 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 4323 078a 094A     		ldr	r2, .L372+12
 4324 078c B2FBF3F3 		udiv	r3, r2, r3
 4325 0790 6168     		ldr	r1, [r4, #4]
 4326 0792 4A08     		lsrs	r2, r1, #1
 4327 0794 02EB4302 		add	r2, r2, r3, lsl #1
 4328 0798 B2FBF1F2 		udiv	r2, r2, r1
 4329 079c 92B2     		uxth	r2, r2
 4330              	.LVL379:
2062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   PLL2_ClocksTypeDef pll2_clocks;
 4331              		.loc 1 2062 0
 4332 079e 0020     		movs	r0, #0
2265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     case UART_CLOCKSOURCE_LSE:
 4333              		.loc 1 2265 0
 4334 07a0 84E7     		b	.L311
 4335              	.L373:
 4336 07a2 00BF     		.align	2
 4337              	.L372:
 4338 07a4 00000000 		.word	.LANCHOR0
 4339 07a8 00440258 		.word	1476543488
 4340 07ac 0090D003 		.word	64000000
 4341 07b0 00093D00 		.word	4000000
 4342              	.LVL380:
 4343              	.L318:
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 138


2267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       break;
 4344              		.loc 1 2267 0
 4345 07b4 626A     		ldr	r2, [r4, #36]
 4346 07b6 5A4B     		ldr	r3, .L374
 4347 07b8 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 4348 07bc 4FF40042 		mov	r2, #32768
 4349 07c0 B2FBF3F3 		udiv	r3, r2, r3
 4350 07c4 6168     		ldr	r1, [r4, #4]
 4351 07c6 4A08     		lsrs	r2, r1, #1
 4352 07c8 02EB4302 		add	r2, r2, r3, lsl #1
 4353 07cc B2FBF1F2 		udiv	r2, r2, r1
 4354 07d0 92B2     		uxth	r2, r2
 4355              	.LVL381:
2062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   PLL2_ClocksTypeDef pll2_clocks;
 4356              		.loc 1 2062 0
 4357 07d2 0020     		movs	r0, #0
2268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     case UART_CLOCKSOURCE_UNDEFINED:
 4358              		.loc 1 2268 0
 4359 07d4 6AE7     		b	.L311
 4360              	.LVL382:
 4361              	.L348:
2271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       break;
 4362              		.loc 1 2271 0
 4363 07d6 0120     		movs	r0, #1
2061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 4364              		.loc 1 2061 0
 4365 07d8 0022     		movs	r2, #0
 4366 07da 67E7     		b	.L311
 4367              	.L321:
2284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       break;
 4368              		.loc 1 2284 0
 4369 07dc FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4370              	.LVL383:
 4371 07e0 626A     		ldr	r2, [r4, #36]
 4372 07e2 4F4B     		ldr	r3, .L374
 4373 07e4 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 4374 07e8 B0FBF3F3 		udiv	r3, r0, r3
 4375 07ec 6268     		ldr	r2, [r4, #4]
 4376 07ee 03EB5203 		add	r3, r3, r2, lsr #1
 4377 07f2 B3FBF2F3 		udiv	r3, r3, r2
 4378 07f6 2268     		ldr	r2, [r4]
 4379 07f8 9BB2     		uxth	r3, r3
 4380 07fa D360     		str	r3, [r2, #12]
2062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   PLL2_ClocksTypeDef pll2_clocks;
 4381              		.loc 1 2062 0
 4382 07fc 0020     		movs	r0, #0
2285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     case UART_CLOCKSOURCE_D2PCLK2:
 4383              		.loc 1 2285 0
 4384 07fe 5CE7     		b	.L292
 4385              	.L323:
2287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       break;
 4386              		.loc 1 2287 0
 4387 0800 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 4388              	.LVL384:
 4389 0804 626A     		ldr	r2, [r4, #36]
 4390 0806 464B     		ldr	r3, .L374
 4391 0808 33F81230 		ldrh	r3, [r3, r2, lsl #1]
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 139


 4392 080c B0FBF3F3 		udiv	r3, r0, r3
 4393 0810 6268     		ldr	r2, [r4, #4]
 4394 0812 03EB5203 		add	r3, r3, r2, lsr #1
 4395 0816 B3FBF2F3 		udiv	r3, r3, r2
 4396 081a 2268     		ldr	r2, [r4]
 4397 081c 9BB2     		uxth	r3, r3
 4398 081e D360     		str	r3, [r2, #12]
2062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   PLL2_ClocksTypeDef pll2_clocks;
 4399              		.loc 1 2062 0
 4400 0820 0020     		movs	r0, #0
2288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     case UART_CLOCKSOURCE_PLL2:
 4401              		.loc 1 2288 0
 4402 0822 4AE7     		b	.L292
 4403              	.L324:
2290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->Instance->BRR =  (uint16_t)(UART_DIV_SAMPLING16(pll2_clocks.PLL2_Q_Frequency, huart-
 4404              		.loc 1 2290 0
 4405 0824 03A8     		add	r0, sp, #12
 4406 0826 FFF7FEFF 		bl	HAL_RCCEx_GetPLL2ClockFreq
 4407              	.LVL385:
2291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       break;
 4408              		.loc 1 2291 0
 4409 082a 626A     		ldr	r2, [r4, #36]
 4410 082c 3C4B     		ldr	r3, .L374
 4411 082e 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 4412 0832 049B     		ldr	r3, [sp, #16]
 4413 0834 B3FBF2F3 		udiv	r3, r3, r2
 4414 0838 6268     		ldr	r2, [r4, #4]
 4415 083a 03EB5203 		add	r3, r3, r2, lsr #1
 4416 083e B3FBF2F3 		udiv	r3, r3, r2
 4417 0842 2268     		ldr	r2, [r4]
 4418 0844 9BB2     		uxth	r3, r3
 4419 0846 D360     		str	r3, [r2, #12]
2062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   PLL2_ClocksTypeDef pll2_clocks;
 4420              		.loc 1 2062 0
 4421 0848 0020     		movs	r0, #0
2292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     case UART_CLOCKSOURCE_PLL3:
 4422              		.loc 1 2292 0
 4423 084a 36E7     		b	.L292
 4424              	.L328:
2294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(pll3_clocks.PLL3_Q_Frequency, huart->
 4425              		.loc 1 2294 0
 4426 084c 6846     		mov	r0, sp
 4427 084e FFF7FEFF 		bl	HAL_RCCEx_GetPLL3ClockFreq
 4428              	.LVL386:
2295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       break;
 4429              		.loc 1 2295 0
 4430 0852 626A     		ldr	r2, [r4, #36]
 4431 0854 324B     		ldr	r3, .L374
 4432 0856 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 4433 085a 019B     		ldr	r3, [sp, #4]
 4434 085c B3FBF2F3 		udiv	r3, r3, r2
 4435 0860 6268     		ldr	r2, [r4, #4]
 4436 0862 03EB5203 		add	r3, r3, r2, lsr #1
 4437 0866 B3FBF2F3 		udiv	r3, r3, r2
 4438 086a 2268     		ldr	r2, [r4]
 4439 086c 9BB2     		uxth	r3, r3
 4440 086e D360     		str	r3, [r2, #12]
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 140


2062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   PLL2_ClocksTypeDef pll2_clocks;
 4441              		.loc 1 2062 0
 4442 0870 0020     		movs	r0, #0
2296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     case UART_CLOCKSOURCE_HSI:
 4443              		.loc 1 2296 0
 4444 0872 22E7     		b	.L292
 4445              	.L325:
2298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 4446              		.loc 1 2298 0
 4447 0874 2B4A     		ldr	r2, .L374+4
 4448 0876 1268     		ldr	r2, [r2]
 4449 0878 12F0200F 		tst	r2, #32
 4450 087c 14D0     		beq	.L329
2300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 4451              		.loc 1 2300 0
 4452 087e 294A     		ldr	r2, .L374+4
 4453 0880 1168     		ldr	r1, [r2]
 4454 0882 C1F3C101 		ubfx	r1, r1, #3, #2
 4455 0886 284A     		ldr	r2, .L374+8
 4456 0888 CA40     		lsrs	r2, r2, r1
 4457 088a 606A     		ldr	r0, [r4, #36]
 4458 088c 2449     		ldr	r1, .L374
 4459 088e 31F81010 		ldrh	r1, [r1, r0, lsl #1]
 4460 0892 B2FBF1F2 		udiv	r2, r2, r1
 4461 0896 6168     		ldr	r1, [r4, #4]
 4462 0898 02EB5102 		add	r2, r2, r1, lsr #1
 4463 089c B2FBF1F2 		udiv	r2, r2, r1
 4464 08a0 92B2     		uxth	r2, r2
 4465 08a2 DA60     		str	r2, [r3, #12]
2062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   PLL2_ClocksTypeDef pll2_clocks;
 4466              		.loc 1 2062 0
 4467 08a4 0020     		movs	r0, #0
 4468 08a6 08E7     		b	.L292
 4469              	.L329:
2304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 4470              		.loc 1 2304 0
 4471 08a8 616A     		ldr	r1, [r4, #36]
 4472 08aa 1D4A     		ldr	r2, .L374
 4473 08ac 32F81110 		ldrh	r1, [r2, r1, lsl #1]
 4474 08b0 1D4A     		ldr	r2, .L374+8
 4475 08b2 B2FBF1F2 		udiv	r2, r2, r1
 4476 08b6 6168     		ldr	r1, [r4, #4]
 4477 08b8 02EB5102 		add	r2, r2, r1, lsr #1
 4478 08bc B2FBF1F2 		udiv	r2, r2, r1
 4479 08c0 92B2     		uxth	r2, r2
 4480 08c2 DA60     		str	r2, [r3, #12]
2062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   PLL2_ClocksTypeDef pll2_clocks;
 4481              		.loc 1 2062 0
 4482 08c4 0020     		movs	r0, #0
 4483 08c6 F8E6     		b	.L292
 4484              	.L326:
2308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       break;
 4485              		.loc 1 2308 0
 4486 08c8 616A     		ldr	r1, [r4, #36]
 4487 08ca 154A     		ldr	r2, .L374
 4488 08cc 32F81110 		ldrh	r1, [r2, r1, lsl #1]
 4489 08d0 164A     		ldr	r2, .L374+12
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 141


 4490 08d2 B2FBF1F2 		udiv	r2, r2, r1
 4491 08d6 6168     		ldr	r1, [r4, #4]
 4492 08d8 02EB5102 		add	r2, r2, r1, lsr #1
 4493 08dc B2FBF1F2 		udiv	r2, r2, r1
 4494 08e0 92B2     		uxth	r2, r2
 4495 08e2 DA60     		str	r2, [r3, #12]
2062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   PLL2_ClocksTypeDef pll2_clocks;
 4496              		.loc 1 2062 0
 4497 08e4 0020     		movs	r0, #0
2309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     case UART_CLOCKSOURCE_LSE:
 4498              		.loc 1 2309 0
 4499 08e6 E8E6     		b	.L292
 4500              	.L327:
2311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       break;
 4501              		.loc 1 2311 0
 4502 08e8 616A     		ldr	r1, [r4, #36]
 4503 08ea 0D4A     		ldr	r2, .L374
 4504 08ec 32F81110 		ldrh	r1, [r2, r1, lsl #1]
 4505 08f0 4FF40042 		mov	r2, #32768
 4506 08f4 B2FBF1F2 		udiv	r2, r2, r1
 4507 08f8 6168     		ldr	r1, [r4, #4]
 4508 08fa 02EB5102 		add	r2, r2, r1, lsr #1
 4509 08fe B2FBF1F2 		udiv	r2, r2, r1
 4510 0902 92B2     		uxth	r2, r2
 4511 0904 DA60     		str	r2, [r3, #12]
2062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   PLL2_ClocksTypeDef pll2_clocks;
 4512              		.loc 1 2062 0
 4513 0906 0020     		movs	r0, #0
2312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     case UART_CLOCKSOURCE_UNDEFINED:
 4514              		.loc 1 2312 0
 4515 0908 D7E6     		b	.L292
 4516              	.LVL387:
 4517              	.L365:
 4518 090a 0020     		movs	r0, #0
 4519 090c D5E6     		b	.L292
 4520              	.LVL388:
 4521              	.L344:
2184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 4522              		.loc 1 2184 0
 4523 090e 0120     		movs	r0, #1
 4524 0910 D3E6     		b	.L292
 4525              	.L345:
 4526 0912 0120     		movs	r0, #1
 4527 0914 D1E6     		b	.L292
 4528              	.LVL389:
 4529              	.L347:
2229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         }
 4530              		.loc 1 2229 0
 4531 0916 0120     		movs	r0, #1
 4532              	.LVL390:
 4533 0918 CFE6     		b	.L292
 4534              	.LVL391:
 4535              	.L349:
2315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       break;
 4536              		.loc 1 2315 0
 4537 091a 0120     		movs	r0, #1
 4538 091c CDE6     		b	.L292
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 142


 4539              	.L375:
 4540 091e 00BF     		.align	2
 4541              	.L374:
 4542 0920 00000000 		.word	.LANCHOR0
 4543 0924 00440258 		.word	1476543488
 4544 0928 0090D003 		.word	64000000
 4545 092c 00093D00 		.word	4000000
 4546              		.cfi_endproc
 4547              	.LFE176:
 4549              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 4550              		.align	1
 4551              		.global	UART_AdvFeatureConfig
 4552              		.syntax unified
 4553              		.thumb
 4554              		.thumb_func
 4555              		.fpu fpv5-d16
 4557              	UART_AdvFeatureConfig:
 4558              	.LFB177:
2329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
 4559              		.loc 1 2329 0
 4560              		.cfi_startproc
 4561              		@ args = 0, pretend = 0, frame = 0
 4562              		@ frame_needed = 0, uses_anonymous_args = 0
 4563              		@ link register save eliminated.
 4564              	.LVL392:
2334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 4565              		.loc 1 2334 0
 4566 0000 436B     		ldr	r3, [r0, #52]
 4567 0002 13F0010F 		tst	r3, #1
 4568 0006 06D0     		beq	.L377
2337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 4569              		.loc 1 2337 0
 4570 0008 0268     		ldr	r2, [r0]
 4571 000a 5368     		ldr	r3, [r2, #4]
 4572 000c 23F40033 		bic	r3, r3, #131072
 4573 0010 816B     		ldr	r1, [r0, #56]
 4574 0012 0B43     		orrs	r3, r3, r1
 4575 0014 5360     		str	r3, [r2, #4]
 4576              	.L377:
2341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 4577              		.loc 1 2341 0
 4578 0016 436B     		ldr	r3, [r0, #52]
 4579 0018 13F0020F 		tst	r3, #2
 4580 001c 06D0     		beq	.L378
2344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 4581              		.loc 1 2344 0
 4582 001e 0268     		ldr	r2, [r0]
 4583 0020 5368     		ldr	r3, [r2, #4]
 4584 0022 23F48033 		bic	r3, r3, #65536
 4585 0026 C16B     		ldr	r1, [r0, #60]
 4586 0028 0B43     		orrs	r3, r3, r1
 4587 002a 5360     		str	r3, [r2, #4]
 4588              	.L378:
2348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 4589              		.loc 1 2348 0
 4590 002c 436B     		ldr	r3, [r0, #52]
 4591 002e 13F0040F 		tst	r3, #4
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 143


 4592 0032 06D0     		beq	.L379
2351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 4593              		.loc 1 2351 0
 4594 0034 0268     		ldr	r2, [r0]
 4595 0036 5368     		ldr	r3, [r2, #4]
 4596 0038 23F48023 		bic	r3, r3, #262144
 4597 003c 016C     		ldr	r1, [r0, #64]
 4598 003e 0B43     		orrs	r3, r3, r1
 4599 0040 5360     		str	r3, [r2, #4]
 4600              	.L379:
2355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 4601              		.loc 1 2355 0
 4602 0042 436B     		ldr	r3, [r0, #52]
 4603 0044 13F0080F 		tst	r3, #8
 4604 0048 06D0     		beq	.L380
2358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 4605              		.loc 1 2358 0
 4606 004a 0268     		ldr	r2, [r0]
 4607 004c 5368     		ldr	r3, [r2, #4]
 4608 004e 23F40043 		bic	r3, r3, #32768
 4609 0052 416C     		ldr	r1, [r0, #68]
 4610 0054 0B43     		orrs	r3, r3, r1
 4611 0056 5360     		str	r3, [r2, #4]
 4612              	.L380:
2362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 4613              		.loc 1 2362 0
 4614 0058 436B     		ldr	r3, [r0, #52]
 4615 005a 13F0100F 		tst	r3, #16
 4616 005e 06D0     		beq	.L381
2365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 4617              		.loc 1 2365 0
 4618 0060 0268     		ldr	r2, [r0]
 4619 0062 9368     		ldr	r3, [r2, #8]
 4620 0064 23F48053 		bic	r3, r3, #4096
 4621 0068 816C     		ldr	r1, [r0, #72]
 4622 006a 0B43     		orrs	r3, r3, r1
 4623 006c 9360     		str	r3, [r2, #8]
 4624              	.L381:
2369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 4625              		.loc 1 2369 0
 4626 006e 436B     		ldr	r3, [r0, #52]
 4627 0070 13F0200F 		tst	r3, #32
 4628 0074 06D0     		beq	.L382
2372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 4629              		.loc 1 2372 0
 4630 0076 0268     		ldr	r2, [r0]
 4631 0078 9368     		ldr	r3, [r2, #8]
 4632 007a 23F40053 		bic	r3, r3, #8192
 4633 007e C16C     		ldr	r1, [r0, #76]
 4634 0080 0B43     		orrs	r3, r3, r1
 4635 0082 9360     		str	r3, [r2, #8]
 4636              	.L382:
2376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 4637              		.loc 1 2376 0
 4638 0084 436B     		ldr	r3, [r0, #52]
 4639 0086 13F0400F 		tst	r3, #64
 4640 008a 0AD0     		beq	.L383
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 144


2380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
 4641              		.loc 1 2380 0
 4642 008c 0268     		ldr	r2, [r0]
 4643 008e 5368     		ldr	r3, [r2, #4]
 4644 0090 23F48013 		bic	r3, r3, #1048576
 4645 0094 016D     		ldr	r1, [r0, #80]
 4646 0096 0B43     		orrs	r3, r3, r1
 4647 0098 5360     		str	r3, [r2, #4]
2382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 4648              		.loc 1 2382 0
 4649 009a 036D     		ldr	r3, [r0, #80]
 4650 009c B3F5801F 		cmp	r3, #1048576
 4651 00a0 0BD0     		beq	.L385
 4652              	.L383:
2390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 4653              		.loc 1 2390 0
 4654 00a2 436B     		ldr	r3, [r0, #52]
 4655 00a4 13F0800F 		tst	r3, #128
 4656 00a8 06D0     		beq	.L376
2393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 4657              		.loc 1 2393 0
 4658 00aa 0268     		ldr	r2, [r0]
 4659 00ac 5368     		ldr	r3, [r2, #4]
 4660 00ae 23F40023 		bic	r3, r3, #524288
 4661 00b2 816D     		ldr	r1, [r0, #88]
 4662 00b4 0B43     		orrs	r3, r3, r1
 4663 00b6 5360     		str	r3, [r2, #4]
 4664              	.L376:
2395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4665              		.loc 1 2395 0
 4666 00b8 7047     		bx	lr
 4667              	.L385:
2385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 4668              		.loc 1 2385 0
 4669 00ba 0268     		ldr	r2, [r0]
 4670 00bc 5368     		ldr	r3, [r2, #4]
 4671 00be 23F4C003 		bic	r3, r3, #6291456
 4672 00c2 416D     		ldr	r1, [r0, #84]
 4673 00c4 0B43     		orrs	r3, r3, r1
 4674 00c6 5360     		str	r3, [r2, #4]
 4675 00c8 EBE7     		b	.L383
 4676              		.cfi_endproc
 4677              	.LFE177:
 4679              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 4680              		.align	1
 4681              		.global	UART_WaitOnFlagUntilTimeout
 4682              		.syntax unified
 4683              		.thumb
 4684              		.thumb_func
 4685              		.fpu fpv5-d16
 4687              	UART_WaitOnFlagUntilTimeout:
 4688              	.LFB179:
2453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Wait until flag is set */
 4689              		.loc 1 2453 0
 4690              		.cfi_startproc
 4691              		@ args = 4, pretend = 0, frame = 0
 4692              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 145


 4693              	.LVL393:
 4694 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4695              	.LCFI29:
 4696              		.cfi_def_cfa_offset 24
 4697              		.cfi_offset 4, -24
 4698              		.cfi_offset 5, -20
 4699              		.cfi_offset 6, -16
 4700              		.cfi_offset 7, -12
 4701              		.cfi_offset 8, -8
 4702              		.cfi_offset 14, -4
 4703 0004 0546     		mov	r5, r0
 4704 0006 0F46     		mov	r7, r1
 4705 0008 1646     		mov	r6, r2
 4706 000a 9846     		mov	r8, r3
 4707 000c 069C     		ldr	r4, [sp, #24]
 4708              	.LVL394:
 4709              	.L388:
2455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 4710              		.loc 1 2455 0
 4711 000e 2B68     		ldr	r3, [r5]
 4712 0010 DB69     		ldr	r3, [r3, #28]
 4713 0012 37EA0303 		bics	r3, r7, r3
 4714 0016 0CBF     		ite	eq
 4715 0018 0123     		moveq	r3, #1
 4716 001a 0023     		movne	r3, #0
 4717 001c B342     		cmp	r3, r6
 4718 001e 1DD1     		bne	.L393
2458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 4719              		.loc 1 2458 0
 4720 0020 B4F1FF3F 		cmp	r4, #-1
 4721 0024 F3D0     		beq	.L388
2460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 4722              		.loc 1 2460 0
 4723 0026 2CB1     		cbz	r4, .L389
2460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 4724              		.loc 1 2460 0 is_stmt 0 discriminator 1
 4725 0028 FFF7FEFF 		bl	HAL_GetTick
 4726              	.LVL395:
 4727 002c A0EB0800 		sub	r0, r0, r8
 4728 0030 A042     		cmp	r0, r4
 4729 0032 ECD9     		bls	.L388
 4730              	.L389:
2463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4731              		.loc 1 2463 0 is_stmt 1
 4732 0034 2A68     		ldr	r2, [r5]
 4733 0036 1368     		ldr	r3, [r2]
 4734 0038 23F4D073 		bic	r3, r3, #416
 4735 003c 1360     		str	r3, [r2]
2464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4736              		.loc 1 2464 0
 4737 003e 2A68     		ldr	r2, [r5]
 4738 0040 9368     		ldr	r3, [r2, #8]
 4739 0042 23F00103 		bic	r3, r3, #1
 4740 0046 9360     		str	r3, [r2, #8]
2466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 4741              		.loc 1 2466 0
 4742 0048 2023     		movs	r3, #32
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 146


 4743 004a 85F87930 		strb	r3, [r5, #121]
2467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4744              		.loc 1 2467 0
 4745 004e 85F87A30 		strb	r3, [r5, #122]
2470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4746              		.loc 1 2470 0
 4747 0052 0023     		movs	r3, #0
 4748 0054 85F87830 		strb	r3, [r5, #120]
2472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 4749              		.loc 1 2472 0
 4750 0058 0320     		movs	r0, #3
 4751 005a 00E0     		b	.L390
 4752              	.L393:
2476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 4753              		.loc 1 2476 0
 4754 005c 0020     		movs	r0, #0
 4755              	.L390:
2477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4756              		.loc 1 2477 0
 4757 005e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4758              		.cfi_endproc
 4759              	.LFE179:
 4761              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 4762              		.align	1
 4763              		.global	HAL_UART_Transmit
 4764              		.syntax unified
 4765              		.thumb
 4766              		.thumb_func
 4767              		.fpu fpv5-d16
 4769              	HAL_UART_Transmit:
 4770              	.LFB144:
 659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t* tmp;
 4771              		.loc 1 659 0
 4772              		.cfi_startproc
 4773              		@ args = 0, pretend = 0, frame = 0
 4774              		@ frame_needed = 0, uses_anonymous_args = 0
 4775              	.LVL396:
 4776 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4777              	.LCFI30:
 4778              		.cfi_def_cfa_offset 24
 4779              		.cfi_offset 4, -24
 4780              		.cfi_offset 5, -20
 4781              		.cfi_offset 6, -16
 4782              		.cfi_offset 7, -12
 4783              		.cfi_offset 8, -8
 4784              		.cfi_offset 14, -4
 4785 0004 82B0     		sub	sp, sp, #8
 4786              	.LCFI31:
 4787              		.cfi_def_cfa_offset 32
 4788 0006 1E46     		mov	r6, r3
 4789              	.LVL397:
 664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 4790              		.loc 1 664 0
 4791 0008 90F87930 		ldrb	r3, [r0, #121]	@ zero_extendqisi2
 4792              	.LVL398:
 4793 000c DBB2     		uxtb	r3, r3
 4794 000e 202B     		cmp	r3, #32
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 147


 4795 0010 52D1     		bne	.L400
 4796 0012 0446     		mov	r4, r0
 4797 0014 0D46     		mov	r5, r1
 4798 0016 9046     		mov	r8, r2
 666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 4799              		.loc 1 666 0
 4800 0018 B2FA82F3 		clz	r3, r2
 4801 001c 5B09     		lsrs	r3, r3, #5
 4802 001e 0029     		cmp	r1, #0
 4803 0020 08BF     		it	eq
 4804 0022 0123     		moveq	r3, #1
 4805 0024 002B     		cmp	r3, #0
 4806 0026 4CD1     		bne	.L401
 672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4807              		.loc 1 672 0
 4808 0028 90F87830 		ldrb	r3, [r0, #120]	@ zero_extendqisi2
 4809 002c 012B     		cmp	r3, #1
 4810 002e 4AD0     		beq	.L402
 672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4811              		.loc 1 672 0 is_stmt 0 discriminator 2
 4812 0030 0123     		movs	r3, #1
 4813 0032 80F87830 		strb	r3, [r0, #120]
 674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 4814              		.loc 1 674 0 is_stmt 1 discriminator 2
 4815 0036 0023     		movs	r3, #0
 4816 0038 C367     		str	r3, [r0, #124]
 675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4817              		.loc 1 675 0 discriminator 2
 4818 003a 2123     		movs	r3, #33
 4819 003c 80F87930 		strb	r3, [r0, #121]
 678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4820              		.loc 1 678 0 discriminator 2
 4821 0040 FFF7FEFF 		bl	HAL_GetTick
 4822              	.LVL399:
 4823 0044 0746     		mov	r7, r0
 4824              	.LVL400:
 680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->TxXferCount = Size;
 4825              		.loc 1 680 0 discriminator 2
 4826 0046 A4F86080 		strh	r8, [r4, #96]	@ movhi
 681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 4827              		.loc 1 681 0 discriminator 2
 4828 004a A4F86280 		strh	r8, [r4, #98]	@ movhi
 682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 4829              		.loc 1 682 0 discriminator 2
 4830 004e 03E0     		b	.L396
 4831              	.LVL401:
 4832              	.L397:
 697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 4833              		.loc 1 697 0
 4834 0050 2368     		ldr	r3, [r4]
 4835 0052 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 4836 0054 1A85     		strh	r2, [r3, #40]	@ movhi
 4837 0056 0135     		adds	r5, r5, #1
 4838              	.LVL402:
 4839              	.L396:
 682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 4840              		.loc 1 682 0
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 148


 4841 0058 B4F86230 		ldrh	r3, [r4, #98]
 4842 005c 9BB2     		uxth	r3, r3
 4843 005e DBB1     		cbz	r3, .L406
 684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 4844              		.loc 1 684 0
 4845 0060 B4F86230 		ldrh	r3, [r4, #98]
 4846 0064 013B     		subs	r3, r3, #1
 4847 0066 9BB2     		uxth	r3, r3
 4848 0068 A4F86230 		strh	r3, [r4, #98]	@ movhi
 685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 4849              		.loc 1 685 0
 4850 006c 0096     		str	r6, [sp]
 4851 006e 3B46     		mov	r3, r7
 4852 0070 0022     		movs	r2, #0
 4853 0072 8021     		movs	r1, #128
 4854 0074 2046     		mov	r0, r4
 4855 0076 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4856              	.LVL403:
 4857 007a 30BB     		cbnz	r0, .L403
 689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 4858              		.loc 1 689 0
 4859 007c A368     		ldr	r3, [r4, #8]
 4860 007e B3F5805F 		cmp	r3, #4096
 4861 0082 E5D1     		bne	.L397
 689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 4862              		.loc 1 689 0 is_stmt 0 discriminator 1
 4863 0084 2369     		ldr	r3, [r4, #16]
 4864 0086 002B     		cmp	r3, #0
 4865 0088 E2D1     		bne	.L397
 4866              	.LVL404:
 692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pData += 2U;
 4867              		.loc 1 692 0 is_stmt 1
 4868 008a 2268     		ldr	r2, [r4]
 4869 008c 35F8023B 		ldrh	r3, [r5], #2
 4870              	.LVL405:
 4871 0090 C3F30803 		ubfx	r3, r3, #0, #9
 4872 0094 1385     		strh	r3, [r2, #40]	@ movhi
 4873              	.LVL406:
 693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 4874              		.loc 1 693 0
 4875 0096 DFE7     		b	.L396
 4876              	.LVL407:
 4877              	.L406:
 700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 4878              		.loc 1 700 0
 4879 0098 0096     		str	r6, [sp]
 4880 009a 3B46     		mov	r3, r7
 4881 009c 0022     		movs	r2, #0
 4882 009e 4021     		movs	r1, #64
 4883 00a0 2046     		mov	r0, r4
 4884 00a2 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4885              	.LVL408:
 4886 00a6 0346     		mov	r3, r0
 4887 00a8 88B9     		cbnz	r0, .L404
 706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4888              		.loc 1 706 0
 4889 00aa 2022     		movs	r2, #32
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 149


 4890 00ac 84F87920 		strb	r2, [r4, #121]
 709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4891              		.loc 1 709 0
 4892 00b0 0022     		movs	r2, #0
 4893 00b2 84F87820 		strb	r2, [r4, #120]
 711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 4894              		.loc 1 711 0
 4895 00b6 00E0     		b	.L395
 4896              	.LVL409:
 4897              	.L400:
 715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 4898              		.loc 1 715 0
 4899 00b8 0223     		movs	r3, #2
 4900              	.LVL410:
 4901              	.L395:
 717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4902              		.loc 1 717 0
 4903 00ba 1846     		mov	r0, r3
 4904 00bc 02B0     		add	sp, sp, #8
 4905              	.LCFI32:
 4906              		.cfi_remember_state
 4907              		.cfi_def_cfa_offset 24
 4908              		@ sp needed
 4909 00be BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4910              	.LVL411:
 4911              	.L401:
 4912              	.LCFI33:
 4913              		.cfi_restore_state
 668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 4914              		.loc 1 668 0
 4915 00c2 0123     		movs	r3, #1
 4916 00c4 F9E7     		b	.L395
 4917              	.L402:
 672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4918              		.loc 1 672 0
 4919 00c6 0223     		movs	r3, #2
 4920 00c8 F7E7     		b	.L395
 4921              	.LVL412:
 4922              	.L403:
 687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 4923              		.loc 1 687 0
 4924 00ca 0323     		movs	r3, #3
 4925 00cc F5E7     		b	.L395
 4926              	.L404:
 702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 4927              		.loc 1 702 0
 4928 00ce 0323     		movs	r3, #3
 4929 00d0 F3E7     		b	.L395
 4930              		.cfi_endproc
 4931              	.LFE144:
 4933              		.section	.text.HAL_UART_Receive,"ax",%progbits
 4934              		.align	1
 4935              		.global	HAL_UART_Receive
 4936              		.syntax unified
 4937              		.thumb
 4938              		.thumb_func
 4939              		.fpu fpv5-d16
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 150


 4941              	HAL_UART_Receive:
 4942              	.LFB145:
 728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint16_t* tmp;
 4943              		.loc 1 728 0
 4944              		.cfi_startproc
 4945              		@ args = 0, pretend = 0, frame = 0
 4946              		@ frame_needed = 0, uses_anonymous_args = 0
 4947              	.LVL413:
 4948 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4949              	.LCFI34:
 4950              		.cfi_def_cfa_offset 24
 4951              		.cfi_offset 4, -24
 4952              		.cfi_offset 5, -20
 4953              		.cfi_offset 6, -16
 4954              		.cfi_offset 7, -12
 4955              		.cfi_offset 8, -8
 4956              		.cfi_offset 14, -4
 4957 0004 82B0     		sub	sp, sp, #8
 4958              	.LCFI35:
 4959              		.cfi_def_cfa_offset 32
 4960 0006 1E46     		mov	r6, r3
 4961              	.LVL414:
 734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 4962              		.loc 1 734 0
 4963 0008 90F87A30 		ldrb	r3, [r0, #122]	@ zero_extendqisi2
 4964              	.LVL415:
 4965 000c DBB2     		uxtb	r3, r3
 4966 000e 202B     		cmp	r3, #32
 4967 0010 75D1     		bne	.L419
 4968 0012 0446     		mov	r4, r0
 4969 0014 0D46     		mov	r5, r1
 4970 0016 9046     		mov	r8, r2
 736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 4971              		.loc 1 736 0
 4972 0018 B2FA82F3 		clz	r3, r2
 4973 001c 5B09     		lsrs	r3, r3, #5
 4974 001e 0029     		cmp	r1, #0
 4975 0020 08BF     		it	eq
 4976 0022 0123     		moveq	r3, #1
 4977 0024 002B     		cmp	r3, #0
 4978 0026 6ED1     		bne	.L420
 742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4979              		.loc 1 742 0
 4980 0028 90F87830 		ldrb	r3, [r0, #120]	@ zero_extendqisi2
 4981 002c 012B     		cmp	r3, #1
 4982 002e 6CD0     		beq	.L421
 742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4983              		.loc 1 742 0 is_stmt 0 discriminator 2
 4984 0030 0123     		movs	r3, #1
 4985 0032 80F87830 		strb	r3, [r0, #120]
 744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 4986              		.loc 1 744 0 is_stmt 1 discriminator 2
 4987 0036 0023     		movs	r3, #0
 4988 0038 C367     		str	r3, [r0, #124]
 745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4989              		.loc 1 745 0 discriminator 2
 4990 003a 2223     		movs	r3, #34
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 151


 4991 003c 80F87A30 		strb	r3, [r0, #122]
 748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4992              		.loc 1 748 0 discriminator 2
 4993 0040 FFF7FEFF 		bl	HAL_GetTick
 4994              	.LVL416:
 4995 0044 0746     		mov	r7, r0
 4996              	.LVL417:
 750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     huart->RxXferCount = Size;
 4997              		.loc 1 750 0 discriminator 2
 4998 0046 A4F86880 		strh	r8, [r4, #104]	@ movhi
 751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 4999              		.loc 1 751 0 discriminator 2
 5000 004a A4F86A80 		strh	r8, [r4, #106]	@ movhi
 754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhMask = huart->Mask;
 5001              		.loc 1 754 0 discriminator 2
 5002 004e A368     		ldr	r3, [r4, #8]
 5003 0050 B3F5805F 		cmp	r3, #4096
 5004 0054 06D0     		beq	.L424
 5005 0056 A3B9     		cbnz	r3, .L412
 754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhMask = huart->Mask;
 5006              		.loc 1 754 0 is_stmt 0 discriminator 5
 5007 0058 2369     		ldr	r3, [r4, #16]
 5008 005a 73B9     		cbnz	r3, .L413
 754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhMask = huart->Mask;
 5009              		.loc 1 754 0 discriminator 7
 5010 005c FF23     		movs	r3, #255
 5011 005e A4F86C30 		strh	r3, [r4, #108]	@ movhi
 5012 0062 11E0     		b	.L411
 5013              	.L424:
 754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhMask = huart->Mask;
 5014              		.loc 1 754 0 discriminator 1
 5015 0064 2369     		ldr	r3, [r4, #16]
 5016 0066 23B9     		cbnz	r3, .L410
 754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhMask = huart->Mask;
 5017              		.loc 1 754 0 discriminator 3
 5018 0068 40F2FF13 		movw	r3, #511
 5019 006c A4F86C30 		strh	r3, [r4, #108]	@ movhi
 5020 0070 0AE0     		b	.L411
 5021              	.L410:
 754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhMask = huart->Mask;
 5022              		.loc 1 754 0 discriminator 4
 5023 0072 FF23     		movs	r3, #255
 5024 0074 A4F86C30 		strh	r3, [r4, #108]	@ movhi
 5025 0078 06E0     		b	.L411
 5026              	.L413:
 754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhMask = huart->Mask;
 5027              		.loc 1 754 0 discriminator 8
 5028 007a 7F23     		movs	r3, #127
 5029 007c A4F86C30 		strh	r3, [r4, #108]	@ movhi
 5030 0080 02E0     		b	.L411
 5031              	.L412:
 754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhMask = huart->Mask;
 5032              		.loc 1 754 0 discriminator 6
 5033 0082 B3F1805F 		cmp	r3, #268435456
 5034 0086 02D0     		beq	.L425
 5035              	.L411:
 755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 152


 5036              		.loc 1 755 0 is_stmt 1
 5037 0088 B4F86C80 		ldrh	r8, [r4, #108]
 5038              	.LVL418:
 758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 5039              		.loc 1 758 0
 5040 008c 10E0     		b	.L415
 5041              	.LVL419:
 5042              	.L425:
 754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhMask = huart->Mask;
 5043              		.loc 1 754 0 discriminator 9
 5044 008e 2369     		ldr	r3, [r4, #16]
 5045 0090 1BB9     		cbnz	r3, .L414
 754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhMask = huart->Mask;
 5046              		.loc 1 754 0 is_stmt 0 discriminator 10
 5047 0092 7F23     		movs	r3, #127
 5048 0094 A4F86C30 		strh	r3, [r4, #108]	@ movhi
 5049 0098 F6E7     		b	.L411
 5050              	.L414:
 754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     uhMask = huart->Mask;
 5051              		.loc 1 754 0 discriminator 11
 5052 009a 3F23     		movs	r3, #63
 5053 009c A4F86C30 		strh	r3, [r4, #108]	@ movhi
 5054 00a0 F2E7     		b	.L411
 5055              	.LVL420:
 5056              	.L416:
 773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 5057              		.loc 1 773 0 is_stmt 1
 5058 00a2 2368     		ldr	r3, [r4]
 5059 00a4 9A8C     		ldrh	r2, [r3, #36]
 5060 00a6 5FFA88F3 		uxtb	r3, r8
 5061              	.LVL421:
 5062 00aa 1340     		ands	r3, r3, r2
 5063 00ac 2B70     		strb	r3, [r5]
 5064 00ae 0135     		adds	r5, r5, #1
 5065              	.LVL422:
 5066              	.L415:
 758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 5067              		.loc 1 758 0
 5068 00b0 B4F86A30 		ldrh	r3, [r4, #106]
 5069 00b4 9BB2     		uxth	r3, r3
 5070 00b6 DBB1     		cbz	r3, .L426
 760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 5071              		.loc 1 760 0
 5072 00b8 B4F86A30 		ldrh	r3, [r4, #106]
 5073 00bc 013B     		subs	r3, r3, #1
 5074 00be 9BB2     		uxth	r3, r3
 5075 00c0 A4F86A30 		strh	r3, [r4, #106]	@ movhi
 761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 5076              		.loc 1 761 0
 5077 00c4 0096     		str	r6, [sp]
 5078 00c6 3B46     		mov	r3, r7
 5079 00c8 0022     		movs	r2, #0
 5080 00ca 2021     		movs	r1, #32
 5081 00cc 2046     		mov	r0, r4
 5082 00ce FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 5083              	.LVL423:
 5084 00d2 E0B9     		cbnz	r0, .L422
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 153


 765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 5085              		.loc 1 765 0
 5086 00d4 A368     		ldr	r3, [r4, #8]
 5087 00d6 B3F5805F 		cmp	r3, #4096
 5088 00da E2D1     		bne	.L416
 765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       {
 5089              		.loc 1 765 0 is_stmt 0 discriminator 1
 5090 00dc 2369     		ldr	r3, [r4, #16]
 5091 00de 002B     		cmp	r3, #0
 5092 00e0 DFD1     		bne	.L416
 5093              	.LVL424:
 768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****         pData +=2U;
 5094              		.loc 1 768 0 is_stmt 1
 5095 00e2 2368     		ldr	r3, [r4]
 5096 00e4 9B8C     		ldrh	r3, [r3, #36]
 5097 00e6 08EA0303 		and	r3, r8, r3
 5098 00ea 25F8023B 		strh	r3, [r5], #2	@ movhi
 5099              	.LVL425:
 769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 5100              		.loc 1 769 0
 5101 00ee DFE7     		b	.L415
 5102              	.LVL426:
 5103              	.L426:
 778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5104              		.loc 1 778 0
 5105 00f0 2023     		movs	r3, #32
 5106 00f2 84F87A30 		strb	r3, [r4, #122]
 781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5107              		.loc 1 781 0
 5108 00f6 0020     		movs	r0, #0
 5109 00f8 84F87800 		strb	r0, [r4, #120]
 783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 5110              		.loc 1 783 0
 5111 00fc 00E0     		b	.L408
 5112              	.LVL427:
 5113              	.L419:
 787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 5114              		.loc 1 787 0
 5115 00fe 0220     		movs	r0, #2
 5116              	.LVL428:
 5117              	.L408:
 789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5118              		.loc 1 789 0
 5119 0100 02B0     		add	sp, sp, #8
 5120              	.LCFI36:
 5121              		.cfi_remember_state
 5122              		.cfi_def_cfa_offset 24
 5123              		@ sp needed
 5124 0102 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5125              	.LVL429:
 5126              	.L420:
 5127              	.LCFI37:
 5128              		.cfi_restore_state
 738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 5129              		.loc 1 738 0
 5130 0106 0120     		movs	r0, #1
 5131              	.LVL430:
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 154


 5132 0108 FAE7     		b	.L408
 5133              	.LVL431:
 5134              	.L421:
 742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5135              		.loc 1 742 0
 5136 010a 0220     		movs	r0, #2
 5137              	.LVL432:
 5138 010c F8E7     		b	.L408
 5139              	.LVL433:
 5140              	.L422:
 763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****       }
 5141              		.loc 1 763 0
 5142 010e 0320     		movs	r0, #3
 5143 0110 F6E7     		b	.L408
 5144              		.cfi_endproc
 5145              	.LFE145:
 5147              		.section	.text.UART_CheckIdleState,"ax",%progbits
 5148              		.align	1
 5149              		.global	UART_CheckIdleState
 5150              		.syntax unified
 5151              		.thumb
 5152              		.thumb_func
 5153              		.fpu fpv5-d16
 5155              	UART_CheckIdleState:
 5156              	.LFB178:
2403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   uint32_t tickstart = 0U;
 5157              		.loc 1 2403 0
 5158              		.cfi_startproc
 5159              		@ args = 0, pretend = 0, frame = 0
 5160              		@ frame_needed = 0, uses_anonymous_args = 0
 5161              	.LVL434:
 5162 0000 30B5     		push	{r4, r5, lr}
 5163              	.LCFI38:
 5164              		.cfi_def_cfa_offset 12
 5165              		.cfi_offset 4, -12
 5166              		.cfi_offset 5, -8
 5167              		.cfi_offset 14, -4
 5168 0002 83B0     		sub	sp, sp, #12
 5169              	.LCFI39:
 5170              		.cfi_def_cfa_offset 24
 5171 0004 0446     		mov	r4, r0
 5172              	.LVL435:
2407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5173              		.loc 1 2407 0
 5174 0006 0023     		movs	r3, #0
 5175 0008 C367     		str	r3, [r0, #124]
2410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5176              		.loc 1 2410 0
 5177 000a FFF7FEFF 		bl	HAL_GetTick
 5178              	.LVL436:
 5179 000e 0546     		mov	r5, r0
 5180              	.LVL437:
2413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 5181              		.loc 1 2413 0
 5182 0010 2368     		ldr	r3, [r4]
 5183 0012 1B68     		ldr	r3, [r3]
 5184 0014 13F0080F 		tst	r3, #8
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 155


 5185 0018 0ED1     		bne	.L434
 5186              	.LVL438:
 5187              	.L428:
2423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 5188              		.loc 1 2423 0
 5189 001a 2368     		ldr	r3, [r4]
 5190 001c 1B68     		ldr	r3, [r3]
 5191 001e 13F0040F 		tst	r3, #4
 5192 0022 17D1     		bne	.L435
 5193              	.L430:
2434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 5194              		.loc 1 2434 0
 5195 0024 2023     		movs	r3, #32
 5196 0026 84F87930 		strb	r3, [r4, #121]
2435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5197              		.loc 1 2435 0
 5198 002a 84F87A30 		strb	r3, [r4, #122]
2438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5199              		.loc 1 2438 0
 5200 002e 0020     		movs	r0, #0
 5201 0030 84F87800 		strb	r0, [r4, #120]
 5202              	.L429:
2441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5203              		.loc 1 2441 0
 5204 0034 03B0     		add	sp, sp, #12
 5205              	.LCFI40:
 5206              		.cfi_remember_state
 5207              		.cfi_def_cfa_offset 12
 5208              		@ sp needed
 5209 0036 30BD     		pop	{r4, r5, pc}
 5210              	.LVL439:
 5211              	.L434:
 5212              	.LCFI41:
 5213              		.cfi_restore_state
2416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 5214              		.loc 1 2416 0
 5215 0038 6FF07E43 		mvn	r3, #-33554432
 5216 003c 0093     		str	r3, [sp]
 5217 003e 0346     		mov	r3, r0
 5218 0040 0022     		movs	r2, #0
 5219 0042 4FF40011 		mov	r1, #2097152
 5220 0046 2046     		mov	r0, r4
 5221              	.LVL440:
 5222 0048 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 5223              	.LVL441:
 5224 004c 0028     		cmp	r0, #0
 5225 004e E4D0     		beq	.L428
2419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 5226              		.loc 1 2419 0
 5227 0050 0320     		movs	r0, #3
 5228 0052 EFE7     		b	.L429
 5229              	.L435:
2426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     {
 5230              		.loc 1 2426 0
 5231 0054 6FF07E43 		mvn	r3, #-33554432
 5232 0058 0093     		str	r3, [sp]
 5233 005a 2B46     		mov	r3, r5
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 156


 5234 005c 0022     		movs	r2, #0
 5235 005e 4FF48001 		mov	r1, #4194304
 5236 0062 2046     		mov	r0, r4
 5237 0064 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 5238              	.LVL442:
 5239 0068 0028     		cmp	r0, #0
 5240 006a DBD0     		beq	.L430
2429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****     }
 5241              		.loc 1 2429 0
 5242 006c 0320     		movs	r0, #3
 5243 006e E1E7     		b	.L429
 5244              		.cfi_endproc
 5245              	.LFE178:
 5247              		.section	.text.HAL_UART_Init,"ax",%progbits
 5248              		.align	1
 5249              		.global	HAL_UART_Init
 5250              		.syntax unified
 5251              		.thumb
 5252              		.thumb_func
 5253              		.fpu fpv5-d16
 5255              	HAL_UART_Init:
 5256              	.LFB137:
 230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 5257              		.loc 1 230 0
 5258              		.cfi_startproc
 5259              		@ args = 0, pretend = 0, frame = 0
 5260              		@ frame_needed = 0, uses_anonymous_args = 0
 5261              	.LVL443:
 232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 5262              		.loc 1 232 0
 5263 0000 78B3     		cbz	r0, .L440
 230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 5264              		.loc 1 230 0
 5265 0002 10B5     		push	{r4, lr}
 5266              	.LCFI42:
 5267              		.cfi_def_cfa_offset 8
 5268              		.cfi_offset 4, -8
 5269              		.cfi_offset 14, -4
 5270 0004 0446     		mov	r4, r0
 248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 5271              		.loc 1 248 0
 5272 0006 90F87930 		ldrb	r3, [r0, #121]	@ zero_extendqisi2
 5273 000a 0BB3     		cbz	r3, .L445
 5274              	.LVL444:
 5275              	.L438:
 257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5276              		.loc 1 257 0
 5277 000c 2423     		movs	r3, #36
 5278 000e 84F87930 		strb	r3, [r4, #121]
 260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5279              		.loc 1 260 0
 5280 0012 2268     		ldr	r2, [r4]
 5281 0014 1368     		ldr	r3, [r2]
 5282 0016 23F00103 		bic	r3, r3, #1
 5283 001a 1360     		str	r3, [r2]
 263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 5284              		.loc 1 263 0
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 157


 5285 001c 2046     		mov	r0, r4
 5286 001e FFF7FEFF 		bl	UART_SetConfig
 5287              	.LVL445:
 5288 0022 0128     		cmp	r0, #1
 5289 0024 13D0     		beq	.L437
 268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 5290              		.loc 1 268 0
 5291 0026 636B     		ldr	r3, [r4, #52]
 5292 0028 BBB9     		cbnz	r3, .L446
 5293              	.L439:
 276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 5294              		.loc 1 276 0
 5295 002a 2268     		ldr	r2, [r4]
 5296 002c 5368     		ldr	r3, [r2, #4]
 5297 002e 23F49043 		bic	r3, r3, #18432
 5298 0032 5360     		str	r3, [r2, #4]
 277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5299              		.loc 1 277 0
 5300 0034 2268     		ldr	r2, [r4]
 5301 0036 9368     		ldr	r3, [r2, #8]
 5302 0038 23F02A03 		bic	r3, r3, #42
 5303 003c 9360     		str	r3, [r2, #8]
 280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5304              		.loc 1 280 0
 5305 003e 2268     		ldr	r2, [r4]
 5306 0040 1368     		ldr	r3, [r2]
 5307 0042 43F00103 		orr	r3, r3, #1
 5308 0046 1360     		str	r3, [r2]
 283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 5309              		.loc 1 283 0
 5310 0048 2046     		mov	r0, r4
 5311 004a FFF7FEFF 		bl	UART_CheckIdleState
 5312              	.LVL446:
 5313              	.L437:
 284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5314              		.loc 1 284 0
 5315 004e 10BD     		pop	{r4, pc}
 5316              	.LVL447:
 5317              	.L445:
 251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5318              		.loc 1 251 0
 5319 0050 80F87830 		strb	r3, [r0, #120]
 254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 5320              		.loc 1 254 0
 5321 0054 FFF7FEFF 		bl	HAL_UART_MspInit
 5322              	.LVL448:
 5323 0058 D8E7     		b	.L438
 5324              	.L446:
 270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 5325              		.loc 1 270 0
 5326 005a 2046     		mov	r0, r4
 5327 005c FFF7FEFF 		bl	UART_AdvFeatureConfig
 5328              	.LVL449:
 5329 0060 E3E7     		b	.L439
 5330              	.LVL450:
 5331              	.L440:
 5332              	.LCFI43:
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 158


 5333              		.cfi_def_cfa_offset 0
 5334              		.cfi_restore 4
 5335              		.cfi_restore 14
 234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 5336              		.loc 1 234 0
 5337 0062 0120     		movs	r0, #1
 5338              	.LVL451:
 284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5339              		.loc 1 284 0
 5340 0064 7047     		bx	lr
 5341              		.cfi_endproc
 5342              	.LFE137:
 5344              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 5345              		.align	1
 5346              		.global	HAL_HalfDuplex_Init
 5347              		.syntax unified
 5348              		.thumb
 5349              		.thumb_func
 5350              		.fpu fpv5-d16
 5352              	HAL_HalfDuplex_Init:
 5353              	.LFB138:
 293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 5354              		.loc 1 293 0
 5355              		.cfi_startproc
 5356              		@ args = 0, pretend = 0, frame = 0
 5357              		@ frame_needed = 0, uses_anonymous_args = 0
 5358              	.LVL452:
 295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 5359              		.loc 1 295 0
 5360 0000 0028     		cmp	r0, #0
 5361 0002 34D0     		beq	.L451
 293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 5362              		.loc 1 293 0
 5363 0004 10B5     		push	{r4, lr}
 5364              	.LCFI44:
 5365              		.cfi_def_cfa_offset 8
 5366              		.cfi_offset 4, -8
 5367              		.cfi_offset 14, -4
 5368 0006 0446     		mov	r4, r0
 303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 5369              		.loc 1 303 0
 5370 0008 90F87930 		ldrb	r3, [r0, #121]	@ zero_extendqisi2
 5371 000c 33B3     		cbz	r3, .L456
 5372              	.LVL453:
 5373              	.L449:
 312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5374              		.loc 1 312 0
 5375 000e 2423     		movs	r3, #36
 5376 0010 84F87930 		strb	r3, [r4, #121]
 315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5377              		.loc 1 315 0
 5378 0014 2268     		ldr	r2, [r4]
 5379 0016 1368     		ldr	r3, [r2]
 5380 0018 23F00103 		bic	r3, r3, #1
 5381 001c 1360     		str	r3, [r2]
 318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 5382              		.loc 1 318 0
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 159


 5383 001e 2046     		mov	r0, r4
 5384 0020 FFF7FEFF 		bl	UART_SetConfig
 5385              	.LVL454:
 5386 0024 0128     		cmp	r0, #1
 5387 0026 18D0     		beq	.L448
 323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 5388              		.loc 1 323 0
 5389 0028 636B     		ldr	r3, [r4, #52]
 5390 002a E3B9     		cbnz	r3, .L457
 5391              	.L450:
 331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 5392              		.loc 1 331 0
 5393 002c 2268     		ldr	r2, [r4]
 5394 002e 5368     		ldr	r3, [r2, #4]
 5395 0030 23F49043 		bic	r3, r3, #18432
 5396 0034 5360     		str	r3, [r2, #4]
 332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5397              		.loc 1 332 0
 5398 0036 2268     		ldr	r2, [r4]
 5399 0038 9368     		ldr	r3, [r2, #8]
 5400 003a 23F02203 		bic	r3, r3, #34
 5401 003e 9360     		str	r3, [r2, #8]
 335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5402              		.loc 1 335 0
 5403 0040 2268     		ldr	r2, [r4]
 5404 0042 9368     		ldr	r3, [r2, #8]
 5405 0044 43F00803 		orr	r3, r3, #8
 5406 0048 9360     		str	r3, [r2, #8]
 338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5407              		.loc 1 338 0
 5408 004a 2268     		ldr	r2, [r4]
 5409 004c 1368     		ldr	r3, [r2]
 5410 004e 43F00103 		orr	r3, r3, #1
 5411 0052 1360     		str	r3, [r2]
 341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 5412              		.loc 1 341 0
 5413 0054 2046     		mov	r0, r4
 5414 0056 FFF7FEFF 		bl	UART_CheckIdleState
 5415              	.LVL455:
 5416              	.L448:
 342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5417              		.loc 1 342 0
 5418 005a 10BD     		pop	{r4, pc}
 5419              	.LVL456:
 5420              	.L456:
 306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5421              		.loc 1 306 0
 5422 005c 80F87830 		strb	r3, [r0, #120]
 309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 5423              		.loc 1 309 0
 5424 0060 FFF7FEFF 		bl	HAL_UART_MspInit
 5425              	.LVL457:
 5426 0064 D3E7     		b	.L449
 5427              	.L457:
 325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 5428              		.loc 1 325 0
 5429 0066 2046     		mov	r0, r4
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 160


 5430 0068 FFF7FEFF 		bl	UART_AdvFeatureConfig
 5431              	.LVL458:
 5432 006c DEE7     		b	.L450
 5433              	.LVL459:
 5434              	.L451:
 5435              	.LCFI45:
 5436              		.cfi_def_cfa_offset 0
 5437              		.cfi_restore 4
 5438              		.cfi_restore 14
 297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 5439              		.loc 1 297 0
 5440 006e 0120     		movs	r0, #1
 5441              	.LVL460:
 342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5442              		.loc 1 342 0
 5443 0070 7047     		bx	lr
 5444              		.cfi_endproc
 5445              	.LFE138:
 5447              		.section	.text.HAL_LIN_Init,"ax",%progbits
 5448              		.align	1
 5449              		.global	HAL_LIN_Init
 5450              		.syntax unified
 5451              		.thumb
 5452              		.thumb_func
 5453              		.fpu fpv5-d16
 5455              	HAL_LIN_Init:
 5456              	.LFB139:
 356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 5457              		.loc 1 356 0
 5458              		.cfi_startproc
 5459              		@ args = 0, pretend = 0, frame = 0
 5460              		@ frame_needed = 0, uses_anonymous_args = 0
 5461              	.LVL461:
 358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 5462              		.loc 1 358 0
 5463 0000 0028     		cmp	r0, #0
 5464 0002 42D0     		beq	.L462
 356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 5465              		.loc 1 356 0
 5466 0004 38B5     		push	{r3, r4, r5, lr}
 5467              	.LCFI46:
 5468              		.cfi_def_cfa_offset 16
 5469              		.cfi_offset 3, -16
 5470              		.cfi_offset 4, -12
 5471              		.cfi_offset 5, -8
 5472              		.cfi_offset 14, -4
 5473 0006 0446     		mov	r4, r0
 369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 5474              		.loc 1 369 0
 5475 0008 C369     		ldr	r3, [r0, #28]
 5476 000a B3F5004F 		cmp	r3, #32768
 5477 000e 3ED0     		beq	.L463
 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 5478              		.loc 1 374 0
 5479 0010 8368     		ldr	r3, [r0, #8]
 5480 0012 002B     		cmp	r3, #0
 5481 0014 3DD1     		bne	.L464
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 161


 5482 0016 0D46     		mov	r5, r1
 379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 5483              		.loc 1 379 0
 5484 0018 90F87930 		ldrb	r3, [r0, #121]	@ zero_extendqisi2
 5485 001c 63B3     		cbz	r3, .L469
 5486              	.LVL462:
 5487              	.L460:
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5488              		.loc 1 388 0
 5489 001e 2423     		movs	r3, #36
 5490 0020 84F87930 		strb	r3, [r4, #121]
 391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5491              		.loc 1 391 0
 5492 0024 2268     		ldr	r2, [r4]
 5493 0026 1368     		ldr	r3, [r2]
 5494 0028 23F00103 		bic	r3, r3, #1
 5495 002c 1360     		str	r3, [r2]
 394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 5496              		.loc 1 394 0
 5497 002e 2046     		mov	r0, r4
 5498 0030 FFF7FEFF 		bl	UART_SetConfig
 5499              	.LVL463:
 5500 0034 0128     		cmp	r0, #1
 5501 0036 2DD0     		beq	.L459
 399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 5502              		.loc 1 399 0
 5503 0038 636B     		ldr	r3, [r4, #52]
 5504 003a 13BB     		cbnz	r3, .L470
 5505              	.L461:
 407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 5506              		.loc 1 407 0
 5507 003c 2268     		ldr	r2, [r4]
 5508 003e 5368     		ldr	r3, [r2, #4]
 5509 0040 23F40063 		bic	r3, r3, #2048
 5510 0044 5360     		str	r3, [r2, #4]
 408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5511              		.loc 1 408 0
 5512 0046 2268     		ldr	r2, [r4]
 5513 0048 9368     		ldr	r3, [r2, #8]
 5514 004a 23F02A03 		bic	r3, r3, #42
 5515 004e 9360     		str	r3, [r2, #8]
 411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5516              		.loc 1 411 0
 5517 0050 2268     		ldr	r2, [r4]
 5518 0052 5368     		ldr	r3, [r2, #4]
 5519 0054 43F48043 		orr	r3, r3, #16384
 5520 0058 5360     		str	r3, [r2, #4]
 414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5521              		.loc 1 414 0
 5522 005a 2368     		ldr	r3, [r4]
 5523 005c 5968     		ldr	r1, [r3, #4]
 5524 005e 21F02001 		bic	r1, r1, #32
 5525 0062 2943     		orrs	r1, r1, r5
 5526 0064 5960     		str	r1, [r3, #4]
 417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5527              		.loc 1 417 0
 5528 0066 2268     		ldr	r2, [r4]
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 162


 5529 0068 1368     		ldr	r3, [r2]
 5530 006a 43F00103 		orr	r3, r3, #1
 5531 006e 1360     		str	r3, [r2]
 420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 5532              		.loc 1 420 0
 5533 0070 2046     		mov	r0, r4
 5534 0072 FFF7FEFF 		bl	UART_CheckIdleState
 5535              	.LVL464:
 5536 0076 0DE0     		b	.L459
 5537              	.LVL465:
 5538              	.L469:
 382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5539              		.loc 1 382 0
 5540 0078 80F87830 		strb	r3, [r0, #120]
 385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 5541              		.loc 1 385 0
 5542 007c FFF7FEFF 		bl	HAL_UART_MspInit
 5543              	.LVL466:
 5544 0080 CDE7     		b	.L460
 5545              	.L470:
 401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 5546              		.loc 1 401 0
 5547 0082 2046     		mov	r0, r4
 5548 0084 FFF7FEFF 		bl	UART_AdvFeatureConfig
 5549              	.LVL467:
 5550 0088 D8E7     		b	.L461
 5551              	.LVL468:
 5552              	.L462:
 5553              	.LCFI47:
 5554              		.cfi_def_cfa_offset 0
 5555              		.cfi_restore 3
 5556              		.cfi_restore 4
 5557              		.cfi_restore 5
 5558              		.cfi_restore 14
 360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 5559              		.loc 1 360 0
 5560 008a 0120     		movs	r0, #1
 5561              	.LVL469:
 421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5562              		.loc 1 421 0
 5563 008c 7047     		bx	lr
 5564              	.LVL470:
 5565              	.L463:
 5566              	.LCFI48:
 5567              		.cfi_def_cfa_offset 16
 5568              		.cfi_offset 3, -16
 5569              		.cfi_offset 4, -12
 5570              		.cfi_offset 5, -8
 5571              		.cfi_offset 14, -4
 371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 5572              		.loc 1 371 0
 5573 008e 0120     		movs	r0, #1
 5574              	.LVL471:
 5575 0090 00E0     		b	.L459
 5576              	.LVL472:
 5577              	.L464:
 376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 163


 5578              		.loc 1 376 0
 5579 0092 0120     		movs	r0, #1
 5580              	.LVL473:
 5581              	.L459:
 421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5582              		.loc 1 421 0
 5583 0094 38BD     		pop	{r3, r4, r5, pc}
 5584              		.cfi_endproc
 5585              	.LFE139:
 5587              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 5588              		.align	1
 5589              		.global	HAL_MultiProcessor_Init
 5590              		.syntax unified
 5591              		.thumb
 5592              		.thumb_func
 5593              		.fpu fpv5-d16
 5595              	HAL_MultiProcessor_Init:
 5596              	.LFB140:
 443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 5597              		.loc 1 443 0
 5598              		.cfi_startproc
 5599              		@ args = 0, pretend = 0, frame = 0
 5600              		@ frame_needed = 0, uses_anonymous_args = 0
 5601              	.LVL474:
 445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 5602              		.loc 1 445 0
 5603 0000 0028     		cmp	r0, #0
 5604 0002 42D0     		beq	.L476
 443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Check the UART handle allocation */
 5605              		.loc 1 443 0
 5606 0004 70B5     		push	{r4, r5, r6, lr}
 5607              	.LCFI49:
 5608              		.cfi_def_cfa_offset 16
 5609              		.cfi_offset 4, -16
 5610              		.cfi_offset 5, -12
 5611              		.cfi_offset 6, -8
 5612              		.cfi_offset 14, -4
 5613 0006 0446     		mov	r4, r0
 5614 0008 1546     		mov	r5, r2
 5615 000a 0E46     		mov	r6, r1
 453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 5616              		.loc 1 453 0
 5617 000c 90F87930 		ldrb	r3, [r0, #121]	@ zero_extendqisi2
 5618 0010 53B3     		cbz	r3, .L481
 5619              	.LVL475:
 5620              	.L473:
 462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5621              		.loc 1 462 0
 5622 0012 2423     		movs	r3, #36
 5623 0014 84F87930 		strb	r3, [r4, #121]
 465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5624              		.loc 1 465 0
 5625 0018 2268     		ldr	r2, [r4]
 5626 001a 1368     		ldr	r3, [r2]
 5627 001c 23F00103 		bic	r3, r3, #1
 5628 0020 1360     		str	r3, [r2]
 468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 164


 5629              		.loc 1 468 0
 5630 0022 2046     		mov	r0, r4
 5631 0024 FFF7FEFF 		bl	UART_SetConfig
 5632              	.LVL476:
 5633 0028 0128     		cmp	r0, #1
 5634 002a 1CD0     		beq	.L472
 473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 5635              		.loc 1 473 0
 5636 002c 636B     		ldr	r3, [r4, #52]
 5637 002e 03BB     		cbnz	r3, .L482
 5638              	.L474:
 481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 5639              		.loc 1 481 0
 5640 0030 2268     		ldr	r2, [r4]
 5641 0032 5368     		ldr	r3, [r2, #4]
 5642 0034 23F49043 		bic	r3, r3, #18432
 5643 0038 5360     		str	r3, [r2, #4]
 482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5644              		.loc 1 482 0
 5645 003a 2268     		ldr	r2, [r4]
 5646 003c 9368     		ldr	r3, [r2, #8]
 5647 003e 23F02A03 		bic	r3, r3, #42
 5648 0042 9360     		str	r3, [r2, #8]
 484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   {
 5649              		.loc 1 484 0
 5650 0044 B5F5006F 		cmp	r5, #2048
 5651 0048 17D0     		beq	.L483
 5652              	.L475:
 491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5653              		.loc 1 491 0
 5654 004a 2368     		ldr	r3, [r4]
 5655 004c 1A68     		ldr	r2, [r3]
 5656 004e 22F40062 		bic	r2, r2, #2048
 5657 0052 1543     		orrs	r5, r5, r2
 5658              	.LVL477:
 5659 0054 1D60     		str	r5, [r3]
 494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5660              		.loc 1 494 0
 5661 0056 2268     		ldr	r2, [r4]
 5662 0058 1368     		ldr	r3, [r2]
 5663 005a 43F00103 		orr	r3, r3, #1
 5664 005e 1360     		str	r3, [r2]
 497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 5665              		.loc 1 497 0
 5666 0060 2046     		mov	r0, r4
 5667 0062 FFF7FEFF 		bl	UART_CheckIdleState
 5668              	.LVL478:
 5669              	.L472:
 498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5670              		.loc 1 498 0
 5671 0066 70BD     		pop	{r4, r5, r6, pc}
 5672              	.LVL479:
 5673              	.L481:
 456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5674              		.loc 1 456 0
 5675 0068 80F87830 		strb	r3, [r0, #120]
 459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 165


 5676              		.loc 1 459 0
 5677 006c FFF7FEFF 		bl	HAL_UART_MspInit
 5678              	.LVL480:
 5679 0070 CFE7     		b	.L473
 5680              	.L482:
 475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 5681              		.loc 1 475 0
 5682 0072 2046     		mov	r0, r4
 5683 0074 FFF7FEFF 		bl	UART_AdvFeatureConfig
 5684              	.LVL481:
 5685 0078 DAE7     		b	.L474
 5686              	.L483:
 487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 5687              		.loc 1 487 0
 5688 007a 2368     		ldr	r3, [r4]
 5689 007c 5968     		ldr	r1, [r3, #4]
 5690 007e 21F07F41 		bic	r1, r1, #-16777216
 5691 0082 41EA0666 		orr	r6, r1, r6, lsl #24
 5692 0086 5E60     		str	r6, [r3, #4]
 5693 0088 DFE7     		b	.L475
 5694              	.LVL482:
 5695              	.L476:
 5696              	.LCFI50:
 5697              		.cfi_def_cfa_offset 0
 5698              		.cfi_restore 4
 5699              		.cfi_restore 5
 5700              		.cfi_restore 6
 5701              		.cfi_restore 14
 447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   }
 5702              		.loc 1 447 0
 5703 008a 0120     		movs	r0, #1
 5704              	.LVL483:
 498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5705              		.loc 1 498 0
 5706 008c 7047     		bx	lr
 5707              		.cfi_endproc
 5708              	.LFE140:
 5710              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 5711              		.align	1
 5712              		.global	HAL_MultiProcessor_EnableMuteMode
 5713              		.syntax unified
 5714              		.thumb
 5715              		.thumb_func
 5716              		.fpu fpv5-d16
 5718              	HAL_MultiProcessor_EnableMuteMode:
 5719              	.LFB168:
1873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Process Locked */
 5720              		.loc 1 1873 0
 5721              		.cfi_startproc
 5722              		@ args = 0, pretend = 0, frame = 0
 5723              		@ frame_needed = 0, uses_anonymous_args = 0
 5724              	.LVL484:
 5725 0000 08B5     		push	{r3, lr}
 5726              	.LCFI51:
 5727              		.cfi_def_cfa_offset 8
 5728              		.cfi_offset 3, -8
 5729              		.cfi_offset 14, -4
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 166


1875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5730              		.loc 1 1875 0
 5731 0002 90F87830 		ldrb	r3, [r0, #120]	@ zero_extendqisi2
 5732 0006 012B     		cmp	r3, #1
 5733 0008 10D0     		beq	.L486
1875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5734              		.loc 1 1875 0 is_stmt 0 discriminator 2
 5735 000a 0123     		movs	r3, #1
 5736 000c 80F87830 		strb	r3, [r0, #120]
1877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5737              		.loc 1 1877 0 is_stmt 1 discriminator 2
 5738 0010 2423     		movs	r3, #36
 5739 0012 80F87930 		strb	r3, [r0, #121]
1880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5740              		.loc 1 1880 0 discriminator 2
 5741 0016 0268     		ldr	r2, [r0]
 5742 0018 1368     		ldr	r3, [r2]
 5743 001a 43F40053 		orr	r3, r3, #8192
 5744 001e 1360     		str	r3, [r2]
1882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5745              		.loc 1 1882 0 discriminator 2
 5746 0020 2023     		movs	r3, #32
 5747 0022 80F87930 		strb	r3, [r0, #121]
1884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 5748              		.loc 1 1884 0 discriminator 2
 5749 0026 FFF7FEFF 		bl	UART_CheckIdleState
 5750              	.LVL485:
 5751              	.L485:
1885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5752              		.loc 1 1885 0
 5753 002a 08BD     		pop	{r3, pc}
 5754              	.LVL486:
 5755              	.L486:
1875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5756              		.loc 1 1875 0
 5757 002c 0220     		movs	r0, #2
 5758              	.LVL487:
 5759 002e FCE7     		b	.L485
 5760              		.cfi_endproc
 5761              	.LFE168:
 5763              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 5764              		.align	1
 5765              		.global	HAL_MultiProcessor_DisableMuteMode
 5766              		.syntax unified
 5767              		.thumb
 5768              		.thumb_func
 5769              		.fpu fpv5-d16
 5771              	HAL_MultiProcessor_DisableMuteMode:
 5772              	.LFB169:
1894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c ****   /* Process Locked */
 5773              		.loc 1 1894 0
 5774              		.cfi_startproc
 5775              		@ args = 0, pretend = 0, frame = 0
 5776              		@ frame_needed = 0, uses_anonymous_args = 0
 5777              	.LVL488:
 5778 0000 08B5     		push	{r3, lr}
 5779              	.LCFI52:
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 167


 5780              		.cfi_def_cfa_offset 8
 5781              		.cfi_offset 3, -8
 5782              		.cfi_offset 14, -4
1896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5783              		.loc 1 1896 0
 5784 0002 90F87830 		ldrb	r3, [r0, #120]	@ zero_extendqisi2
 5785 0006 012B     		cmp	r3, #1
 5786 0008 10D0     		beq	.L490
1896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5787              		.loc 1 1896 0 is_stmt 0 discriminator 2
 5788 000a 0123     		movs	r3, #1
 5789 000c 80F87830 		strb	r3, [r0, #120]
1898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5790              		.loc 1 1898 0 is_stmt 1 discriminator 2
 5791 0010 2423     		movs	r3, #36
 5792 0012 80F87930 		strb	r3, [r0, #121]
1901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5793              		.loc 1 1901 0 discriminator 2
 5794 0016 0268     		ldr	r2, [r0]
 5795 0018 1368     		ldr	r3, [r2]
 5796 001a 23F40053 		bic	r3, r3, #8192
 5797 001e 1360     		str	r3, [r2]
1903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5798              		.loc 1 1903 0 discriminator 2
 5799 0020 2023     		movs	r3, #32
 5800 0022 80F87930 		strb	r3, [r0, #121]
1905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** }
 5801              		.loc 1 1905 0 discriminator 2
 5802 0026 FFF7FEFF 		bl	UART_CheckIdleState
 5803              	.LVL489:
 5804              	.L489:
1906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5805              		.loc 1 1906 0
 5806 002a 08BD     		pop	{r3, pc}
 5807              	.LVL490:
 5808              	.L490:
1896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c **** 
 5809              		.loc 1 1896 0
 5810 002c 0220     		movs	r0, #2
 5811              	.LVL491:
 5812 002e FCE7     		b	.L489
 5813              		.cfi_endproc
 5814              	.LFE169:
 5816              		.section	.rodata.UARTPrescTable,"a",%progbits
 5817              		.align	2
 5818              		.set	.LANCHOR0,. + 0
 5821              	UARTPrescTable:
 5822 0000 0100     		.short	1
 5823 0002 0200     		.short	2
 5824 0004 0400     		.short	4
 5825 0006 0600     		.short	6
 5826 0008 0800     		.short	8
 5827 000a 0A00     		.short	10
 5828 000c 0C00     		.short	12
 5829 000e 1000     		.short	16
 5830 0010 2000     		.short	32
 5831 0012 4000     		.short	64
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 168


 5832 0014 8000     		.short	128
 5833 0016 0001     		.short	256
 5834              		.text
 5835              	.Letext0:
 5836              		.file 2 "c:\\gcc\\arm-none-eabi\\include\\machine\\_default_types.h"
 5837              		.file 3 "c:\\gcc\\arm-none-eabi\\include\\sys\\_stdint.h"
 5838              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 5839              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 5840              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 5841              		.file 7 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
 5842              		.file 8 "c:\\gcc\\arm-none-eabi\\include\\sys\\lock.h"
 5843              		.file 9 "c:\\gcc\\arm-none-eabi\\include\\sys\\_types.h"
 5844              		.file 10 "c:\\gcc\\lib\\gcc\\arm-none-eabi\\7.3.1\\include\\stddef.h"
 5845              		.file 11 "c:\\gcc\\arm-none-eabi\\include\\sys\\reent.h"
 5846              		.file 12 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 5847              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc_ex.h"
 5848              		.file 14 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 5849              		.file 15 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 5850              		.file 16 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 5851              		.file 17 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
 5852              		.file 18 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart_ex.h"
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 169


DEFINED SYMBOLS
                            *ABS*:00000000 stm32h7xx_hal_uart.c
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:17     .text.UART_EndTxTransfer:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:23     .text.UART_EndTxTransfer:00000000 UART_EndTxTransfer
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:46     .text.UART_EndRxTransfer:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:52     .text.UART_EndRxTransfer:00000000 UART_EndRxTransfer
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:79     .text.UART_Transmit_IT:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:85     .text.UART_Transmit_IT:00000000 UART_Transmit_IT
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:182    .text.HAL_UART_MspInit:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:189    .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:203    .text.HAL_UART_MspDeInit:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:210    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:224    .text.HAL_UART_DeInit:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:231    .text.HAL_UART_DeInit:00000000 HAL_UART_DeInit
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:299    .text.HAL_UART_Transmit_IT:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:306    .text.HAL_UART_Transmit_IT:00000000 HAL_UART_Transmit_IT
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:393    .text.HAL_UART_Receive_IT:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:400    .text.HAL_UART_Receive_IT:00000000 HAL_UART_Receive_IT
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:549    .text.HAL_UART_Transmit_DMA:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:556    .text.HAL_UART_Transmit_DMA:00000000 HAL_UART_Transmit_DMA
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:666    .text.HAL_UART_Transmit_DMA:00000088 $d
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:1317   .text.UART_DMATransmitCplt:00000000 UART_DMATransmitCplt
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:1430   .text.UART_DMATxHalfCplt:00000000 UART_DMATxHalfCplt
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:1733   .text.UART_DMAError:00000000 UART_DMAError
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:673    .text.HAL_UART_Receive_DMA:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:680    .text.HAL_UART_Receive_DMA:00000000 HAL_UART_Receive_DMA
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:794    .text.HAL_UART_Receive_DMA:00000090 $d
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:1481   .text.UART_DMAReceiveCplt:00000000 UART_DMAReceiveCplt
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:1682   .text.UART_DMARxHalfCplt:00000000 UART_DMARxHalfCplt
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:801    .text.HAL_UART_DMAPause:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:808    .text.HAL_UART_DMAPause:00000000 HAL_UART_DMAPause
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:887    .text.HAL_UART_DMAResume:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:894    .text.HAL_UART_DMAResume:00000000 HAL_UART_DMAResume
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:967    .text.HAL_UART_DMAStop:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:974    .text.HAL_UART_DMAStop:00000000 HAL_UART_DMAStop
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:1055   .text.HAL_UART_Abort:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:1062   .text.HAL_UART_Abort:00000000 HAL_UART_Abort
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:1149   .text.HAL_UART_Abort:00000078 $d
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:1154   .text.HAL_UART_AbortTransmit:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:1161   .text.HAL_UART_AbortTransmit:00000000 HAL_UART_AbortTransmit
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:1217   .text.HAL_UART_AbortReceive:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:1224   .text.HAL_UART_AbortReceive:00000000 HAL_UART_AbortReceive
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:1285   .text.HAL_UART_AbortReceive:0000004c $d
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:1290   .text.HAL_UART_TxCpltCallback:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:1297   .text.HAL_UART_TxCpltCallback:00000000 HAL_UART_TxCpltCallback
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:1311   .text.UART_DMATransmitCplt:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:1367   .text.UART_EndTransmit_IT:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:1373   .text.UART_EndTransmit_IT:00000000 UART_EndTransmit_IT
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:1403   .text.HAL_UART_TxHalfCpltCallback:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:1410   .text.HAL_UART_TxHalfCpltCallback:00000000 HAL_UART_TxHalfCpltCallback
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:1424   .text.UART_DMATxHalfCplt:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:1454   .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:1461   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:1475   .text.UART_DMAReceiveCplt:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:1533   .text.UART_Receive_IT:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:1539   .text.UART_Receive_IT:00000000 UART_Receive_IT
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:1655   .text.HAL_UART_RxHalfCpltCallback:00000000 $t
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 170


C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:1662   .text.HAL_UART_RxHalfCpltCallback:00000000 HAL_UART_RxHalfCpltCallback
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:1676   .text.UART_DMARxHalfCplt:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:1706   .text.HAL_UART_ErrorCallback:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:1713   .text.HAL_UART_ErrorCallback:00000000 HAL_UART_ErrorCallback
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:1727   .text.UART_DMAError:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:1809   .text.HAL_UART_IRQHandler:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:1816   .text.HAL_UART_IRQHandler:00000000 HAL_UART_IRQHandler
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:2098   .text.HAL_UART_IRQHandler:00000184 $d
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:2110   .text.UART_DMAAbortOnError:00000000 UART_DMAAbortOnError
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:2104   .text.UART_DMAAbortOnError:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:2139   .text.HAL_UART_AbortCpltCallback:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:2146   .text.HAL_UART_AbortCpltCallback:00000000 HAL_UART_AbortCpltCallback
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:2160   .text.HAL_UART_Abort_IT:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:2167   .text.HAL_UART_Abort_IT:00000000 HAL_UART_Abort_IT
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:2322   .text.HAL_UART_Abort_IT:000000c8 $d
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:2396   .text.UART_DMATxAbortCallback:00000000 UART_DMATxAbortCallback
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:2335   .text.UART_DMARxAbortCallback:00000000 UART_DMARxAbortCallback
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:2329   .text.UART_DMARxAbortCallback:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:2390   .text.UART_DMATxAbortCallback:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:2451   .text.HAL_UART_AbortTransmitCpltCallback:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:2458   .text.HAL_UART_AbortTransmitCpltCallback:00000000 HAL_UART_AbortTransmitCpltCallback
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:2472   .text.HAL_UART_AbortTransmit_IT:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:2479   .text.HAL_UART_AbortTransmit_IT:00000000 HAL_UART_AbortTransmit_IT
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:2559   .text.HAL_UART_AbortTransmit_IT:00000068 $d
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:2570   .text.UART_DMATxOnlyAbortCallback:00000000 UART_DMATxOnlyAbortCallback
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:2564   .text.UART_DMATxOnlyAbortCallback:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:2600   .text.HAL_UART_AbortReceiveCpltCallback:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:2607   .text.HAL_UART_AbortReceiveCpltCallback:00000000 HAL_UART_AbortReceiveCpltCallback
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:2621   .text.HAL_UART_AbortReceive_IT:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:2628   .text.HAL_UART_AbortReceive_IT:00000000 HAL_UART_AbortReceive_IT
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:2716   .text.HAL_UART_AbortReceive_IT:00000074 $d
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:2728   .text.UART_DMARxOnlyAbortCallback:00000000 UART_DMARxOnlyAbortCallback
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:2722   .text.UART_DMARxOnlyAbortCallback:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:2762   .text.HAL_MultiProcessor_EnterMuteMode:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:2769   .text.HAL_MultiProcessor_EnterMuteMode:00000000 HAL_MultiProcessor_EnterMuteMode
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:2788   .text.HAL_HalfDuplex_EnableTransmitter:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:2795   .text.HAL_HalfDuplex_EnableTransmitter:00000000 HAL_HalfDuplex_EnableTransmitter
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:2844   .text.HAL_HalfDuplex_EnableReceiver:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:2851   .text.HAL_HalfDuplex_EnableReceiver:00000000 HAL_HalfDuplex_EnableReceiver
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:2900   .text.HAL_LIN_SendBreak:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:2907   .text.HAL_LIN_SendBreak:00000000 HAL_LIN_SendBreak
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:2951   .text.HAL_UART_GetState:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:2958   .text.HAL_UART_GetState:00000000 HAL_UART_GetState
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:2980   .text.HAL_UART_GetError:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:2987   .text.HAL_UART_GetError:00000000 HAL_UART_GetError
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:3005   .text.UART_SetConfig:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:3012   .text.UART_SetConfig:00000000 UART_SetConfig
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:3156   .text.UART_SetConfig:000000c4 $d
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:3197   .text.UART_SetConfig:00000116 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:3237   .text.UART_SetConfig:0000013e $d
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:3243   .text.UART_SetConfig:0000014a $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:3283   .text.UART_SetConfig:00000172 $d
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:3289   .text.UART_SetConfig:0000017e $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:3329   .text.UART_SetConfig:000001a6 $d
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:3335   .text.UART_SetConfig:000001b2 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:3375   .text.UART_SetConfig:000001da $d
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:3381   .text.UART_SetConfig:000001e6 $t
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 171


C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:3421   .text.UART_SetConfig:0000020e $d
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:3470   .text.UART_SetConfig:0000023c $d
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:3485   .text.UART_SetConfig:0000026c $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:3517   .text.UART_SetConfig:00000290 $d
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:3523   .text.UART_SetConfig:00000296 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:3563   .text.UART_SetConfig:000002be $d
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:3569   .text.UART_SetConfig:000002c4 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:3609   .text.UART_SetConfig:000002ee $d
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:3615   .text.UART_SetConfig:000002f4 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:3664   .text.UART_SetConfig:00000328 $d
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:3730   .text.UART_SetConfig:000003aa $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:3942   .text.UART_SetConfig:000004f0 $d
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:3951   .text.UART_SetConfig:00000508 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:4105   .text.UART_SetConfig:0000064a $d
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:4338   .text.UART_SetConfig:000007a4 $d
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:4345   .text.UART_SetConfig:000007b4 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:4542   .text.UART_SetConfig:00000920 $d
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:4550   .text.UART_AdvFeatureConfig:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:4557   .text.UART_AdvFeatureConfig:00000000 UART_AdvFeatureConfig
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:4680   .text.UART_WaitOnFlagUntilTimeout:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:4687   .text.UART_WaitOnFlagUntilTimeout:00000000 UART_WaitOnFlagUntilTimeout
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:4762   .text.HAL_UART_Transmit:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:4769   .text.HAL_UART_Transmit:00000000 HAL_UART_Transmit
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:4934   .text.HAL_UART_Receive:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:4941   .text.HAL_UART_Receive:00000000 HAL_UART_Receive
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:5148   .text.UART_CheckIdleState:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:5155   .text.UART_CheckIdleState:00000000 UART_CheckIdleState
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:5248   .text.HAL_UART_Init:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:5255   .text.HAL_UART_Init:00000000 HAL_UART_Init
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:5345   .text.HAL_HalfDuplex_Init:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:5352   .text.HAL_HalfDuplex_Init:00000000 HAL_HalfDuplex_Init
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:5448   .text.HAL_LIN_Init:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:5455   .text.HAL_LIN_Init:00000000 HAL_LIN_Init
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:5588   .text.HAL_MultiProcessor_Init:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:5595   .text.HAL_MultiProcessor_Init:00000000 HAL_MultiProcessor_Init
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:5711   .text.HAL_MultiProcessor_EnableMuteMode:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:5718   .text.HAL_MultiProcessor_EnableMuteMode:00000000 HAL_MultiProcessor_EnableMuteMode
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:5764   .text.HAL_MultiProcessor_DisableMuteMode:00000000 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:5771   .text.HAL_MultiProcessor_DisableMuteMode:00000000 HAL_MultiProcessor_DisableMuteMode
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:5817   .rodata.UARTPrescTable:00000000 $d
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:5821   .rodata.UARTPrescTable:00000000 UARTPrescTable
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:3462   .text.UART_SetConfig:00000237 $d
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:3462   .text.UART_SetConfig:00000238 $t
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:4170   .text.UART_SetConfig:0000068b $d
C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s:4170   .text.UART_SetConfig:0000068c $t

UNDEFINED SYMBOLS
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_GetError
HAL_DMA_Abort_IT
HAL_UARTEx_WakeupCallback
__aeabi_uldivmod
HAL_RCCEx_GetPLL2ClockFreq
HAL_RCCEx_GetD3PCLK1Freq
HAL_RCCEx_GetPLL3ClockFreq
HAL_RCC_GetPCLK1Freq
ARM GAS  C:\Users\qqffx\AppData\Local\Temp\ccsTdts5.s 			page 172


HAL_RCC_GetPCLK2Freq
HAL_GetTick
